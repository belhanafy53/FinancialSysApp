//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FinancialSysApp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LetterWarranty")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LetterWarranty : global::System.Data.DataSet {
        
        private Dtb_WarrantyLetterDataTable tableDtb_WarrantyLetter;
        
        private DtbWarrantyLetterRefundDataTable tableDtbWarrantyLetterRefund;
        
        private DtbLetterWAuditDataTable tableDtbLetterWAudit;
        
        private DtbArchOrderAndLetterWDataTable tableDtbArchOrderAndLetterW;
        
        private Dtb_LttrWrrntyRepDataTable tableDtb_LttrWrrntyRep;
        
        private Dtb_RefundLtrWarrantyRepDataTable tableDtb_RefundLtrWarrantyRep;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LetterWarranty() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LetterWarranty(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Dtb_WarrantyLetter"] != null)) {
                    base.Tables.Add(new Dtb_WarrantyLetterDataTable(ds.Tables["Dtb_WarrantyLetter"]));
                }
                if ((ds.Tables["DtbWarrantyLetterRefund"] != null)) {
                    base.Tables.Add(new DtbWarrantyLetterRefundDataTable(ds.Tables["DtbWarrantyLetterRefund"]));
                }
                if ((ds.Tables["DtbLetterWAudit"] != null)) {
                    base.Tables.Add(new DtbLetterWAuditDataTable(ds.Tables["DtbLetterWAudit"]));
                }
                if ((ds.Tables["DtbArchOrderAndLetterW"] != null)) {
                    base.Tables.Add(new DtbArchOrderAndLetterWDataTable(ds.Tables["DtbArchOrderAndLetterW"]));
                }
                if ((ds.Tables["Dtb_LttrWrrntyRep"] != null)) {
                    base.Tables.Add(new Dtb_LttrWrrntyRepDataTable(ds.Tables["Dtb_LttrWrrntyRep"]));
                }
                if ((ds.Tables["Dtb_RefundLtrWarrantyRep"] != null)) {
                    base.Tables.Add(new Dtb_RefundLtrWarrantyRepDataTable(ds.Tables["Dtb_RefundLtrWarrantyRep"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Dtb_WarrantyLetterDataTable Dtb_WarrantyLetter {
            get {
                return this.tableDtb_WarrantyLetter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtbWarrantyLetterRefundDataTable DtbWarrantyLetterRefund {
            get {
                return this.tableDtbWarrantyLetterRefund;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtbLetterWAuditDataTable DtbLetterWAudit {
            get {
                return this.tableDtbLetterWAudit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtbArchOrderAndLetterWDataTable DtbArchOrderAndLetterW {
            get {
                return this.tableDtbArchOrderAndLetterW;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Dtb_LttrWrrntyRepDataTable Dtb_LttrWrrntyRep {
            get {
                return this.tableDtb_LttrWrrntyRep;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Dtb_RefundLtrWarrantyRepDataTable Dtb_RefundLtrWarrantyRep {
            get {
                return this.tableDtb_RefundLtrWarrantyRep;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            LetterWarranty cln = ((LetterWarranty)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Dtb_WarrantyLetter"] != null)) {
                    base.Tables.Add(new Dtb_WarrantyLetterDataTable(ds.Tables["Dtb_WarrantyLetter"]));
                }
                if ((ds.Tables["DtbWarrantyLetterRefund"] != null)) {
                    base.Tables.Add(new DtbWarrantyLetterRefundDataTable(ds.Tables["DtbWarrantyLetterRefund"]));
                }
                if ((ds.Tables["DtbLetterWAudit"] != null)) {
                    base.Tables.Add(new DtbLetterWAuditDataTable(ds.Tables["DtbLetterWAudit"]));
                }
                if ((ds.Tables["DtbArchOrderAndLetterW"] != null)) {
                    base.Tables.Add(new DtbArchOrderAndLetterWDataTable(ds.Tables["DtbArchOrderAndLetterW"]));
                }
                if ((ds.Tables["Dtb_LttrWrrntyRep"] != null)) {
                    base.Tables.Add(new Dtb_LttrWrrntyRepDataTable(ds.Tables["Dtb_LttrWrrntyRep"]));
                }
                if ((ds.Tables["Dtb_RefundLtrWarrantyRep"] != null)) {
                    base.Tables.Add(new Dtb_RefundLtrWarrantyRepDataTable(ds.Tables["Dtb_RefundLtrWarrantyRep"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDtb_WarrantyLetter = ((Dtb_WarrantyLetterDataTable)(base.Tables["Dtb_WarrantyLetter"]));
            if ((initTable == true)) {
                if ((this.tableDtb_WarrantyLetter != null)) {
                    this.tableDtb_WarrantyLetter.InitVars();
                }
            }
            this.tableDtbWarrantyLetterRefund = ((DtbWarrantyLetterRefundDataTable)(base.Tables["DtbWarrantyLetterRefund"]));
            if ((initTable == true)) {
                if ((this.tableDtbWarrantyLetterRefund != null)) {
                    this.tableDtbWarrantyLetterRefund.InitVars();
                }
            }
            this.tableDtbLetterWAudit = ((DtbLetterWAuditDataTable)(base.Tables["DtbLetterWAudit"]));
            if ((initTable == true)) {
                if ((this.tableDtbLetterWAudit != null)) {
                    this.tableDtbLetterWAudit.InitVars();
                }
            }
            this.tableDtbArchOrderAndLetterW = ((DtbArchOrderAndLetterWDataTable)(base.Tables["DtbArchOrderAndLetterW"]));
            if ((initTable == true)) {
                if ((this.tableDtbArchOrderAndLetterW != null)) {
                    this.tableDtbArchOrderAndLetterW.InitVars();
                }
            }
            this.tableDtb_LttrWrrntyRep = ((Dtb_LttrWrrntyRepDataTable)(base.Tables["Dtb_LttrWrrntyRep"]));
            if ((initTable == true)) {
                if ((this.tableDtb_LttrWrrntyRep != null)) {
                    this.tableDtb_LttrWrrntyRep.InitVars();
                }
            }
            this.tableDtb_RefundLtrWarrantyRep = ((Dtb_RefundLtrWarrantyRepDataTable)(base.Tables["Dtb_RefundLtrWarrantyRep"]));
            if ((initTable == true)) {
                if ((this.tableDtb_RefundLtrWarrantyRep != null)) {
                    this.tableDtb_RefundLtrWarrantyRep.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "LetterWarranty";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LetterWarranty.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDtb_WarrantyLetter = new Dtb_WarrantyLetterDataTable();
            base.Tables.Add(this.tableDtb_WarrantyLetter);
            this.tableDtbWarrantyLetterRefund = new DtbWarrantyLetterRefundDataTable();
            base.Tables.Add(this.tableDtbWarrantyLetterRefund);
            this.tableDtbLetterWAudit = new DtbLetterWAuditDataTable();
            base.Tables.Add(this.tableDtbLetterWAudit);
            this.tableDtbArchOrderAndLetterW = new DtbArchOrderAndLetterWDataTable();
            base.Tables.Add(this.tableDtbArchOrderAndLetterW);
            this.tableDtb_LttrWrrntyRep = new Dtb_LttrWrrntyRepDataTable();
            base.Tables.Add(this.tableDtb_LttrWrrntyRep);
            this.tableDtb_RefundLtrWarrantyRep = new Dtb_RefundLtrWarrantyRepDataTable();
            base.Tables.Add(this.tableDtb_RefundLtrWarrantyRep);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDtb_WarrantyLetter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDtbWarrantyLetterRefund() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDtbLetterWAudit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDtbArchOrderAndLetterW() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDtb_LttrWrrntyRep() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDtb_RefundLtrWarrantyRep() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LetterWarranty ds = new LetterWarranty();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Dtb_WarrantyLetterRowChangeEventHandler(object sender, Dtb_WarrantyLetterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DtbWarrantyLetterRefundRowChangeEventHandler(object sender, DtbWarrantyLetterRefundRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DtbLetterWAuditRowChangeEventHandler(object sender, DtbLetterWAuditRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DtbArchOrderAndLetterWRowChangeEventHandler(object sender, DtbArchOrderAndLetterWRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Dtb_LttrWrrntyRepRowChangeEventHandler(object sender, Dtb_LttrWrrntyRepRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Dtb_RefundLtrWarrantyRepRowChangeEventHandler(object sender, Dtb_RefundLtrWarrantyRepRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Dtb_WarrantyLetterDataTable : global::System.Data.TypedTableBase<Dtb_WarrantyLetterRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnLetterWarrantyNo;
            
            private global::System.Data.DataColumn columnLetterWarrantyDate;
            
            private global::System.Data.DataColumn columnLetterWarrantyExpireDate;
            
            private global::System.Data.DataColumn columnFileNo;
            
            private global::System.Data.DataColumn columnValue;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnSupID;
            
            private global::System.Data.DataColumn columnLetterWarrantyExpandDate;
            
            private global::System.Data.DataColumn columnLetterWarrantyPurpose;
            
            private global::System.Data.DataColumn columnManagementID;
            
            private global::System.Data.DataColumn columnLetterWarrantyKind;
            
            private global::System.Data.DataColumn columnTendersAuctionsID;
            
            private global::System.Data.DataColumn columnLetterProcessID;
            
            private global::System.Data.DataColumn columnOrderID;
            
            private global::System.Data.DataColumn columnAssayesID;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnManagementExportLettrID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnLetterWarrantyNoScnd;
            
            private global::System.Data.DataColumn columnLetterWarrantyNoFull;
            
            private global::System.Data.DataColumn columnFinancialMember;
            
            private global::System.Data.DataColumn columnLetterWDateRecieved;
            
            private global::System.Data.DataColumn columnConfLetterWarrantyExpireDate;
            
            private global::System.Data.DataColumn columnConfValue;
            
            private global::System.Data.DataColumn columnConfTender;
            
            private global::System.Data.DataColumn columnBeneficiaryID;
            
            private global::System.Data.DataColumn columnDecisionsResponspilitiesID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnProjectName;
            
            private global::System.Data.DataColumn columnSupplierName;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnManagementName;
            
            private global::System.Data.DataColumn columnCurrencyName;
            
            private global::System.Data.DataColumn columnBenfcName;
            
            private global::System.Data.DataColumn columnLetterWDateRecieved1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_WarrantyLetterDataTable() {
                this.TableName = "Dtb_WarrantyLetter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Dtb_WarrantyLetterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Dtb_WarrantyLetterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyNoColumn {
                get {
                    return this.columnLetterWarrantyNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyDateColumn {
                get {
                    return this.columnLetterWarrantyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyExpireDateColumn {
                get {
                    return this.columnLetterWarrantyExpireDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileNoColumn {
                get {
                    return this.columnFileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValueColumn {
                get {
                    return this.columnValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupIDColumn {
                get {
                    return this.columnSupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyExpandDateColumn {
                get {
                    return this.columnLetterWarrantyExpandDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyPurposeColumn {
                get {
                    return this.columnLetterWarrantyPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManagementIDColumn {
                get {
                    return this.columnManagementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyKindColumn {
                get {
                    return this.columnLetterWarrantyKind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TendersAuctionsIDColumn {
                get {
                    return this.columnTendersAuctionsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterProcessIDColumn {
                get {
                    return this.columnLetterProcessID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderIDColumn {
                get {
                    return this.columnOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssayesIDColumn {
                get {
                    return this.columnAssayesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManagementExportLettrIDColumn {
                get {
                    return this.columnManagementExportLettrID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyNoScndColumn {
                get {
                    return this.columnLetterWarrantyNoScnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyNoFullColumn {
                get {
                    return this.columnLetterWarrantyNoFull;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinancialMemberColumn {
                get {
                    return this.columnFinancialMember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWDateRecievedColumn {
                get {
                    return this.columnLetterWDateRecieved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConfLetterWarrantyExpireDateColumn {
                get {
                    return this.columnConfLetterWarrantyExpireDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConfValueColumn {
                get {
                    return this.columnConfValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConfTenderColumn {
                get {
                    return this.columnConfTender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BeneficiaryIDColumn {
                get {
                    return this.columnBeneficiaryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DecisionsResponspilitiesIDColumn {
                get {
                    return this.columnDecisionsResponspilitiesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectNameColumn {
                get {
                    return this.columnProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierNameColumn {
                get {
                    return this.columnSupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManagementNameColumn {
                get {
                    return this.columnManagementName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyNameColumn {
                get {
                    return this.columnCurrencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BenfcNameColumn {
                get {
                    return this.columnBenfcName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWDateRecieved1Column {
                get {
                    return this.columnLetterWDateRecieved1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_WarrantyLetterRow this[int index] {
                get {
                    return ((Dtb_WarrantyLetterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Dtb_WarrantyLetterRowChangeEventHandler Dtb_WarrantyLetterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Dtb_WarrantyLetterRowChangeEventHandler Dtb_WarrantyLetterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Dtb_WarrantyLetterRowChangeEventHandler Dtb_WarrantyLetterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Dtb_WarrantyLetterRowChangeEventHandler Dtb_WarrantyLetterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDtb_WarrantyLetterRow(Dtb_WarrantyLetterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_WarrantyLetterRow AddDtb_WarrantyLetterRow(
                        string LetterWarrantyNo, 
                        System.DateTime LetterWarrantyDate, 
                        System.DateTime LetterWarrantyExpireDate, 
                        int FileNo, 
                        decimal Value, 
                        int CurrencyID, 
                        int SupID, 
                        System.DateTime LetterWarrantyExpandDate, 
                        string LetterWarrantyPurpose, 
                        int ManagementID, 
                        int LetterWarrantyKind, 
                        int TendersAuctionsID, 
                        int LetterProcessID, 
                        long OrderID, 
                        int AssayesID, 
                        int BankID, 
                        int ManagementExportLettrID, 
                        int ProjectID, 
                        string LetterWarrantyNoScnd, 
                        string LetterWarrantyNoFull, 
                        int FinancialMember, 
                        System.DateTime LetterWDateRecieved, 
                        bool ConfLetterWarrantyExpireDate, 
                        bool ConfValue, 
                        bool ConfTender, 
                        int BeneficiaryID, 
                        int DecisionsResponspilitiesID, 
                        string Name, 
                        string ProjectName, 
                        string SupplierName, 
                        string BankName, 
                        string ManagementName, 
                        string CurrencyName, 
                        string BenfcName, 
                        string LetterWDateRecieved1) {
                Dtb_WarrantyLetterRow rowDtb_WarrantyLetterRow = ((Dtb_WarrantyLetterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LetterWarrantyNo,
                        LetterWarrantyDate,
                        LetterWarrantyExpireDate,
                        FileNo,
                        Value,
                        CurrencyID,
                        SupID,
                        LetterWarrantyExpandDate,
                        LetterWarrantyPurpose,
                        ManagementID,
                        LetterWarrantyKind,
                        TendersAuctionsID,
                        LetterProcessID,
                        OrderID,
                        AssayesID,
                        BankID,
                        ManagementExportLettrID,
                        ProjectID,
                        LetterWarrantyNoScnd,
                        LetterWarrantyNoFull,
                        FinancialMember,
                        LetterWDateRecieved,
                        ConfLetterWarrantyExpireDate,
                        ConfValue,
                        ConfTender,
                        BeneficiaryID,
                        DecisionsResponspilitiesID,
                        Name,
                        ProjectName,
                        SupplierName,
                        BankName,
                        ManagementName,
                        CurrencyName,
                        BenfcName,
                        LetterWDateRecieved1};
                rowDtb_WarrantyLetterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtb_WarrantyLetterRow);
                return rowDtb_WarrantyLetterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_WarrantyLetterRow FindByID(int ID) {
                return ((Dtb_WarrantyLetterRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Dtb_WarrantyLetterDataTable cln = ((Dtb_WarrantyLetterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Dtb_WarrantyLetterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnLetterWarrantyNo = base.Columns["LetterWarrantyNo"];
                this.columnLetterWarrantyDate = base.Columns["LetterWarrantyDate"];
                this.columnLetterWarrantyExpireDate = base.Columns["LetterWarrantyExpireDate"];
                this.columnFileNo = base.Columns["FileNo"];
                this.columnValue = base.Columns["Value"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnSupID = base.Columns["SupID"];
                this.columnLetterWarrantyExpandDate = base.Columns["LetterWarrantyExpandDate"];
                this.columnLetterWarrantyPurpose = base.Columns["LetterWarrantyPurpose"];
                this.columnManagementID = base.Columns["ManagementID"];
                this.columnLetterWarrantyKind = base.Columns["LetterWarrantyKind"];
                this.columnTendersAuctionsID = base.Columns["TendersAuctionsID"];
                this.columnLetterProcessID = base.Columns["LetterProcessID"];
                this.columnOrderID = base.Columns["OrderID"];
                this.columnAssayesID = base.Columns["AssayesID"];
                this.columnBankID = base.Columns["BankID"];
                this.columnManagementExportLettrID = base.Columns["ManagementExportLettrID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnLetterWarrantyNoScnd = base.Columns["LetterWarrantyNoScnd"];
                this.columnLetterWarrantyNoFull = base.Columns["LetterWarrantyNoFull"];
                this.columnFinancialMember = base.Columns["FinancialMember"];
                this.columnLetterWDateRecieved = base.Columns["LetterWDateRecieved"];
                this.columnConfLetterWarrantyExpireDate = base.Columns["ConfLetterWarrantyExpireDate"];
                this.columnConfValue = base.Columns["ConfValue"];
                this.columnConfTender = base.Columns["ConfTender"];
                this.columnBeneficiaryID = base.Columns["BeneficiaryID"];
                this.columnDecisionsResponspilitiesID = base.Columns["DecisionsResponspilitiesID"];
                this.columnName = base.Columns["Name"];
                this.columnProjectName = base.Columns["ProjectName"];
                this.columnSupplierName = base.Columns["SupplierName"];
                this.columnBankName = base.Columns["BankName"];
                this.columnManagementName = base.Columns["ManagementName"];
                this.columnCurrencyName = base.Columns["CurrencyName"];
                this.columnBenfcName = base.Columns["BenfcName"];
                this.columnLetterWDateRecieved1 = base.Columns["LetterWDateRecieved1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnLetterWarrantyNo = new global::System.Data.DataColumn("LetterWarrantyNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyNo);
                this.columnLetterWarrantyDate = new global::System.Data.DataColumn("LetterWarrantyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyDate);
                this.columnLetterWarrantyExpireDate = new global::System.Data.DataColumn("LetterWarrantyExpireDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyExpireDate);
                this.columnFileNo = new global::System.Data.DataColumn("FileNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileNo);
                this.columnValue = new global::System.Data.DataColumn("Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnSupID = new global::System.Data.DataColumn("SupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupID);
                this.columnLetterWarrantyExpandDate = new global::System.Data.DataColumn("LetterWarrantyExpandDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyExpandDate);
                this.columnLetterWarrantyPurpose = new global::System.Data.DataColumn("LetterWarrantyPurpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyPurpose);
                this.columnManagementID = new global::System.Data.DataColumn("ManagementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagementID);
                this.columnLetterWarrantyKind = new global::System.Data.DataColumn("LetterWarrantyKind", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyKind);
                this.columnTendersAuctionsID = new global::System.Data.DataColumn("TendersAuctionsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTendersAuctionsID);
                this.columnLetterProcessID = new global::System.Data.DataColumn("LetterProcessID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterProcessID);
                this.columnOrderID = new global::System.Data.DataColumn("OrderID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderID);
                this.columnAssayesID = new global::System.Data.DataColumn("AssayesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssayesID);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnManagementExportLettrID = new global::System.Data.DataColumn("ManagementExportLettrID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagementExportLettrID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnLetterWarrantyNoScnd = new global::System.Data.DataColumn("LetterWarrantyNoScnd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyNoScnd);
                this.columnLetterWarrantyNoFull = new global::System.Data.DataColumn("LetterWarrantyNoFull", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyNoFull);
                this.columnFinancialMember = new global::System.Data.DataColumn("FinancialMember", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinancialMember);
                this.columnLetterWDateRecieved = new global::System.Data.DataColumn("LetterWDateRecieved", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWDateRecieved);
                this.columnConfLetterWarrantyExpireDate = new global::System.Data.DataColumn("ConfLetterWarrantyExpireDate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfLetterWarrantyExpireDate);
                this.columnConfValue = new global::System.Data.DataColumn("ConfValue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfValue);
                this.columnConfTender = new global::System.Data.DataColumn("ConfTender", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfTender);
                this.columnBeneficiaryID = new global::System.Data.DataColumn("BeneficiaryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeneficiaryID);
                this.columnDecisionsResponspilitiesID = new global::System.Data.DataColumn("DecisionsResponspilitiesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDecisionsResponspilitiesID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnProjectName = new global::System.Data.DataColumn("ProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectName);
                this.columnSupplierName = new global::System.Data.DataColumn("SupplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierName);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnManagementName = new global::System.Data.DataColumn("ManagementName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagementName);
                this.columnCurrencyName = new global::System.Data.DataColumn("CurrencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyName);
                this.columnBenfcName = new global::System.Data.DataColumn("BenfcName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenfcName);
                this.columnLetterWDateRecieved1 = new global::System.Data.DataColumn("LetterWDateRecieved1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWDateRecieved1);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnLetterWarrantyNo.AllowDBNull = false;
                this.columnLetterWarrantyNo.MaxLength = 50;
                this.columnLetterWarrantyDate.AllowDBNull = false;
                this.columnLetterWarrantyPurpose.MaxLength = 2147483647;
                this.columnLetterWarrantyNoScnd.MaxLength = 50;
                this.columnLetterWarrantyNoFull.MaxLength = 150;
                this.columnName.MaxLength = 50;
                this.columnProjectName.MaxLength = 250;
                this.columnSupplierName.MaxLength = 150;
                this.columnBankName.MaxLength = 50;
                this.columnManagementName.MaxLength = 2147483647;
                this.columnCurrencyName.MaxLength = 50;
                this.columnBenfcName.MaxLength = 150;
                this.columnLetterWDateRecieved1.Caption = "LetterWDateRecieved";
                this.columnLetterWDateRecieved1.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_WarrantyLetterRow NewDtb_WarrantyLetterRow() {
                return ((Dtb_WarrantyLetterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Dtb_WarrantyLetterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Dtb_WarrantyLetterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Dtb_WarrantyLetterRowChanged != null)) {
                    this.Dtb_WarrantyLetterRowChanged(this, new Dtb_WarrantyLetterRowChangeEvent(((Dtb_WarrantyLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Dtb_WarrantyLetterRowChanging != null)) {
                    this.Dtb_WarrantyLetterRowChanging(this, new Dtb_WarrantyLetterRowChangeEvent(((Dtb_WarrantyLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Dtb_WarrantyLetterRowDeleted != null)) {
                    this.Dtb_WarrantyLetterRowDeleted(this, new Dtb_WarrantyLetterRowChangeEvent(((Dtb_WarrantyLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Dtb_WarrantyLetterRowDeleting != null)) {
                    this.Dtb_WarrantyLetterRowDeleting(this, new Dtb_WarrantyLetterRowChangeEvent(((Dtb_WarrantyLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDtb_WarrantyLetterRow(Dtb_WarrantyLetterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LetterWarranty ds = new LetterWarranty();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Dtb_WarrantyLetterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtbWarrantyLetterRefundDataTable : global::System.Data.TypedTableBase<DtbWarrantyLetterRefundRow> {
            
            private global::System.Data.DataColumn columnRecievedDate;
            
            private global::System.Data.DataColumn columnRefundLetterDate;
            
            private global::System.Data.DataColumn columnLetterWarrantyNo;
            
            private global::System.Data.DataColumn columnLetterWarrantyDate;
            
            private global::System.Data.DataColumn columnValue;
            
            private global::System.Data.DataColumn columnFileNo;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbWarrantyLetterRefundDataTable() {
                this.TableName = "DtbWarrantyLetterRefund";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DtbWarrantyLetterRefundDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DtbWarrantyLetterRefundDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecievedDateColumn {
                get {
                    return this.columnRecievedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefundLetterDateColumn {
                get {
                    return this.columnRefundLetterDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyNoColumn {
                get {
                    return this.columnLetterWarrantyNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyDateColumn {
                get {
                    return this.columnLetterWarrantyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValueColumn {
                get {
                    return this.columnValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileNoColumn {
                get {
                    return this.columnFileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbWarrantyLetterRefundRow this[int index] {
                get {
                    return ((DtbWarrantyLetterRefundRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbWarrantyLetterRefundRowChangeEventHandler DtbWarrantyLetterRefundRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbWarrantyLetterRefundRowChangeEventHandler DtbWarrantyLetterRefundRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbWarrantyLetterRefundRowChangeEventHandler DtbWarrantyLetterRefundRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbWarrantyLetterRefundRowChangeEventHandler DtbWarrantyLetterRefundRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDtbWarrantyLetterRefundRow(DtbWarrantyLetterRefundRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbWarrantyLetterRefundRow AddDtbWarrantyLetterRefundRow(System.DateTime RecievedDate, System.DateTime RefundLetterDate, string LetterWarrantyNo, System.DateTime LetterWarrantyDate, decimal Value, int FileNo, string EmployeeName) {
                DtbWarrantyLetterRefundRow rowDtbWarrantyLetterRefundRow = ((DtbWarrantyLetterRefundRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RecievedDate,
                        RefundLetterDate,
                        LetterWarrantyNo,
                        LetterWarrantyDate,
                        Value,
                        FileNo,
                        EmployeeName};
                rowDtbWarrantyLetterRefundRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtbWarrantyLetterRefundRow);
                return rowDtbWarrantyLetterRefundRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DtbWarrantyLetterRefundDataTable cln = ((DtbWarrantyLetterRefundDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DtbWarrantyLetterRefundDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecievedDate = base.Columns["RecievedDate"];
                this.columnRefundLetterDate = base.Columns["RefundLetterDate"];
                this.columnLetterWarrantyNo = base.Columns["LetterWarrantyNo"];
                this.columnLetterWarrantyDate = base.Columns["LetterWarrantyDate"];
                this.columnValue = base.Columns["Value"];
                this.columnFileNo = base.Columns["FileNo"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecievedDate = new global::System.Data.DataColumn("RecievedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecievedDate);
                this.columnRefundLetterDate = new global::System.Data.DataColumn("RefundLetterDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefundLetterDate);
                this.columnLetterWarrantyNo = new global::System.Data.DataColumn("LetterWarrantyNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyNo);
                this.columnLetterWarrantyDate = new global::System.Data.DataColumn("LetterWarrantyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyDate);
                this.columnValue = new global::System.Data.DataColumn("Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnFileNo = new global::System.Data.DataColumn("FileNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileNo);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnLetterWarrantyNo.AllowDBNull = false;
                this.columnLetterWarrantyNo.MaxLength = 50;
                this.columnLetterWarrantyDate.AllowDBNull = false;
                this.columnEmployeeName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbWarrantyLetterRefundRow NewDtbWarrantyLetterRefundRow() {
                return ((DtbWarrantyLetterRefundRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DtbWarrantyLetterRefundRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DtbWarrantyLetterRefundRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtbWarrantyLetterRefundRowChanged != null)) {
                    this.DtbWarrantyLetterRefundRowChanged(this, new DtbWarrantyLetterRefundRowChangeEvent(((DtbWarrantyLetterRefundRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtbWarrantyLetterRefundRowChanging != null)) {
                    this.DtbWarrantyLetterRefundRowChanging(this, new DtbWarrantyLetterRefundRowChangeEvent(((DtbWarrantyLetterRefundRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtbWarrantyLetterRefundRowDeleted != null)) {
                    this.DtbWarrantyLetterRefundRowDeleted(this, new DtbWarrantyLetterRefundRowChangeEvent(((DtbWarrantyLetterRefundRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtbWarrantyLetterRefundRowDeleting != null)) {
                    this.DtbWarrantyLetterRefundRowDeleting(this, new DtbWarrantyLetterRefundRowChangeEvent(((DtbWarrantyLetterRefundRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDtbWarrantyLetterRefundRow(DtbWarrantyLetterRefundRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LetterWarranty ds = new LetterWarranty();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtbWarrantyLetterRefundDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtbLetterWAuditDataTable : global::System.Data.TypedTableBase<DtbLetterWAuditRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnLetterWarrentyID;
            
            private global::System.Data.DataColumn columnLetterWBasicData;
            
            private global::System.Data.DataColumn columnLetterWExpandDate;
            
            private global::System.Data.DataColumn columnLetterWRefundLetter;
            
            private global::System.Data.DataColumn columnLetterChangeValueLetter;
            
            private global::System.Data.DataColumn columnReferenceDate;
            
            private global::System.Data.DataColumn columnEmpName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbLetterWAuditDataTable() {
                this.TableName = "DtbLetterWAudit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DtbLetterWAuditDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DtbLetterWAuditDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrentyIDColumn {
                get {
                    return this.columnLetterWarrentyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWBasicDataColumn {
                get {
                    return this.columnLetterWBasicData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWExpandDateColumn {
                get {
                    return this.columnLetterWExpandDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWRefundLetterColumn {
                get {
                    return this.columnLetterWRefundLetter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterChangeValueLetterColumn {
                get {
                    return this.columnLetterChangeValueLetter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReferenceDateColumn {
                get {
                    return this.columnReferenceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmpNameColumn {
                get {
                    return this.columnEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbLetterWAuditRow this[int index] {
                get {
                    return ((DtbLetterWAuditRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbLetterWAuditRowChangeEventHandler DtbLetterWAuditRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbLetterWAuditRowChangeEventHandler DtbLetterWAuditRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbLetterWAuditRowChangeEventHandler DtbLetterWAuditRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbLetterWAuditRowChangeEventHandler DtbLetterWAuditRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDtbLetterWAuditRow(DtbLetterWAuditRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbLetterWAuditRow AddDtbLetterWAuditRow(int UserID, int LetterWarrentyID, bool LetterWBasicData, bool LetterWExpandDate, bool LetterWRefundLetter, bool LetterChangeValueLetter, System.DateTime ReferenceDate, string EmpName) {
                DtbLetterWAuditRow rowDtbLetterWAuditRow = ((DtbLetterWAuditRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        UserID,
                        LetterWarrentyID,
                        LetterWBasicData,
                        LetterWExpandDate,
                        LetterWRefundLetter,
                        LetterChangeValueLetter,
                        ReferenceDate,
                        EmpName};
                rowDtbLetterWAuditRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtbLetterWAuditRow);
                return rowDtbLetterWAuditRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbLetterWAuditRow FindByID(int ID) {
                return ((DtbLetterWAuditRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DtbLetterWAuditDataTable cln = ((DtbLetterWAuditDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DtbLetterWAuditDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnLetterWarrentyID = base.Columns["LetterWarrentyID"];
                this.columnLetterWBasicData = base.Columns["LetterWBasicData"];
                this.columnLetterWExpandDate = base.Columns["LetterWExpandDate"];
                this.columnLetterWRefundLetter = base.Columns["LetterWRefundLetter"];
                this.columnLetterChangeValueLetter = base.Columns["LetterChangeValueLetter"];
                this.columnReferenceDate = base.Columns["ReferenceDate"];
                this.columnEmpName = base.Columns["EmpName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnLetterWarrentyID = new global::System.Data.DataColumn("LetterWarrentyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrentyID);
                this.columnLetterWBasicData = new global::System.Data.DataColumn("LetterWBasicData", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWBasicData);
                this.columnLetterWExpandDate = new global::System.Data.DataColumn("LetterWExpandDate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWExpandDate);
                this.columnLetterWRefundLetter = new global::System.Data.DataColumn("LetterWRefundLetter", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWRefundLetter);
                this.columnLetterChangeValueLetter = new global::System.Data.DataColumn("LetterChangeValueLetter", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterChangeValueLetter);
                this.columnReferenceDate = new global::System.Data.DataColumn("ReferenceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceDate);
                this.columnEmpName = new global::System.Data.DataColumn("EmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnUserID.AllowDBNull = false;
                this.columnLetterWarrentyID.AllowDBNull = false;
                this.columnEmpName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbLetterWAuditRow NewDtbLetterWAuditRow() {
                return ((DtbLetterWAuditRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DtbLetterWAuditRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DtbLetterWAuditRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtbLetterWAuditRowChanged != null)) {
                    this.DtbLetterWAuditRowChanged(this, new DtbLetterWAuditRowChangeEvent(((DtbLetterWAuditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtbLetterWAuditRowChanging != null)) {
                    this.DtbLetterWAuditRowChanging(this, new DtbLetterWAuditRowChangeEvent(((DtbLetterWAuditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtbLetterWAuditRowDeleted != null)) {
                    this.DtbLetterWAuditRowDeleted(this, new DtbLetterWAuditRowChangeEvent(((DtbLetterWAuditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtbLetterWAuditRowDeleting != null)) {
                    this.DtbLetterWAuditRowDeleting(this, new DtbLetterWAuditRowChangeEvent(((DtbLetterWAuditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDtbLetterWAuditRow(DtbLetterWAuditRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LetterWarranty ds = new LetterWarranty();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtbLetterWAuditDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtbArchOrderAndLetterWDataTable : global::System.Data.TypedTableBase<DtbArchOrderAndLetterWRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnPathFile;
            
            private global::System.Data.DataColumn columnLetterWID;
            
            private global::System.Data.DataColumn columnOrderID;
            
            private global::System.Data.DataColumn columnDocumentHirarchyID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbArchOrderAndLetterWDataTable() {
                this.TableName = "DtbArchOrderAndLetterW";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DtbArchOrderAndLetterWDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DtbArchOrderAndLetterWDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PathFileColumn {
                get {
                    return this.columnPathFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWIDColumn {
                get {
                    return this.columnLetterWID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderIDColumn {
                get {
                    return this.columnOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocumentHirarchyIDColumn {
                get {
                    return this.columnDocumentHirarchyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbArchOrderAndLetterWRow this[int index] {
                get {
                    return ((DtbArchOrderAndLetterWRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbArchOrderAndLetterWRowChangeEventHandler DtbArchOrderAndLetterWRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbArchOrderAndLetterWRowChangeEventHandler DtbArchOrderAndLetterWRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbArchOrderAndLetterWRowChangeEventHandler DtbArchOrderAndLetterWRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtbArchOrderAndLetterWRowChangeEventHandler DtbArchOrderAndLetterWRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDtbArchOrderAndLetterWRow(DtbArchOrderAndLetterWRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbArchOrderAndLetterWRow AddDtbArchOrderAndLetterWRow(string PathFile, int LetterWID, long OrderID, int DocumentHirarchyID) {
                DtbArchOrderAndLetterWRow rowDtbArchOrderAndLetterWRow = ((DtbArchOrderAndLetterWRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PathFile,
                        LetterWID,
                        OrderID,
                        DocumentHirarchyID};
                rowDtbArchOrderAndLetterWRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtbArchOrderAndLetterWRow);
                return rowDtbArchOrderAndLetterWRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbArchOrderAndLetterWRow FindByID(int ID) {
                return ((DtbArchOrderAndLetterWRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DtbArchOrderAndLetterWDataTable cln = ((DtbArchOrderAndLetterWDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DtbArchOrderAndLetterWDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnPathFile = base.Columns["PathFile"];
                this.columnLetterWID = base.Columns["LetterWID"];
                this.columnOrderID = base.Columns["OrderID"];
                this.columnDocumentHirarchyID = base.Columns["DocumentHirarchyID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnPathFile = new global::System.Data.DataColumn("PathFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPathFile);
                this.columnLetterWID = new global::System.Data.DataColumn("LetterWID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWID);
                this.columnOrderID = new global::System.Data.DataColumn("OrderID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderID);
                this.columnDocumentHirarchyID = new global::System.Data.DataColumn("DocumentHirarchyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentHirarchyID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnPathFile.AllowDBNull = false;
                this.columnPathFile.MaxLength = 350;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbArchOrderAndLetterWRow NewDtbArchOrderAndLetterWRow() {
                return ((DtbArchOrderAndLetterWRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DtbArchOrderAndLetterWRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DtbArchOrderAndLetterWRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtbArchOrderAndLetterWRowChanged != null)) {
                    this.DtbArchOrderAndLetterWRowChanged(this, new DtbArchOrderAndLetterWRowChangeEvent(((DtbArchOrderAndLetterWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtbArchOrderAndLetterWRowChanging != null)) {
                    this.DtbArchOrderAndLetterWRowChanging(this, new DtbArchOrderAndLetterWRowChangeEvent(((DtbArchOrderAndLetterWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtbArchOrderAndLetterWRowDeleted != null)) {
                    this.DtbArchOrderAndLetterWRowDeleted(this, new DtbArchOrderAndLetterWRowChangeEvent(((DtbArchOrderAndLetterWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtbArchOrderAndLetterWRowDeleting != null)) {
                    this.DtbArchOrderAndLetterWRowDeleting(this, new DtbArchOrderAndLetterWRowChangeEvent(((DtbArchOrderAndLetterWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDtbArchOrderAndLetterWRow(DtbArchOrderAndLetterWRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LetterWarranty ds = new LetterWarranty();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtbArchOrderAndLetterWDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Dtb_LttrWrrntyRepDataTable : global::System.Data.TypedTableBase<Dtb_LttrWrrntyRepRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnLetterWarrantyNo;
            
            private global::System.Data.DataColumn columnLetterWarrantyDate;
            
            private global::System.Data.DataColumn columnLetterWarrantyExpireDate;
            
            private global::System.Data.DataColumn columnFileNo;
            
            private global::System.Data.DataColumn columnValue;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnSupID;
            
            private global::System.Data.DataColumn columnLetterWarrantyExpandDate;
            
            private global::System.Data.DataColumn columnLetterWarrantyPurpose;
            
            private global::System.Data.DataColumn columnManagementID;
            
            private global::System.Data.DataColumn columnLetterWarrantyKind;
            
            private global::System.Data.DataColumn columnTendersAuctionsID;
            
            private global::System.Data.DataColumn columnLetterProcessID;
            
            private global::System.Data.DataColumn columnOrderID;
            
            private global::System.Data.DataColumn columnAssayesID;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnManagementExportLettrID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnLetterWarrantyNoScnd;
            
            private global::System.Data.DataColumn columnLetterWarrantyNoFull;
            
            private global::System.Data.DataColumn columnFinancialMember;
            
            private global::System.Data.DataColumn columnConfLetterWarrantyExpireDate;
            
            private global::System.Data.DataColumn columnConfValue;
            
            private global::System.Data.DataColumn columnConfTender;
            
            private global::System.Data.DataColumn columnBeneficiaryID;
            
            private global::System.Data.DataColumn columnDecisionsResponspilitiesID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnProjectName;
            
            private global::System.Data.DataColumn columnSupplierName;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnManagementName;
            
            private global::System.Data.DataColumn columnCurrencyName;
            
            private global::System.Data.DataColumn columnBenfcName;
            
            private global::System.Data.DataColumn columnLetterWDateRecieved;
            
            private global::System.Data.DataColumn columnLetterWExpand;
            
            private global::System.Data.DataColumn columnOrder_NO;
            
            private global::System.Data.DataColumn columnOrder_Date;
            
            private global::System.Data.DataColumn columnOrderKindName;
            
            private global::System.Data.DataColumn columnAssaysKindName;
            
            private global::System.Data.DataColumn columnAssaysNo;
            
            private global::System.Data.DataColumn columnAssaysDate;
            
            private global::System.Data.DataColumn columnPurchaseMethode;
            
            private global::System.Data.DataColumn columnTenderNo;
            
            private global::System.Data.DataColumn columnTenderDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_LttrWrrntyRepDataTable() {
                this.TableName = "Dtb_LttrWrrntyRep";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Dtb_LttrWrrntyRepDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Dtb_LttrWrrntyRepDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyNoColumn {
                get {
                    return this.columnLetterWarrantyNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyDateColumn {
                get {
                    return this.columnLetterWarrantyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyExpireDateColumn {
                get {
                    return this.columnLetterWarrantyExpireDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileNoColumn {
                get {
                    return this.columnFileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValueColumn {
                get {
                    return this.columnValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupIDColumn {
                get {
                    return this.columnSupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyExpandDateColumn {
                get {
                    return this.columnLetterWarrantyExpandDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyPurposeColumn {
                get {
                    return this.columnLetterWarrantyPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManagementIDColumn {
                get {
                    return this.columnManagementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyKindColumn {
                get {
                    return this.columnLetterWarrantyKind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TendersAuctionsIDColumn {
                get {
                    return this.columnTendersAuctionsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterProcessIDColumn {
                get {
                    return this.columnLetterProcessID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderIDColumn {
                get {
                    return this.columnOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssayesIDColumn {
                get {
                    return this.columnAssayesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManagementExportLettrIDColumn {
                get {
                    return this.columnManagementExportLettrID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyNoScndColumn {
                get {
                    return this.columnLetterWarrantyNoScnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyNoFullColumn {
                get {
                    return this.columnLetterWarrantyNoFull;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinancialMemberColumn {
                get {
                    return this.columnFinancialMember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConfLetterWarrantyExpireDateColumn {
                get {
                    return this.columnConfLetterWarrantyExpireDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConfValueColumn {
                get {
                    return this.columnConfValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConfTenderColumn {
                get {
                    return this.columnConfTender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BeneficiaryIDColumn {
                get {
                    return this.columnBeneficiaryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DecisionsResponspilitiesIDColumn {
                get {
                    return this.columnDecisionsResponspilitiesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectNameColumn {
                get {
                    return this.columnProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierNameColumn {
                get {
                    return this.columnSupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManagementNameColumn {
                get {
                    return this.columnManagementName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyNameColumn {
                get {
                    return this.columnCurrencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BenfcNameColumn {
                get {
                    return this.columnBenfcName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWDateRecievedColumn {
                get {
                    return this.columnLetterWDateRecieved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWExpandColumn {
                get {
                    return this.columnLetterWExpand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Order_NOColumn {
                get {
                    return this.columnOrder_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Order_DateColumn {
                get {
                    return this.columnOrder_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderKindNameColumn {
                get {
                    return this.columnOrderKindName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssaysKindNameColumn {
                get {
                    return this.columnAssaysKindName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssaysNoColumn {
                get {
                    return this.columnAssaysNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssaysDateColumn {
                get {
                    return this.columnAssaysDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchaseMethodeColumn {
                get {
                    return this.columnPurchaseMethode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TenderNoColumn {
                get {
                    return this.columnTenderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TenderDateColumn {
                get {
                    return this.columnTenderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_LttrWrrntyRepRow this[int index] {
                get {
                    return ((Dtb_LttrWrrntyRepRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Dtb_LttrWrrntyRepRowChangeEventHandler Dtb_LttrWrrntyRepRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Dtb_LttrWrrntyRepRowChangeEventHandler Dtb_LttrWrrntyRepRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Dtb_LttrWrrntyRepRowChangeEventHandler Dtb_LttrWrrntyRepRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Dtb_LttrWrrntyRepRowChangeEventHandler Dtb_LttrWrrntyRepRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDtb_LttrWrrntyRepRow(Dtb_LttrWrrntyRepRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_LttrWrrntyRepRow AddDtb_LttrWrrntyRepRow(
                        string LetterWarrantyNo, 
                        System.DateTime LetterWarrantyDate, 
                        System.DateTime LetterWarrantyExpireDate, 
                        int FileNo, 
                        decimal Value, 
                        int CurrencyID, 
                        int SupID, 
                        System.DateTime LetterWarrantyExpandDate, 
                        string LetterWarrantyPurpose, 
                        int ManagementID, 
                        int LetterWarrantyKind, 
                        int TendersAuctionsID, 
                        int LetterProcessID, 
                        long OrderID, 
                        int AssayesID, 
                        int BankID, 
                        int ManagementExportLettrID, 
                        int ProjectID, 
                        string LetterWarrantyNoScnd, 
                        string LetterWarrantyNoFull, 
                        int FinancialMember, 
                        bool ConfLetterWarrantyExpireDate, 
                        bool ConfValue, 
                        bool ConfTender, 
                        int BeneficiaryID, 
                        int DecisionsResponspilitiesID, 
                        string Name, 
                        string ProjectName, 
                        string SupplierName, 
                        string BankName, 
                        string ManagementName, 
                        string CurrencyName, 
                        string BenfcName, 
                        string LetterWDateRecieved, 
                        System.DateTime LetterWExpand, 
                        string Order_NO, 
                        System.DateTime Order_Date, 
                        string OrderKindName, 
                        string AssaysKindName, 
                        string AssaysNo, 
                        System.DateTime AssaysDate, 
                        string PurchaseMethode, 
                        string TenderNo, 
                        System.DateTime TenderDate) {
                Dtb_LttrWrrntyRepRow rowDtb_LttrWrrntyRepRow = ((Dtb_LttrWrrntyRepRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LetterWarrantyNo,
                        LetterWarrantyDate,
                        LetterWarrantyExpireDate,
                        FileNo,
                        Value,
                        CurrencyID,
                        SupID,
                        LetterWarrantyExpandDate,
                        LetterWarrantyPurpose,
                        ManagementID,
                        LetterWarrantyKind,
                        TendersAuctionsID,
                        LetterProcessID,
                        OrderID,
                        AssayesID,
                        BankID,
                        ManagementExportLettrID,
                        ProjectID,
                        LetterWarrantyNoScnd,
                        LetterWarrantyNoFull,
                        FinancialMember,
                        ConfLetterWarrantyExpireDate,
                        ConfValue,
                        ConfTender,
                        BeneficiaryID,
                        DecisionsResponspilitiesID,
                        Name,
                        ProjectName,
                        SupplierName,
                        BankName,
                        ManagementName,
                        CurrencyName,
                        BenfcName,
                        LetterWDateRecieved,
                        LetterWExpand,
                        Order_NO,
                        Order_Date,
                        OrderKindName,
                        AssaysKindName,
                        AssaysNo,
                        AssaysDate,
                        PurchaseMethode,
                        TenderNo,
                        TenderDate};
                rowDtb_LttrWrrntyRepRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtb_LttrWrrntyRepRow);
                return rowDtb_LttrWrrntyRepRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Dtb_LttrWrrntyRepDataTable cln = ((Dtb_LttrWrrntyRepDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Dtb_LttrWrrntyRepDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnLetterWarrantyNo = base.Columns["LetterWarrantyNo"];
                this.columnLetterWarrantyDate = base.Columns["LetterWarrantyDate"];
                this.columnLetterWarrantyExpireDate = base.Columns["LetterWarrantyExpireDate"];
                this.columnFileNo = base.Columns["FileNo"];
                this.columnValue = base.Columns["Value"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnSupID = base.Columns["SupID"];
                this.columnLetterWarrantyExpandDate = base.Columns["LetterWarrantyExpandDate"];
                this.columnLetterWarrantyPurpose = base.Columns["LetterWarrantyPurpose"];
                this.columnManagementID = base.Columns["ManagementID"];
                this.columnLetterWarrantyKind = base.Columns["LetterWarrantyKind"];
                this.columnTendersAuctionsID = base.Columns["TendersAuctionsID"];
                this.columnLetterProcessID = base.Columns["LetterProcessID"];
                this.columnOrderID = base.Columns["OrderID"];
                this.columnAssayesID = base.Columns["AssayesID"];
                this.columnBankID = base.Columns["BankID"];
                this.columnManagementExportLettrID = base.Columns["ManagementExportLettrID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnLetterWarrantyNoScnd = base.Columns["LetterWarrantyNoScnd"];
                this.columnLetterWarrantyNoFull = base.Columns["LetterWarrantyNoFull"];
                this.columnFinancialMember = base.Columns["FinancialMember"];
                this.columnConfLetterWarrantyExpireDate = base.Columns["ConfLetterWarrantyExpireDate"];
                this.columnConfValue = base.Columns["ConfValue"];
                this.columnConfTender = base.Columns["ConfTender"];
                this.columnBeneficiaryID = base.Columns["BeneficiaryID"];
                this.columnDecisionsResponspilitiesID = base.Columns["DecisionsResponspilitiesID"];
                this.columnName = base.Columns["Name"];
                this.columnProjectName = base.Columns["ProjectName"];
                this.columnSupplierName = base.Columns["SupplierName"];
                this.columnBankName = base.Columns["BankName"];
                this.columnManagementName = base.Columns["ManagementName"];
                this.columnCurrencyName = base.Columns["CurrencyName"];
                this.columnBenfcName = base.Columns["BenfcName"];
                this.columnLetterWDateRecieved = base.Columns["LetterWDateRecieved"];
                this.columnLetterWExpand = base.Columns["LetterWExpand"];
                this.columnOrder_NO = base.Columns["Order_NO"];
                this.columnOrder_Date = base.Columns["Order_Date"];
                this.columnOrderKindName = base.Columns["OrderKindName"];
                this.columnAssaysKindName = base.Columns["AssaysKindName"];
                this.columnAssaysNo = base.Columns["AssaysNo"];
                this.columnAssaysDate = base.Columns["AssaysDate"];
                this.columnPurchaseMethode = base.Columns["PurchaseMethode"];
                this.columnTenderNo = base.Columns["TenderNo"];
                this.columnTenderDate = base.Columns["TenderDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnLetterWarrantyNo = new global::System.Data.DataColumn("LetterWarrantyNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyNo);
                this.columnLetterWarrantyDate = new global::System.Data.DataColumn("LetterWarrantyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyDate);
                this.columnLetterWarrantyExpireDate = new global::System.Data.DataColumn("LetterWarrantyExpireDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyExpireDate);
                this.columnFileNo = new global::System.Data.DataColumn("FileNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileNo);
                this.columnValue = new global::System.Data.DataColumn("Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnSupID = new global::System.Data.DataColumn("SupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupID);
                this.columnLetterWarrantyExpandDate = new global::System.Data.DataColumn("LetterWarrantyExpandDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyExpandDate);
                this.columnLetterWarrantyPurpose = new global::System.Data.DataColumn("LetterWarrantyPurpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyPurpose);
                this.columnManagementID = new global::System.Data.DataColumn("ManagementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagementID);
                this.columnLetterWarrantyKind = new global::System.Data.DataColumn("LetterWarrantyKind", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyKind);
                this.columnTendersAuctionsID = new global::System.Data.DataColumn("TendersAuctionsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTendersAuctionsID);
                this.columnLetterProcessID = new global::System.Data.DataColumn("LetterProcessID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterProcessID);
                this.columnOrderID = new global::System.Data.DataColumn("OrderID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderID);
                this.columnAssayesID = new global::System.Data.DataColumn("AssayesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssayesID);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnManagementExportLettrID = new global::System.Data.DataColumn("ManagementExportLettrID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagementExportLettrID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnLetterWarrantyNoScnd = new global::System.Data.DataColumn("LetterWarrantyNoScnd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyNoScnd);
                this.columnLetterWarrantyNoFull = new global::System.Data.DataColumn("LetterWarrantyNoFull", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyNoFull);
                this.columnFinancialMember = new global::System.Data.DataColumn("FinancialMember", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinancialMember);
                this.columnConfLetterWarrantyExpireDate = new global::System.Data.DataColumn("ConfLetterWarrantyExpireDate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfLetterWarrantyExpireDate);
                this.columnConfValue = new global::System.Data.DataColumn("ConfValue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfValue);
                this.columnConfTender = new global::System.Data.DataColumn("ConfTender", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfTender);
                this.columnBeneficiaryID = new global::System.Data.DataColumn("BeneficiaryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeneficiaryID);
                this.columnDecisionsResponspilitiesID = new global::System.Data.DataColumn("DecisionsResponspilitiesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDecisionsResponspilitiesID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnProjectName = new global::System.Data.DataColumn("ProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectName);
                this.columnSupplierName = new global::System.Data.DataColumn("SupplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierName);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnManagementName = new global::System.Data.DataColumn("ManagementName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagementName);
                this.columnCurrencyName = new global::System.Data.DataColumn("CurrencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyName);
                this.columnBenfcName = new global::System.Data.DataColumn("BenfcName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenfcName);
                this.columnLetterWDateRecieved = new global::System.Data.DataColumn("LetterWDateRecieved", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWDateRecieved);
                this.columnLetterWExpand = new global::System.Data.DataColumn("LetterWExpand", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWExpand);
                this.columnOrder_NO = new global::System.Data.DataColumn("Order_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_NO);
                this.columnOrder_Date = new global::System.Data.DataColumn("Order_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_Date);
                this.columnOrderKindName = new global::System.Data.DataColumn("OrderKindName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderKindName);
                this.columnAssaysKindName = new global::System.Data.DataColumn("AssaysKindName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssaysKindName);
                this.columnAssaysNo = new global::System.Data.DataColumn("AssaysNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssaysNo);
                this.columnAssaysDate = new global::System.Data.DataColumn("AssaysDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssaysDate);
                this.columnPurchaseMethode = new global::System.Data.DataColumn("PurchaseMethode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseMethode);
                this.columnTenderNo = new global::System.Data.DataColumn("TenderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderNo);
                this.columnTenderDate = new global::System.Data.DataColumn("TenderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, false));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnLetterWarrantyNo.MaxLength = 50;
                this.columnLetterWarrantyPurpose.MaxLength = 2147483647;
                this.columnLetterWarrantyNoScnd.MaxLength = 50;
                this.columnLetterWarrantyNoFull.MaxLength = 150;
                this.columnName.MaxLength = 50;
                this.columnProjectName.MaxLength = 250;
                this.columnSupplierName.MaxLength = 150;
                this.columnBankName.MaxLength = 50;
                this.columnManagementName.MaxLength = 2147483647;
                this.columnCurrencyName.MaxLength = 50;
                this.columnBenfcName.MaxLength = 150;
                this.columnLetterWDateRecieved.MaxLength = 50;
                this.columnOrder_NO.MaxLength = 50;
                this.columnOrderKindName.MaxLength = 50;
                this.columnAssaysKindName.MaxLength = 50;
                this.columnAssaysNo.MaxLength = 50;
                this.columnPurchaseMethode.MaxLength = 150;
                this.columnTenderNo.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_LttrWrrntyRepRow NewDtb_LttrWrrntyRepRow() {
                return ((Dtb_LttrWrrntyRepRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Dtb_LttrWrrntyRepRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Dtb_LttrWrrntyRepRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Dtb_LttrWrrntyRepRowChanged != null)) {
                    this.Dtb_LttrWrrntyRepRowChanged(this, new Dtb_LttrWrrntyRepRowChangeEvent(((Dtb_LttrWrrntyRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Dtb_LttrWrrntyRepRowChanging != null)) {
                    this.Dtb_LttrWrrntyRepRowChanging(this, new Dtb_LttrWrrntyRepRowChangeEvent(((Dtb_LttrWrrntyRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Dtb_LttrWrrntyRepRowDeleted != null)) {
                    this.Dtb_LttrWrrntyRepRowDeleted(this, new Dtb_LttrWrrntyRepRowChangeEvent(((Dtb_LttrWrrntyRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Dtb_LttrWrrntyRepRowDeleting != null)) {
                    this.Dtb_LttrWrrntyRepRowDeleting(this, new Dtb_LttrWrrntyRepRowChangeEvent(((Dtb_LttrWrrntyRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDtb_LttrWrrntyRepRow(Dtb_LttrWrrntyRepRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LetterWarranty ds = new LetterWarranty();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Dtb_LttrWrrntyRepDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Dtb_RefundLtrWarrantyRepDataTable : global::System.Data.TypedTableBase<Dtb_RefundLtrWarrantyRepRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnLetterWarrantyNo;
            
            private global::System.Data.DataColumn columnLetterWarrantyDate;
            
            private global::System.Data.DataColumn columnLetterWarrantyExpireDate;
            
            private global::System.Data.DataColumn columnFileNo;
            
            private global::System.Data.DataColumn columnValue;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnSupID;
            
            private global::System.Data.DataColumn columnLetterWarrantyExpandDate;
            
            private global::System.Data.DataColumn columnLetterWarrantyPurpose;
            
            private global::System.Data.DataColumn columnManagementID;
            
            private global::System.Data.DataColumn columnLetterWarrantyKind;
            
            private global::System.Data.DataColumn columnTendersAuctionsID;
            
            private global::System.Data.DataColumn columnLetterProcessID;
            
            private global::System.Data.DataColumn columnOrderID;
            
            private global::System.Data.DataColumn columnAssayesID;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnManagementExportLettrID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnLetterWarrantyNoScnd;
            
            private global::System.Data.DataColumn columnLetterWarrantyNoFull;
            
            private global::System.Data.DataColumn columnFinancialMember;
            
            private global::System.Data.DataColumn columnConfLetterWarrantyExpireDate;
            
            private global::System.Data.DataColumn columnConfValue;
            
            private global::System.Data.DataColumn columnConfTender;
            
            private global::System.Data.DataColumn columnBeneficiaryID;
            
            private global::System.Data.DataColumn columnDecisionsResponspilitiesID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnProjectName;
            
            private global::System.Data.DataColumn columnSupplierName;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnManagementName;
            
            private global::System.Data.DataColumn columnCurrencyName;
            
            private global::System.Data.DataColumn columnBenfcName;
            
            private global::System.Data.DataColumn columnLetterWDateRecieved;
            
            private global::System.Data.DataColumn columnLetterWExpand;
            
            private global::System.Data.DataColumn columnOrder_NO;
            
            private global::System.Data.DataColumn columnOrder_Date;
            
            private global::System.Data.DataColumn columnOrderKindName;
            
            private global::System.Data.DataColumn columnAssaysKindName;
            
            private global::System.Data.DataColumn columnAssaysNo;
            
            private global::System.Data.DataColumn columnAssaysDate;
            
            private global::System.Data.DataColumn columnPurchaseMethode;
            
            private global::System.Data.DataColumn columnTenderNo;
            
            private global::System.Data.DataColumn columnTenderDate;
            
            private global::System.Data.DataColumn columnRefundLetterDate;
            
            private global::System.Data.DataColumn columnRecievedDate;
            
            private global::System.Data.DataColumn columnRecieveMethodNAme;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_RefundLtrWarrantyRepDataTable() {
                this.TableName = "Dtb_RefundLtrWarrantyRep";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Dtb_RefundLtrWarrantyRepDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Dtb_RefundLtrWarrantyRepDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyNoColumn {
                get {
                    return this.columnLetterWarrantyNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyDateColumn {
                get {
                    return this.columnLetterWarrantyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyExpireDateColumn {
                get {
                    return this.columnLetterWarrantyExpireDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileNoColumn {
                get {
                    return this.columnFileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValueColumn {
                get {
                    return this.columnValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupIDColumn {
                get {
                    return this.columnSupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyExpandDateColumn {
                get {
                    return this.columnLetterWarrantyExpandDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyPurposeColumn {
                get {
                    return this.columnLetterWarrantyPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManagementIDColumn {
                get {
                    return this.columnManagementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyKindColumn {
                get {
                    return this.columnLetterWarrantyKind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TendersAuctionsIDColumn {
                get {
                    return this.columnTendersAuctionsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterProcessIDColumn {
                get {
                    return this.columnLetterProcessID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderIDColumn {
                get {
                    return this.columnOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssayesIDColumn {
                get {
                    return this.columnAssayesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManagementExportLettrIDColumn {
                get {
                    return this.columnManagementExportLettrID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyNoScndColumn {
                get {
                    return this.columnLetterWarrantyNoScnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWarrantyNoFullColumn {
                get {
                    return this.columnLetterWarrantyNoFull;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinancialMemberColumn {
                get {
                    return this.columnFinancialMember;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConfLetterWarrantyExpireDateColumn {
                get {
                    return this.columnConfLetterWarrantyExpireDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConfValueColumn {
                get {
                    return this.columnConfValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConfTenderColumn {
                get {
                    return this.columnConfTender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BeneficiaryIDColumn {
                get {
                    return this.columnBeneficiaryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DecisionsResponspilitiesIDColumn {
                get {
                    return this.columnDecisionsResponspilitiesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectNameColumn {
                get {
                    return this.columnProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierNameColumn {
                get {
                    return this.columnSupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManagementNameColumn {
                get {
                    return this.columnManagementName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyNameColumn {
                get {
                    return this.columnCurrencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BenfcNameColumn {
                get {
                    return this.columnBenfcName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWDateRecievedColumn {
                get {
                    return this.columnLetterWDateRecieved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterWExpandColumn {
                get {
                    return this.columnLetterWExpand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Order_NOColumn {
                get {
                    return this.columnOrder_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Order_DateColumn {
                get {
                    return this.columnOrder_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderKindNameColumn {
                get {
                    return this.columnOrderKindName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssaysKindNameColumn {
                get {
                    return this.columnAssaysKindName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssaysNoColumn {
                get {
                    return this.columnAssaysNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssaysDateColumn {
                get {
                    return this.columnAssaysDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchaseMethodeColumn {
                get {
                    return this.columnPurchaseMethode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TenderNoColumn {
                get {
                    return this.columnTenderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TenderDateColumn {
                get {
                    return this.columnTenderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefundLetterDateColumn {
                get {
                    return this.columnRefundLetterDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecievedDateColumn {
                get {
                    return this.columnRecievedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecieveMethodNAmeColumn {
                get {
                    return this.columnRecieveMethodNAme;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_RefundLtrWarrantyRepRow this[int index] {
                get {
                    return ((Dtb_RefundLtrWarrantyRepRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Dtb_RefundLtrWarrantyRepRowChangeEventHandler Dtb_RefundLtrWarrantyRepRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Dtb_RefundLtrWarrantyRepRowChangeEventHandler Dtb_RefundLtrWarrantyRepRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Dtb_RefundLtrWarrantyRepRowChangeEventHandler Dtb_RefundLtrWarrantyRepRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Dtb_RefundLtrWarrantyRepRowChangeEventHandler Dtb_RefundLtrWarrantyRepRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDtb_RefundLtrWarrantyRepRow(Dtb_RefundLtrWarrantyRepRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_RefundLtrWarrantyRepRow AddDtb_RefundLtrWarrantyRepRow(
                        string LetterWarrantyNo, 
                        System.DateTime LetterWarrantyDate, 
                        System.DateTime LetterWarrantyExpireDate, 
                        int FileNo, 
                        decimal Value, 
                        int CurrencyID, 
                        int SupID, 
                        System.DateTime LetterWarrantyExpandDate, 
                        string LetterWarrantyPurpose, 
                        int ManagementID, 
                        int LetterWarrantyKind, 
                        int TendersAuctionsID, 
                        int LetterProcessID, 
                        long OrderID, 
                        int AssayesID, 
                        int BankID, 
                        int ManagementExportLettrID, 
                        int ProjectID, 
                        string LetterWarrantyNoScnd, 
                        string LetterWarrantyNoFull, 
                        int FinancialMember, 
                        bool ConfLetterWarrantyExpireDate, 
                        bool ConfValue, 
                        bool ConfTender, 
                        int BeneficiaryID, 
                        int DecisionsResponspilitiesID, 
                        string Name, 
                        string ProjectName, 
                        string SupplierName, 
                        string BankName, 
                        string ManagementName, 
                        string CurrencyName, 
                        string BenfcName, 
                        string LetterWDateRecieved, 
                        System.DateTime LetterWExpand, 
                        string Order_NO, 
                        System.DateTime Order_Date, 
                        string OrderKindName, 
                        string AssaysKindName, 
                        string AssaysNo, 
                        System.DateTime AssaysDate, 
                        string PurchaseMethode, 
                        string TenderNo, 
                        System.DateTime TenderDate, 
                        System.DateTime RefundLetterDate, 
                        System.DateTime RecievedDate, 
                        string RecieveMethodNAme) {
                Dtb_RefundLtrWarrantyRepRow rowDtb_RefundLtrWarrantyRepRow = ((Dtb_RefundLtrWarrantyRepRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LetterWarrantyNo,
                        LetterWarrantyDate,
                        LetterWarrantyExpireDate,
                        FileNo,
                        Value,
                        CurrencyID,
                        SupID,
                        LetterWarrantyExpandDate,
                        LetterWarrantyPurpose,
                        ManagementID,
                        LetterWarrantyKind,
                        TendersAuctionsID,
                        LetterProcessID,
                        OrderID,
                        AssayesID,
                        BankID,
                        ManagementExportLettrID,
                        ProjectID,
                        LetterWarrantyNoScnd,
                        LetterWarrantyNoFull,
                        FinancialMember,
                        ConfLetterWarrantyExpireDate,
                        ConfValue,
                        ConfTender,
                        BeneficiaryID,
                        DecisionsResponspilitiesID,
                        Name,
                        ProjectName,
                        SupplierName,
                        BankName,
                        ManagementName,
                        CurrencyName,
                        BenfcName,
                        LetterWDateRecieved,
                        LetterWExpand,
                        Order_NO,
                        Order_Date,
                        OrderKindName,
                        AssaysKindName,
                        AssaysNo,
                        AssaysDate,
                        PurchaseMethode,
                        TenderNo,
                        TenderDate,
                        RefundLetterDate,
                        RecievedDate,
                        RecieveMethodNAme};
                rowDtb_RefundLtrWarrantyRepRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtb_RefundLtrWarrantyRepRow);
                return rowDtb_RefundLtrWarrantyRepRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Dtb_RefundLtrWarrantyRepDataTable cln = ((Dtb_RefundLtrWarrantyRepDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Dtb_RefundLtrWarrantyRepDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnLetterWarrantyNo = base.Columns["LetterWarrantyNo"];
                this.columnLetterWarrantyDate = base.Columns["LetterWarrantyDate"];
                this.columnLetterWarrantyExpireDate = base.Columns["LetterWarrantyExpireDate"];
                this.columnFileNo = base.Columns["FileNo"];
                this.columnValue = base.Columns["Value"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnSupID = base.Columns["SupID"];
                this.columnLetterWarrantyExpandDate = base.Columns["LetterWarrantyExpandDate"];
                this.columnLetterWarrantyPurpose = base.Columns["LetterWarrantyPurpose"];
                this.columnManagementID = base.Columns["ManagementID"];
                this.columnLetterWarrantyKind = base.Columns["LetterWarrantyKind"];
                this.columnTendersAuctionsID = base.Columns["TendersAuctionsID"];
                this.columnLetterProcessID = base.Columns["LetterProcessID"];
                this.columnOrderID = base.Columns["OrderID"];
                this.columnAssayesID = base.Columns["AssayesID"];
                this.columnBankID = base.Columns["BankID"];
                this.columnManagementExportLettrID = base.Columns["ManagementExportLettrID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnLetterWarrantyNoScnd = base.Columns["LetterWarrantyNoScnd"];
                this.columnLetterWarrantyNoFull = base.Columns["LetterWarrantyNoFull"];
                this.columnFinancialMember = base.Columns["FinancialMember"];
                this.columnConfLetterWarrantyExpireDate = base.Columns["ConfLetterWarrantyExpireDate"];
                this.columnConfValue = base.Columns["ConfValue"];
                this.columnConfTender = base.Columns["ConfTender"];
                this.columnBeneficiaryID = base.Columns["BeneficiaryID"];
                this.columnDecisionsResponspilitiesID = base.Columns["DecisionsResponspilitiesID"];
                this.columnName = base.Columns["Name"];
                this.columnProjectName = base.Columns["ProjectName"];
                this.columnSupplierName = base.Columns["SupplierName"];
                this.columnBankName = base.Columns["BankName"];
                this.columnManagementName = base.Columns["ManagementName"];
                this.columnCurrencyName = base.Columns["CurrencyName"];
                this.columnBenfcName = base.Columns["BenfcName"];
                this.columnLetterWDateRecieved = base.Columns["LetterWDateRecieved"];
                this.columnLetterWExpand = base.Columns["LetterWExpand"];
                this.columnOrder_NO = base.Columns["Order_NO"];
                this.columnOrder_Date = base.Columns["Order_Date"];
                this.columnOrderKindName = base.Columns["OrderKindName"];
                this.columnAssaysKindName = base.Columns["AssaysKindName"];
                this.columnAssaysNo = base.Columns["AssaysNo"];
                this.columnAssaysDate = base.Columns["AssaysDate"];
                this.columnPurchaseMethode = base.Columns["PurchaseMethode"];
                this.columnTenderNo = base.Columns["TenderNo"];
                this.columnTenderDate = base.Columns["TenderDate"];
                this.columnRefundLetterDate = base.Columns["RefundLetterDate"];
                this.columnRecievedDate = base.Columns["RecievedDate"];
                this.columnRecieveMethodNAme = base.Columns["RecieveMethodNAme"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnLetterWarrantyNo = new global::System.Data.DataColumn("LetterWarrantyNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyNo);
                this.columnLetterWarrantyDate = new global::System.Data.DataColumn("LetterWarrantyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyDate);
                this.columnLetterWarrantyExpireDate = new global::System.Data.DataColumn("LetterWarrantyExpireDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyExpireDate);
                this.columnFileNo = new global::System.Data.DataColumn("FileNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileNo);
                this.columnValue = new global::System.Data.DataColumn("Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnSupID = new global::System.Data.DataColumn("SupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupID);
                this.columnLetterWarrantyExpandDate = new global::System.Data.DataColumn("LetterWarrantyExpandDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyExpandDate);
                this.columnLetterWarrantyPurpose = new global::System.Data.DataColumn("LetterWarrantyPurpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyPurpose);
                this.columnManagementID = new global::System.Data.DataColumn("ManagementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagementID);
                this.columnLetterWarrantyKind = new global::System.Data.DataColumn("LetterWarrantyKind", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyKind);
                this.columnTendersAuctionsID = new global::System.Data.DataColumn("TendersAuctionsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTendersAuctionsID);
                this.columnLetterProcessID = new global::System.Data.DataColumn("LetterProcessID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterProcessID);
                this.columnOrderID = new global::System.Data.DataColumn("OrderID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderID);
                this.columnAssayesID = new global::System.Data.DataColumn("AssayesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssayesID);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnManagementExportLettrID = new global::System.Data.DataColumn("ManagementExportLettrID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagementExportLettrID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnLetterWarrantyNoScnd = new global::System.Data.DataColumn("LetterWarrantyNoScnd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyNoScnd);
                this.columnLetterWarrantyNoFull = new global::System.Data.DataColumn("LetterWarrantyNoFull", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWarrantyNoFull);
                this.columnFinancialMember = new global::System.Data.DataColumn("FinancialMember", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinancialMember);
                this.columnConfLetterWarrantyExpireDate = new global::System.Data.DataColumn("ConfLetterWarrantyExpireDate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfLetterWarrantyExpireDate);
                this.columnConfValue = new global::System.Data.DataColumn("ConfValue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfValue);
                this.columnConfTender = new global::System.Data.DataColumn("ConfTender", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfTender);
                this.columnBeneficiaryID = new global::System.Data.DataColumn("BeneficiaryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeneficiaryID);
                this.columnDecisionsResponspilitiesID = new global::System.Data.DataColumn("DecisionsResponspilitiesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDecisionsResponspilitiesID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnProjectName = new global::System.Data.DataColumn("ProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectName);
                this.columnSupplierName = new global::System.Data.DataColumn("SupplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierName);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnManagementName = new global::System.Data.DataColumn("ManagementName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagementName);
                this.columnCurrencyName = new global::System.Data.DataColumn("CurrencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyName);
                this.columnBenfcName = new global::System.Data.DataColumn("BenfcName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenfcName);
                this.columnLetterWDateRecieved = new global::System.Data.DataColumn("LetterWDateRecieved", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWDateRecieved);
                this.columnLetterWExpand = new global::System.Data.DataColumn("LetterWExpand", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterWExpand);
                this.columnOrder_NO = new global::System.Data.DataColumn("Order_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_NO);
                this.columnOrder_Date = new global::System.Data.DataColumn("Order_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_Date);
                this.columnOrderKindName = new global::System.Data.DataColumn("OrderKindName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderKindName);
                this.columnAssaysKindName = new global::System.Data.DataColumn("AssaysKindName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssaysKindName);
                this.columnAssaysNo = new global::System.Data.DataColumn("AssaysNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssaysNo);
                this.columnAssaysDate = new global::System.Data.DataColumn("AssaysDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssaysDate);
                this.columnPurchaseMethode = new global::System.Data.DataColumn("PurchaseMethode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseMethode);
                this.columnTenderNo = new global::System.Data.DataColumn("TenderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderNo);
                this.columnTenderDate = new global::System.Data.DataColumn("TenderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderDate);
                this.columnRefundLetterDate = new global::System.Data.DataColumn("RefundLetterDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefundLetterDate);
                this.columnRecievedDate = new global::System.Data.DataColumn("RecievedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecievedDate);
                this.columnRecieveMethodNAme = new global::System.Data.DataColumn("RecieveMethodNAme", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecieveMethodNAme);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, false));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnLetterWarrantyNo.MaxLength = 50;
                this.columnLetterWarrantyPurpose.MaxLength = 2147483647;
                this.columnLetterWarrantyNoScnd.MaxLength = 50;
                this.columnLetterWarrantyNoFull.MaxLength = 150;
                this.columnName.MaxLength = 50;
                this.columnProjectName.MaxLength = 250;
                this.columnSupplierName.MaxLength = 150;
                this.columnBankName.MaxLength = 50;
                this.columnManagementName.MaxLength = 2147483647;
                this.columnCurrencyName.MaxLength = 50;
                this.columnBenfcName.MaxLength = 150;
                this.columnLetterWDateRecieved.MaxLength = 50;
                this.columnLetterWExpand.ReadOnly = true;
                this.columnOrder_NO.MaxLength = 50;
                this.columnOrderKindName.MaxLength = 50;
                this.columnAssaysKindName.MaxLength = 50;
                this.columnAssaysNo.MaxLength = 50;
                this.columnPurchaseMethode.MaxLength = 150;
                this.columnTenderNo.MaxLength = 50;
                this.columnRecieveMethodNAme.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_RefundLtrWarrantyRepRow NewDtb_RefundLtrWarrantyRepRow() {
                return ((Dtb_RefundLtrWarrantyRepRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Dtb_RefundLtrWarrantyRepRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Dtb_RefundLtrWarrantyRepRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Dtb_RefundLtrWarrantyRepRowChanged != null)) {
                    this.Dtb_RefundLtrWarrantyRepRowChanged(this, new Dtb_RefundLtrWarrantyRepRowChangeEvent(((Dtb_RefundLtrWarrantyRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Dtb_RefundLtrWarrantyRepRowChanging != null)) {
                    this.Dtb_RefundLtrWarrantyRepRowChanging(this, new Dtb_RefundLtrWarrantyRepRowChangeEvent(((Dtb_RefundLtrWarrantyRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Dtb_RefundLtrWarrantyRepRowDeleted != null)) {
                    this.Dtb_RefundLtrWarrantyRepRowDeleted(this, new Dtb_RefundLtrWarrantyRepRowChangeEvent(((Dtb_RefundLtrWarrantyRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Dtb_RefundLtrWarrantyRepRowDeleting != null)) {
                    this.Dtb_RefundLtrWarrantyRepRowDeleting(this, new Dtb_RefundLtrWarrantyRepRowChangeEvent(((Dtb_RefundLtrWarrantyRepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDtb_RefundLtrWarrantyRepRow(Dtb_RefundLtrWarrantyRepRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LetterWarranty ds = new LetterWarranty();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Dtb_RefundLtrWarrantyRepDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Dtb_WarrantyLetterRow : global::System.Data.DataRow {
            
            private Dtb_WarrantyLetterDataTable tableDtb_WarrantyLetter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Dtb_WarrantyLetterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtb_WarrantyLetter = ((Dtb_WarrantyLetterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableDtb_WarrantyLetter.IDColumn]));
                }
                set {
                    this[this.tableDtb_WarrantyLetter.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyNo {
                get {
                    return ((string)(this[this.tableDtb_WarrantyLetter.LetterWarrantyNoColumn]));
                }
                set {
                    this[this.tableDtb_WarrantyLetter.LetterWarrantyNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWarrantyDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDtb_WarrantyLetter.LetterWarrantyDateColumn]));
                }
                set {
                    this[this.tableDtb_WarrantyLetter.LetterWarrantyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWarrantyExpireDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_WarrantyLetter.LetterWarrantyExpireDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyExpireDate\' in table \'Dtb_WarrantyLetter\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.LetterWarrantyExpireDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FileNo {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.FileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileNo\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.FileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Value {
                get {
                    try {
                        return ((decimal)(this[this.tableDtb_WarrantyLetter.ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrencyID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.CurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyID\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SupID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.SupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupID\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.SupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWarrantyExpandDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_WarrantyLetter.LetterWarrantyExpandDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyExpandDate\' in table \'Dtb_WarrantyLetter\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.LetterWarrantyExpandDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyPurpose {
                get {
                    try {
                        return ((string)(this[this.tableDtb_WarrantyLetter.LetterWarrantyPurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyPurpose\' in table \'Dtb_WarrantyLetter\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.LetterWarrantyPurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ManagementID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.ManagementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagementID\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.ManagementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LetterWarrantyKind {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.LetterWarrantyKindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyKind\' in table \'Dtb_WarrantyLetter\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.LetterWarrantyKindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TendersAuctionsID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.TendersAuctionsIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TendersAuctionsID\' in table \'Dtb_WarrantyLetter\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.TendersAuctionsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LetterProcessID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.LetterProcessIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterProcessID\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.LetterProcessIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long OrderID {
                get {
                    try {
                        return ((long)(this[this.tableDtb_WarrantyLetter.OrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderID\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.OrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AssayesID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.AssayesIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssayesID\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.AssayesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.BankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankID\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ManagementExportLettrID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.ManagementExportLettrIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagementExportLettrID\' in table \'Dtb_WarrantyLetter\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.ManagementExportLettrIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.ProjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectID\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyNoScnd {
                get {
                    try {
                        return ((string)(this[this.tableDtb_WarrantyLetter.LetterWarrantyNoScndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyNoScnd\' in table \'Dtb_WarrantyLetter\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.LetterWarrantyNoScndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyNoFull {
                get {
                    try {
                        return ((string)(this[this.tableDtb_WarrantyLetter.LetterWarrantyNoFullColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyNoFull\' in table \'Dtb_WarrantyLetter\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.LetterWarrantyNoFullColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FinancialMember {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.FinancialMemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinancialMember\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.FinancialMemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWDateRecieved {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_WarrantyLetter.LetterWDateRecievedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWDateRecieved\' in table \'Dtb_WarrantyLetter\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.LetterWDateRecievedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConfLetterWarrantyExpireDate {
                get {
                    try {
                        return ((bool)(this[this.tableDtb_WarrantyLetter.ConfLetterWarrantyExpireDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfLetterWarrantyExpireDate\' in table \'Dtb_WarrantyLetter\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.ConfLetterWarrantyExpireDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConfValue {
                get {
                    try {
                        return ((bool)(this[this.tableDtb_WarrantyLetter.ConfValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfValue\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.ConfValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConfTender {
                get {
                    try {
                        return ((bool)(this[this.tableDtb_WarrantyLetter.ConfTenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfTender\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.ConfTenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BeneficiaryID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.BeneficiaryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BeneficiaryID\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.BeneficiaryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DecisionsResponspilitiesID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_WarrantyLetter.DecisionsResponspilitiesIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DecisionsResponspilitiesID\' in table \'Dtb_WarrantyLetter\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.DecisionsResponspilitiesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableDtb_WarrantyLetter.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProjectName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_WarrantyLetter.ProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectName\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.ProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_WarrantyLetter.SupplierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierName\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.SupplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_WarrantyLetter.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ManagementName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_WarrantyLetter.ManagementNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagementName\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.ManagementNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrencyName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_WarrantyLetter.CurrencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyName\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.CurrencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BenfcName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_WarrantyLetter.BenfcNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenfcName\' in table \'Dtb_WarrantyLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.BenfcNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWDateRecieved1 {
                get {
                    try {
                        return ((string)(this[this.tableDtb_WarrantyLetter.LetterWDateRecieved1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWDateRecieved1\' in table \'Dtb_WarrantyLetter\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDtb_WarrantyLetter.LetterWDateRecieved1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyExpireDateNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.LetterWarrantyExpireDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyExpireDateNull() {
                this[this.tableDtb_WarrantyLetter.LetterWarrantyExpireDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileNoNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.FileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileNoNull() {
                this[this.tableDtb_WarrantyLetter.FileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValueNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValueNull() {
                this[this.tableDtb_WarrantyLetter.ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyIDNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.CurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyIDNull() {
                this[this.tableDtb_WarrantyLetter.CurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupIDNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.SupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupIDNull() {
                this[this.tableDtb_WarrantyLetter.SupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyExpandDateNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.LetterWarrantyExpandDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyExpandDateNull() {
                this[this.tableDtb_WarrantyLetter.LetterWarrantyExpandDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyPurposeNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.LetterWarrantyPurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyPurposeNull() {
                this[this.tableDtb_WarrantyLetter.LetterWarrantyPurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManagementIDNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.ManagementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManagementIDNull() {
                this[this.tableDtb_WarrantyLetter.ManagementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyKindNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.LetterWarrantyKindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyKindNull() {
                this[this.tableDtb_WarrantyLetter.LetterWarrantyKindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTendersAuctionsIDNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.TendersAuctionsIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTendersAuctionsIDNull() {
                this[this.tableDtb_WarrantyLetter.TendersAuctionsIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterProcessIDNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.LetterProcessIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterProcessIDNull() {
                this[this.tableDtb_WarrantyLetter.LetterProcessIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderIDNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.OrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderIDNull() {
                this[this.tableDtb_WarrantyLetter.OrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssayesIDNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.AssayesIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssayesIDNull() {
                this[this.tableDtb_WarrantyLetter.AssayesIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankIDNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.BankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankIDNull() {
                this[this.tableDtb_WarrantyLetter.BankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManagementExportLettrIDNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.ManagementExportLettrIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManagementExportLettrIDNull() {
                this[this.tableDtb_WarrantyLetter.ManagementExportLettrIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectIDNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.ProjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectIDNull() {
                this[this.tableDtb_WarrantyLetter.ProjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyNoScndNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.LetterWarrantyNoScndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyNoScndNull() {
                this[this.tableDtb_WarrantyLetter.LetterWarrantyNoScndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyNoFullNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.LetterWarrantyNoFullColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyNoFullNull() {
                this[this.tableDtb_WarrantyLetter.LetterWarrantyNoFullColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinancialMemberNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.FinancialMemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinancialMemberNull() {
                this[this.tableDtb_WarrantyLetter.FinancialMemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWDateRecievedNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.LetterWDateRecievedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWDateRecievedNull() {
                this[this.tableDtb_WarrantyLetter.LetterWDateRecievedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfLetterWarrantyExpireDateNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.ConfLetterWarrantyExpireDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConfLetterWarrantyExpireDateNull() {
                this[this.tableDtb_WarrantyLetter.ConfLetterWarrantyExpireDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfValueNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.ConfValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConfValueNull() {
                this[this.tableDtb_WarrantyLetter.ConfValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfTenderNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.ConfTenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConfTenderNull() {
                this[this.tableDtb_WarrantyLetter.ConfTenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBeneficiaryIDNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.BeneficiaryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBeneficiaryIDNull() {
                this[this.tableDtb_WarrantyLetter.BeneficiaryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDecisionsResponspilitiesIDNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.DecisionsResponspilitiesIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDecisionsResponspilitiesIDNull() {
                this[this.tableDtb_WarrantyLetter.DecisionsResponspilitiesIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableDtb_WarrantyLetter.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectNameNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.ProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectNameNull() {
                this[this.tableDtb_WarrantyLetter.ProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierNameNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.SupplierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierNameNull() {
                this[this.tableDtb_WarrantyLetter.SupplierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankNameNull() {
                this[this.tableDtb_WarrantyLetter.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManagementNameNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.ManagementNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManagementNameNull() {
                this[this.tableDtb_WarrantyLetter.ManagementNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyNameNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.CurrencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyNameNull() {
                this[this.tableDtb_WarrantyLetter.CurrencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBenfcNameNull() {
                return this.IsNull(this.tableDtb_WarrantyLetter.BenfcNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBenfcNameNull() {
                this[this.tableDtb_WarrantyLetter.BenfcNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWDateRecieved1Null() {
                return this.IsNull(this.tableDtb_WarrantyLetter.LetterWDateRecieved1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWDateRecieved1Null() {
                this[this.tableDtb_WarrantyLetter.LetterWDateRecieved1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DtbWarrantyLetterRefundRow : global::System.Data.DataRow {
            
            private DtbWarrantyLetterRefundDataTable tableDtbWarrantyLetterRefund;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DtbWarrantyLetterRefundRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtbWarrantyLetterRefund = ((DtbWarrantyLetterRefundDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RecievedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtbWarrantyLetterRefund.RecievedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecievedDate\' in table \'DtbWarrantyLetterRefund\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDtbWarrantyLetterRefund.RecievedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RefundLetterDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtbWarrantyLetterRefund.RefundLetterDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefundLetterDate\' in table \'DtbWarrantyLetterRefund\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDtbWarrantyLetterRefund.RefundLetterDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyNo {
                get {
                    return ((string)(this[this.tableDtbWarrantyLetterRefund.LetterWarrantyNoColumn]));
                }
                set {
                    this[this.tableDtbWarrantyLetterRefund.LetterWarrantyNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWarrantyDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDtbWarrantyLetterRefund.LetterWarrantyDateColumn]));
                }
                set {
                    this[this.tableDtbWarrantyLetterRefund.LetterWarrantyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Value {
                get {
                    try {
                        return ((decimal)(this[this.tableDtbWarrantyLetterRefund.ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value\' in table \'DtbWarrantyLetterRefund\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbWarrantyLetterRefund.ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FileNo {
                get {
                    try {
                        return ((int)(this[this.tableDtbWarrantyLetterRefund.FileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileNo\' in table \'DtbWarrantyLetterRefund\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbWarrantyLetterRefund.FileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableDtbWarrantyLetterRefund.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeName\' in table \'DtbWarrantyLetterRefund\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDtbWarrantyLetterRefund.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecievedDateNull() {
                return this.IsNull(this.tableDtbWarrantyLetterRefund.RecievedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecievedDateNull() {
                this[this.tableDtbWarrantyLetterRefund.RecievedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefundLetterDateNull() {
                return this.IsNull(this.tableDtbWarrantyLetterRefund.RefundLetterDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefundLetterDateNull() {
                this[this.tableDtbWarrantyLetterRefund.RefundLetterDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValueNull() {
                return this.IsNull(this.tableDtbWarrantyLetterRefund.ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValueNull() {
                this[this.tableDtbWarrantyLetterRefund.ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileNoNull() {
                return this.IsNull(this.tableDtbWarrantyLetterRefund.FileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileNoNull() {
                this[this.tableDtbWarrantyLetterRefund.FileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableDtbWarrantyLetterRefund.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeNameNull() {
                this[this.tableDtbWarrantyLetterRefund.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DtbLetterWAuditRow : global::System.Data.DataRow {
            
            private DtbLetterWAuditDataTable tableDtbLetterWAudit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DtbLetterWAuditRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtbLetterWAudit = ((DtbLetterWAuditDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableDtbLetterWAudit.IDColumn]));
                }
                set {
                    this[this.tableDtbLetterWAudit.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UserID {
                get {
                    return ((int)(this[this.tableDtbLetterWAudit.UserIDColumn]));
                }
                set {
                    this[this.tableDtbLetterWAudit.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LetterWarrentyID {
                get {
                    return ((int)(this[this.tableDtbLetterWAudit.LetterWarrentyIDColumn]));
                }
                set {
                    this[this.tableDtbLetterWAudit.LetterWarrentyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LetterWBasicData {
                get {
                    try {
                        return ((bool)(this[this.tableDtbLetterWAudit.LetterWBasicDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWBasicData\' in table \'DtbLetterWAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbLetterWAudit.LetterWBasicDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LetterWExpandDate {
                get {
                    try {
                        return ((bool)(this[this.tableDtbLetterWAudit.LetterWExpandDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWExpandDate\' in table \'DtbLetterWAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbLetterWAudit.LetterWExpandDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LetterWRefundLetter {
                get {
                    try {
                        return ((bool)(this[this.tableDtbLetterWAudit.LetterWRefundLetterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWRefundLetter\' in table \'DtbLetterWAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbLetterWAudit.LetterWRefundLetterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LetterChangeValueLetter {
                get {
                    try {
                        return ((bool)(this[this.tableDtbLetterWAudit.LetterChangeValueLetterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterChangeValueLetter\' in table \'DtbLetterWAudit\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDtbLetterWAudit.LetterChangeValueLetterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ReferenceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtbLetterWAudit.ReferenceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceDate\' in table \'DtbLetterWAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbLetterWAudit.ReferenceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmpName {
                get {
                    try {
                        return ((string)(this[this.tableDtbLetterWAudit.EmpNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpName\' in table \'DtbLetterWAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbLetterWAudit.EmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWBasicDataNull() {
                return this.IsNull(this.tableDtbLetterWAudit.LetterWBasicDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWBasicDataNull() {
                this[this.tableDtbLetterWAudit.LetterWBasicDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWExpandDateNull() {
                return this.IsNull(this.tableDtbLetterWAudit.LetterWExpandDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWExpandDateNull() {
                this[this.tableDtbLetterWAudit.LetterWExpandDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWRefundLetterNull() {
                return this.IsNull(this.tableDtbLetterWAudit.LetterWRefundLetterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWRefundLetterNull() {
                this[this.tableDtbLetterWAudit.LetterWRefundLetterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterChangeValueLetterNull() {
                return this.IsNull(this.tableDtbLetterWAudit.LetterChangeValueLetterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterChangeValueLetterNull() {
                this[this.tableDtbLetterWAudit.LetterChangeValueLetterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReferenceDateNull() {
                return this.IsNull(this.tableDtbLetterWAudit.ReferenceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReferenceDateNull() {
                this[this.tableDtbLetterWAudit.ReferenceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmpNameNull() {
                return this.IsNull(this.tableDtbLetterWAudit.EmpNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmpNameNull() {
                this[this.tableDtbLetterWAudit.EmpNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DtbArchOrderAndLetterWRow : global::System.Data.DataRow {
            
            private DtbArchOrderAndLetterWDataTable tableDtbArchOrderAndLetterW;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DtbArchOrderAndLetterWRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtbArchOrderAndLetterW = ((DtbArchOrderAndLetterWDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableDtbArchOrderAndLetterW.IDColumn]));
                }
                set {
                    this[this.tableDtbArchOrderAndLetterW.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PathFile {
                get {
                    return ((string)(this[this.tableDtbArchOrderAndLetterW.PathFileColumn]));
                }
                set {
                    this[this.tableDtbArchOrderAndLetterW.PathFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LetterWID {
                get {
                    try {
                        return ((int)(this[this.tableDtbArchOrderAndLetterW.LetterWIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWID\' in table \'DtbArchOrderAndLetterW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbArchOrderAndLetterW.LetterWIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long OrderID {
                get {
                    try {
                        return ((long)(this[this.tableDtbArchOrderAndLetterW.OrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderID\' in table \'DtbArchOrderAndLetterW\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbArchOrderAndLetterW.OrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DocumentHirarchyID {
                get {
                    try {
                        return ((int)(this[this.tableDtbArchOrderAndLetterW.DocumentHirarchyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentHirarchyID\' in table \'DtbArchOrderAndLetterW\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableDtbArchOrderAndLetterW.DocumentHirarchyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWIDNull() {
                return this.IsNull(this.tableDtbArchOrderAndLetterW.LetterWIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWIDNull() {
                this[this.tableDtbArchOrderAndLetterW.LetterWIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderIDNull() {
                return this.IsNull(this.tableDtbArchOrderAndLetterW.OrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderIDNull() {
                this[this.tableDtbArchOrderAndLetterW.OrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocumentHirarchyIDNull() {
                return this.IsNull(this.tableDtbArchOrderAndLetterW.DocumentHirarchyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocumentHirarchyIDNull() {
                this[this.tableDtbArchOrderAndLetterW.DocumentHirarchyIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Dtb_LttrWrrntyRepRow : global::System.Data.DataRow {
            
            private Dtb_LttrWrrntyRepDataTable tableDtb_LttrWrrntyRep;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Dtb_LttrWrrntyRepRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtb_LttrWrrntyRep = ((Dtb_LttrWrrntyRepDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyNo {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.LetterWarrantyNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyNo\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.LetterWarrantyNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWarrantyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_LttrWrrntyRep.LetterWarrantyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyDate\' in table \'Dtb_LttrWrrntyRep\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.LetterWarrantyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWarrantyExpireDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_LttrWrrntyRep.LetterWarrantyExpireDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyExpireDate\' in table \'Dtb_LttrWrrntyRep\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.LetterWarrantyExpireDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FileNo {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.FileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileNo\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.FileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Value {
                get {
                    try {
                        return ((decimal)(this[this.tableDtb_LttrWrrntyRep.ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrencyID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.CurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyID\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SupID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.SupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupID\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.SupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWarrantyExpandDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_LttrWrrntyRep.LetterWarrantyExpandDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyExpandDate\' in table \'Dtb_LttrWrrntyRep\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.LetterWarrantyExpandDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyPurpose {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.LetterWarrantyPurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyPurpose\' in table \'Dtb_LttrWrrntyRep\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.LetterWarrantyPurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ManagementID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.ManagementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagementID\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.ManagementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LetterWarrantyKind {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.LetterWarrantyKindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyKind\' in table \'Dtb_LttrWrrntyRep\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.LetterWarrantyKindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TendersAuctionsID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.TendersAuctionsIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TendersAuctionsID\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.TendersAuctionsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LetterProcessID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.LetterProcessIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterProcessID\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.LetterProcessIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long OrderID {
                get {
                    try {
                        return ((long)(this[this.tableDtb_LttrWrrntyRep.OrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderID\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.OrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AssayesID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.AssayesIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssayesID\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.AssayesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.BankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankID\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ManagementExportLettrID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.ManagementExportLettrIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagementExportLettrID\' in table \'Dtb_LttrWrrntyRep\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.ManagementExportLettrIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.ProjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectID\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyNoScnd {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.LetterWarrantyNoScndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyNoScnd\' in table \'Dtb_LttrWrrntyRep\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.LetterWarrantyNoScndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyNoFull {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.LetterWarrantyNoFullColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyNoFull\' in table \'Dtb_LttrWrrntyRep\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.LetterWarrantyNoFullColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FinancialMember {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.FinancialMemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinancialMember\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.FinancialMemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConfLetterWarrantyExpireDate {
                get {
                    try {
                        return ((bool)(this[this.tableDtb_LttrWrrntyRep.ConfLetterWarrantyExpireDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfLetterWarrantyExpireDate\' in table \'Dtb_LttrWrrntyRep\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.ConfLetterWarrantyExpireDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConfValue {
                get {
                    try {
                        return ((bool)(this[this.tableDtb_LttrWrrntyRep.ConfValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfValue\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.ConfValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConfTender {
                get {
                    try {
                        return ((bool)(this[this.tableDtb_LttrWrrntyRep.ConfTenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfTender\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.ConfTenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BeneficiaryID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.BeneficiaryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BeneficiaryID\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.BeneficiaryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DecisionsResponspilitiesID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_LttrWrrntyRep.DecisionsResponspilitiesIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DecisionsResponspilitiesID\' in table \'Dtb_LttrWrrntyRep\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.DecisionsResponspilitiesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProjectName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.ProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectName\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.ProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.SupplierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierName\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.SupplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ManagementName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.ManagementNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagementName\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.ManagementNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrencyName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.CurrencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyName\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.CurrencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BenfcName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.BenfcNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenfcName\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.BenfcNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWDateRecieved {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.LetterWDateRecievedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWDateRecieved\' in table \'Dtb_LttrWrrntyRep\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.LetterWDateRecievedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWExpand {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_LttrWrrntyRep.LetterWExpandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWExpand\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.LetterWExpandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Order_NO {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.Order_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order_NO\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.Order_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Order_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_LttrWrrntyRep.Order_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order_Date\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.Order_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderKindName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.OrderKindNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderKindName\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.OrderKindNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AssaysKindName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.AssaysKindNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssaysKindName\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.AssaysKindNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AssaysNo {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.AssaysNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssaysNo\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.AssaysNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AssaysDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_LttrWrrntyRep.AssaysDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssaysDate\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.AssaysDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PurchaseMethode {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.PurchaseMethodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseMethode\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.PurchaseMethodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TenderNo {
                get {
                    try {
                        return ((string)(this[this.tableDtb_LttrWrrntyRep.TenderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenderNo\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.TenderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TenderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_LttrWrrntyRep.TenderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenderDate\' in table \'Dtb_LttrWrrntyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_LttrWrrntyRep.TenderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDNull() {
                this[this.tableDtb_LttrWrrntyRep.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyNoNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.LetterWarrantyNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyNoNull() {
                this[this.tableDtb_LttrWrrntyRep.LetterWarrantyNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyDateNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.LetterWarrantyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyDateNull() {
                this[this.tableDtb_LttrWrrntyRep.LetterWarrantyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyExpireDateNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.LetterWarrantyExpireDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyExpireDateNull() {
                this[this.tableDtb_LttrWrrntyRep.LetterWarrantyExpireDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileNoNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.FileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileNoNull() {
                this[this.tableDtb_LttrWrrntyRep.FileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValueNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValueNull() {
                this[this.tableDtb_LttrWrrntyRep.ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.CurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyIDNull() {
                this[this.tableDtb_LttrWrrntyRep.CurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.SupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupIDNull() {
                this[this.tableDtb_LttrWrrntyRep.SupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyExpandDateNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.LetterWarrantyExpandDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyExpandDateNull() {
                this[this.tableDtb_LttrWrrntyRep.LetterWarrantyExpandDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyPurposeNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.LetterWarrantyPurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyPurposeNull() {
                this[this.tableDtb_LttrWrrntyRep.LetterWarrantyPurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManagementIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.ManagementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManagementIDNull() {
                this[this.tableDtb_LttrWrrntyRep.ManagementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyKindNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.LetterWarrantyKindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyKindNull() {
                this[this.tableDtb_LttrWrrntyRep.LetterWarrantyKindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTendersAuctionsIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.TendersAuctionsIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTendersAuctionsIDNull() {
                this[this.tableDtb_LttrWrrntyRep.TendersAuctionsIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterProcessIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.LetterProcessIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterProcessIDNull() {
                this[this.tableDtb_LttrWrrntyRep.LetterProcessIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.OrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderIDNull() {
                this[this.tableDtb_LttrWrrntyRep.OrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssayesIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.AssayesIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssayesIDNull() {
                this[this.tableDtb_LttrWrrntyRep.AssayesIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.BankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankIDNull() {
                this[this.tableDtb_LttrWrrntyRep.BankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManagementExportLettrIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.ManagementExportLettrIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManagementExportLettrIDNull() {
                this[this.tableDtb_LttrWrrntyRep.ManagementExportLettrIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.ProjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectIDNull() {
                this[this.tableDtb_LttrWrrntyRep.ProjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyNoScndNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.LetterWarrantyNoScndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyNoScndNull() {
                this[this.tableDtb_LttrWrrntyRep.LetterWarrantyNoScndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyNoFullNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.LetterWarrantyNoFullColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyNoFullNull() {
                this[this.tableDtb_LttrWrrntyRep.LetterWarrantyNoFullColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinancialMemberNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.FinancialMemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinancialMemberNull() {
                this[this.tableDtb_LttrWrrntyRep.FinancialMemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfLetterWarrantyExpireDateNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.ConfLetterWarrantyExpireDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConfLetterWarrantyExpireDateNull() {
                this[this.tableDtb_LttrWrrntyRep.ConfLetterWarrantyExpireDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfValueNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.ConfValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConfValueNull() {
                this[this.tableDtb_LttrWrrntyRep.ConfValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfTenderNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.ConfTenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConfTenderNull() {
                this[this.tableDtb_LttrWrrntyRep.ConfTenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBeneficiaryIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.BeneficiaryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBeneficiaryIDNull() {
                this[this.tableDtb_LttrWrrntyRep.BeneficiaryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDecisionsResponspilitiesIDNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.DecisionsResponspilitiesIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDecisionsResponspilitiesIDNull() {
                this[this.tableDtb_LttrWrrntyRep.DecisionsResponspilitiesIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableDtb_LttrWrrntyRep.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectNameNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.ProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectNameNull() {
                this[this.tableDtb_LttrWrrntyRep.ProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierNameNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.SupplierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierNameNull() {
                this[this.tableDtb_LttrWrrntyRep.SupplierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankNameNull() {
                this[this.tableDtb_LttrWrrntyRep.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManagementNameNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.ManagementNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManagementNameNull() {
                this[this.tableDtb_LttrWrrntyRep.ManagementNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyNameNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.CurrencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyNameNull() {
                this[this.tableDtb_LttrWrrntyRep.CurrencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBenfcNameNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.BenfcNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBenfcNameNull() {
                this[this.tableDtb_LttrWrrntyRep.BenfcNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWDateRecievedNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.LetterWDateRecievedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWDateRecievedNull() {
                this[this.tableDtb_LttrWrrntyRep.LetterWDateRecievedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWExpandNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.LetterWExpandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWExpandNull() {
                this[this.tableDtb_LttrWrrntyRep.LetterWExpandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrder_NONull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.Order_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrder_NONull() {
                this[this.tableDtb_LttrWrrntyRep.Order_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrder_DateNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.Order_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrder_DateNull() {
                this[this.tableDtb_LttrWrrntyRep.Order_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderKindNameNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.OrderKindNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderKindNameNull() {
                this[this.tableDtb_LttrWrrntyRep.OrderKindNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssaysKindNameNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.AssaysKindNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssaysKindNameNull() {
                this[this.tableDtb_LttrWrrntyRep.AssaysKindNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssaysNoNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.AssaysNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssaysNoNull() {
                this[this.tableDtb_LttrWrrntyRep.AssaysNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssaysDateNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.AssaysDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssaysDateNull() {
                this[this.tableDtb_LttrWrrntyRep.AssaysDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchaseMethodeNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.PurchaseMethodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchaseMethodeNull() {
                this[this.tableDtb_LttrWrrntyRep.PurchaseMethodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTenderNoNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.TenderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTenderNoNull() {
                this[this.tableDtb_LttrWrrntyRep.TenderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTenderDateNull() {
                return this.IsNull(this.tableDtb_LttrWrrntyRep.TenderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTenderDateNull() {
                this[this.tableDtb_LttrWrrntyRep.TenderDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Dtb_RefundLtrWarrantyRepRow : global::System.Data.DataRow {
            
            private Dtb_RefundLtrWarrantyRepDataTable tableDtb_RefundLtrWarrantyRep;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Dtb_RefundLtrWarrantyRepRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtb_RefundLtrWarrantyRep = ((Dtb_RefundLtrWarrantyRepDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyNo {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyNo\' in table \'Dtb_RefundLtrWarrantyRep\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWarrantyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyDate\' in table \'Dtb_RefundLtrWarrantyRep\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWarrantyExpireDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyExpireDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyExpireDate\' in table \'Dtb_RefundLtrWarrantyRe" +
                                "p\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyExpireDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FileNo {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.FileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileNo\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.FileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Value {
                get {
                    try {
                        return ((decimal)(this[this.tableDtb_RefundLtrWarrantyRep.ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrencyID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.CurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyID\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SupID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.SupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupID\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.SupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWarrantyExpandDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyExpandDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyExpandDate\' in table \'Dtb_RefundLtrWarrantyRe" +
                                "p\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyExpandDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyPurpose {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyPurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyPurpose\' in table \'Dtb_RefundLtrWarrantyRep\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyPurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ManagementID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.ManagementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagementID\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.ManagementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LetterWarrantyKind {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyKindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyKind\' in table \'Dtb_RefundLtrWarrantyRep\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyKindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TendersAuctionsID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.TendersAuctionsIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TendersAuctionsID\' in table \'Dtb_RefundLtrWarrantyRep\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.TendersAuctionsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LetterProcessID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.LetterProcessIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterProcessID\' in table \'Dtb_RefundLtrWarrantyRep\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.LetterProcessIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long OrderID {
                get {
                    try {
                        return ((long)(this[this.tableDtb_RefundLtrWarrantyRep.OrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderID\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.OrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AssayesID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.AssayesIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssayesID\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.AssayesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.BankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankID\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ManagementExportLettrID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.ManagementExportLettrIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagementExportLettrID\' in table \'Dtb_RefundLtrWarrantyRep" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.ManagementExportLettrIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.ProjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectID\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyNoScnd {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyNoScndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyNoScnd\' in table \'Dtb_RefundLtrWarrantyRep\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyNoScndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWarrantyNoFull {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyNoFullColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWarrantyNoFull\' in table \'Dtb_RefundLtrWarrantyRep\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyNoFullColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FinancialMember {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.FinancialMemberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinancialMember\' in table \'Dtb_RefundLtrWarrantyRep\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.FinancialMemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConfLetterWarrantyExpireDate {
                get {
                    try {
                        return ((bool)(this[this.tableDtb_RefundLtrWarrantyRep.ConfLetterWarrantyExpireDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfLetterWarrantyExpireDate\' in table \'Dtb_RefundLtrWarran" +
                                "tyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.ConfLetterWarrantyExpireDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConfValue {
                get {
                    try {
                        return ((bool)(this[this.tableDtb_RefundLtrWarrantyRep.ConfValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfValue\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.ConfValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConfTender {
                get {
                    try {
                        return ((bool)(this[this.tableDtb_RefundLtrWarrantyRep.ConfTenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfTender\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.ConfTenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BeneficiaryID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.BeneficiaryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BeneficiaryID\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.BeneficiaryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DecisionsResponspilitiesID {
                get {
                    try {
                        return ((int)(this[this.tableDtb_RefundLtrWarrantyRep.DecisionsResponspilitiesIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DecisionsResponspilitiesID\' in table \'Dtb_RefundLtrWarranty" +
                                "Rep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.DecisionsResponspilitiesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProjectName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.ProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectName\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.ProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.SupplierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierName\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.SupplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ManagementName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.ManagementNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagementName\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.ManagementNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrencyName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.CurrencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyName\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.CurrencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BenfcName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.BenfcNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenfcName\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.BenfcNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterWDateRecieved {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.LetterWDateRecievedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWDateRecieved\' in table \'Dtb_RefundLtrWarrantyRep\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.LetterWDateRecievedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LetterWExpand {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_RefundLtrWarrantyRep.LetterWExpandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterWExpand\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.LetterWExpandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Order_NO {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.Order_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order_NO\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.Order_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Order_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_RefundLtrWarrantyRep.Order_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order_Date\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.Order_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderKindName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.OrderKindNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderKindName\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.OrderKindNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AssaysKindName {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.AssaysKindNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssaysKindName\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.AssaysKindNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AssaysNo {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.AssaysNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssaysNo\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.AssaysNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AssaysDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_RefundLtrWarrantyRep.AssaysDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssaysDate\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.AssaysDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PurchaseMethode {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.PurchaseMethodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseMethode\' in table \'Dtb_RefundLtrWarrantyRep\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.PurchaseMethodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TenderNo {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.TenderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenderNo\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.TenderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TenderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_RefundLtrWarrantyRep.TenderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenderDate\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.TenderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RefundLetterDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_RefundLtrWarrantyRep.RefundLetterDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefundLetterDate\' in table \'Dtb_RefundLtrWarrantyRep\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.RefundLetterDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RecievedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtb_RefundLtrWarrantyRep.RecievedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecievedDate\' in table \'Dtb_RefundLtrWarrantyRep\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.RecievedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RecieveMethodNAme {
                get {
                    try {
                        return ((string)(this[this.tableDtb_RefundLtrWarrantyRep.RecieveMethodNAmeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecieveMethodNAme\' in table \'Dtb_RefundLtrWarrantyRep\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableDtb_RefundLtrWarrantyRep.RecieveMethodNAmeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyNoNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyNoNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyDateNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyDateNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyExpireDateNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyExpireDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyExpireDateNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyExpireDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileNoNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.FileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileNoNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.FileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValueNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValueNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.CurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.CurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.SupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.SupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyExpandDateNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyExpandDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyExpandDateNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyExpandDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyPurposeNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyPurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyPurposeNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyPurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManagementIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.ManagementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManagementIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.ManagementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyKindNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyKindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyKindNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyKindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTendersAuctionsIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.TendersAuctionsIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTendersAuctionsIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.TendersAuctionsIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterProcessIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.LetterProcessIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterProcessIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.LetterProcessIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.OrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.OrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssayesIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.AssayesIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssayesIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.AssayesIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.BankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.BankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManagementExportLettrIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.ManagementExportLettrIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManagementExportLettrIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.ManagementExportLettrIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.ProjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.ProjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyNoScndNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyNoScndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyNoScndNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyNoScndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWarrantyNoFullNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyNoFullColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWarrantyNoFullNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.LetterWarrantyNoFullColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinancialMemberNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.FinancialMemberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinancialMemberNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.FinancialMemberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfLetterWarrantyExpireDateNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.ConfLetterWarrantyExpireDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConfLetterWarrantyExpireDateNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.ConfLetterWarrantyExpireDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfValueNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.ConfValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConfValueNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.ConfValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfTenderNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.ConfTenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConfTenderNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.ConfTenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBeneficiaryIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.BeneficiaryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBeneficiaryIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.BeneficiaryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDecisionsResponspilitiesIDNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.DecisionsResponspilitiesIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDecisionsResponspilitiesIDNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.DecisionsResponspilitiesIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectNameNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.ProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectNameNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.ProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierNameNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.SupplierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierNameNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.SupplierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankNameNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManagementNameNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.ManagementNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManagementNameNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.ManagementNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyNameNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.CurrencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyNameNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.CurrencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBenfcNameNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.BenfcNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBenfcNameNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.BenfcNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWDateRecievedNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.LetterWDateRecievedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWDateRecievedNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.LetterWDateRecievedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterWExpandNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.LetterWExpandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterWExpandNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.LetterWExpandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrder_NONull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.Order_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrder_NONull() {
                this[this.tableDtb_RefundLtrWarrantyRep.Order_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrder_DateNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.Order_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrder_DateNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.Order_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderKindNameNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.OrderKindNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderKindNameNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.OrderKindNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssaysKindNameNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.AssaysKindNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssaysKindNameNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.AssaysKindNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssaysNoNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.AssaysNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssaysNoNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.AssaysNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssaysDateNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.AssaysDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssaysDateNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.AssaysDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchaseMethodeNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.PurchaseMethodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchaseMethodeNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.PurchaseMethodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTenderNoNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.TenderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTenderNoNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.TenderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTenderDateNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.TenderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTenderDateNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.TenderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefundLetterDateNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.RefundLetterDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefundLetterDateNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.RefundLetterDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecievedDateNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.RecievedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecievedDateNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.RecievedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecieveMethodNAmeNull() {
                return this.IsNull(this.tableDtb_RefundLtrWarrantyRep.RecieveMethodNAmeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecieveMethodNAmeNull() {
                this[this.tableDtb_RefundLtrWarrantyRep.RecieveMethodNAmeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Dtb_WarrantyLetterRowChangeEvent : global::System.EventArgs {
            
            private Dtb_WarrantyLetterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_WarrantyLetterRowChangeEvent(Dtb_WarrantyLetterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_WarrantyLetterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DtbWarrantyLetterRefundRowChangeEvent : global::System.EventArgs {
            
            private DtbWarrantyLetterRefundRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbWarrantyLetterRefundRowChangeEvent(DtbWarrantyLetterRefundRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbWarrantyLetterRefundRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DtbLetterWAuditRowChangeEvent : global::System.EventArgs {
            
            private DtbLetterWAuditRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbLetterWAuditRowChangeEvent(DtbLetterWAuditRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbLetterWAuditRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DtbArchOrderAndLetterWRowChangeEvent : global::System.EventArgs {
            
            private DtbArchOrderAndLetterWRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbArchOrderAndLetterWRowChangeEvent(DtbArchOrderAndLetterWRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtbArchOrderAndLetterWRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Dtb_LttrWrrntyRepRowChangeEvent : global::System.EventArgs {
            
            private Dtb_LttrWrrntyRepRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_LttrWrrntyRepRowChangeEvent(Dtb_LttrWrrntyRepRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_LttrWrrntyRepRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Dtb_RefundLtrWarrantyRepRowChangeEvent : global::System.EventArgs {
            
            private Dtb_RefundLtrWarrantyRepRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_RefundLtrWarrantyRepRowChangeEvent(Dtb_RefundLtrWarrantyRepRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Dtb_RefundLtrWarrantyRepRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FinancialSysApp.LetterWarrantyTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Dtb_WarrantyLetterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Dtb_WarrantyLetterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Dtb_WarrantyLetter";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("LetterWarrantyNo", "LetterWarrantyNo");
            tableMapping.ColumnMappings.Add("LetterWarrantyDate", "LetterWarrantyDate");
            tableMapping.ColumnMappings.Add("LetterWarrantyExpireDate", "LetterWarrantyExpireDate");
            tableMapping.ColumnMappings.Add("FileNo", "FileNo");
            tableMapping.ColumnMappings.Add("Value", "Value");
            tableMapping.ColumnMappings.Add("CurrencyID", "CurrencyID");
            tableMapping.ColumnMappings.Add("SupID", "SupID");
            tableMapping.ColumnMappings.Add("LetterWarrantyExpandDate", "LetterWarrantyExpandDate");
            tableMapping.ColumnMappings.Add("LetterWarrantyPurpose", "LetterWarrantyPurpose");
            tableMapping.ColumnMappings.Add("ManagementID", "ManagementID");
            tableMapping.ColumnMappings.Add("LetterWarrantyKind", "LetterWarrantyKind");
            tableMapping.ColumnMappings.Add("TendersAuctionsID", "TendersAuctionsID");
            tableMapping.ColumnMappings.Add("LetterProcessID", "LetterProcessID");
            tableMapping.ColumnMappings.Add("OrderID", "OrderID");
            tableMapping.ColumnMappings.Add("AssayesID", "AssayesID");
            tableMapping.ColumnMappings.Add("BankID", "BankID");
            tableMapping.ColumnMappings.Add("ManagementExportLettrID", "ManagementExportLettrID");
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("LetterWarrantyNoScnd", "LetterWarrantyNoScnd");
            tableMapping.ColumnMappings.Add("LetterWarrantyNoFull", "LetterWarrantyNoFull");
            tableMapping.ColumnMappings.Add("FinancialMember", "FinancialMember");
            tableMapping.ColumnMappings.Add("ConfLetterWarrantyExpireDate", "ConfLetterWarrantyExpireDate");
            tableMapping.ColumnMappings.Add("ConfValue", "ConfValue");
            tableMapping.ColumnMappings.Add("ConfTender", "ConfTender");
            tableMapping.ColumnMappings.Add("BeneficiaryID", "BeneficiaryID");
            tableMapping.ColumnMappings.Add("DecisionsResponspilitiesID", "DecisionsResponspilitiesID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("ProjectName", "ProjectName");
            tableMapping.ColumnMappings.Add("SupplierName", "SupplierName");
            tableMapping.ColumnMappings.Add("BankName", "BankName");
            tableMapping.ColumnMappings.Add("ManagementName", "ManagementName");
            tableMapping.ColumnMappings.Add("CurrencyName", "CurrencyName");
            tableMapping.ColumnMappings.Add("BenfcName", "BenfcName");
            tableMapping.ColumnMappings.Add("LetterWDateRecieved", "LetterWDateRecieved1");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[13];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved\r\nFROM            Tbl_LetterWarranty " +
                "LEFT OUTER JOIN\r\n                         Tbl_Beneficiary ON Tbl_LetterWarranty." +
                "BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r\n                         Tbl" +
                "_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUT" +
                "ER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.ProjectID =" +
                " Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currency ON Tbl_L" +
                "etterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n                    " +
                "     Tbl_Management ON Tbl_LetterWarranty.ManagementID = Tbl_Management.Manageme" +
                "nt_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Le" +
                "tterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE        (Tbl_L" +
                "etterWarranty.LetterProcessID = @p1)\r\nORDER BY Tbl_LetterWarranty.LetterWarranty" +
                "Date DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.LetterWDateRecieved, Tbl_LetterWarranty.ConfLetterWarran" +
                "tyExpireDate, Tbl_LetterWarranty.ConfValue, Tbl_LetterWarranty.ConfTender, Tbl_L" +
                "etterWarranty.BeneficiaryID, \r\n                         Tbl_LetterWarranty.Decis" +
                "ionsResponspilitiesID, Tbl_LetterWarrantyKind.Name, Tbl_Projects.Name AS Project" +
                "Name, Tbl_Supplier.Name AS SupplierName, Tbl_Banks.Name AS BankName, \r\n         " +
                "                Tbl_Management.Name AS ManagementName, Tbl_Currency.Name AS Curr" +
                "encyName, Tbl_Beneficiary.Name AS BenfcName\r\nFROM            Tbl_LetterWarranty " +
                "LEFT OUTER JOIN\r\n                         Tbl_Beneficiary ON Tbl_LetterWarranty." +
                "BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r\n                         Tbl" +
                "_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUT" +
                "ER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.ProjectID =" +
                " Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currency ON Tbl_L" +
                "etterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n                    " +
                "     Tbl_Management ON Tbl_LetterWarranty.ManagementID = Tbl_Management.Manageme" +
                "nt_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Le" +
                "tterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE        (Tbl_L" +
                "etterWarranty.BankID = @p) AND (Tbl_LetterWarranty.LetterProcessID = @p5)\r\nORDER" +
                " BY Tbl_LetterWarranty.FileNo";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.LetterWDateRecieved, Tbl_LetterWarranty.ConfLetterWarran" +
                "tyExpireDate, Tbl_LetterWarranty.ConfValue, Tbl_LetterWarranty.ConfTender, Tbl_L" +
                "etterWarranty.BeneficiaryID, \r\n                         Tbl_LetterWarranty.Decis" +
                "ionsResponspilitiesID, Tbl_LetterWarrantyKind.Name, Tbl_Projects.Name AS Project" +
                "Name, Tbl_Supplier.Name AS SupplierName, Tbl_Banks.Name AS BankName, \r\n         " +
                "                Tbl_Management.Name AS ManagementName, Tbl_Currency.Name AS Curr" +
                "encyName, Tbl_Beneficiary.Name AS BenfcName\r\nFROM            Tbl_LetterWarranty " +
                "LEFT OUTER JOIN\r\n                         Tbl_Beneficiary ON Tbl_LetterWarranty." +
                "BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r\n                         Tbl" +
                "_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUT" +
                "ER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.ProjectID =" +
                " Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currency ON Tbl_L" +
                "etterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n                    " +
                "     Tbl_Management ON Tbl_LetterWarranty.ManagementID = Tbl_Management.Manageme" +
                "nt_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Le" +
                "tterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE        (Tbl_L" +
                "etterWarranty.LetterWarrantyKind = @p1) AND (Tbl_LetterWarranty.BankID = @p2) AN" +
                "D (Tbl_LetterWarranty.LetterWarrantyNoFull LIKE N\'%\' + @p3 + N\'%\') AND (Tbl_Lett" +
                "erWarranty.LetterProcessID = @p5)\r\nORDER BY Tbl_LetterWarranty.FileNo";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.NVarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyNoFull", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.LetterWDateRecieved, Tbl_LetterWarranty.ConfLetterWarran" +
                "tyExpireDate, Tbl_LetterWarranty.ConfValue, Tbl_LetterWarranty.ConfTender, Tbl_L" +
                "etterWarranty.BeneficiaryID, \r\n                         Tbl_LetterWarranty.Decis" +
                "ionsResponspilitiesID, Tbl_LetterWarrantyKind.Name, Tbl_Projects.Name AS Project" +
                "Name, Tbl_Supplier.Name AS SupplierName, Tbl_Banks.Name AS BankName, \r\n         " +
                "                Tbl_Management.Name AS ManagementName, Tbl_Currency.Name AS Curr" +
                "encyName, Tbl_Beneficiary.Name AS BenfcName\r\nFROM            Tbl_LetterWarranty " +
                "LEFT OUTER JOIN\r\n                         Tbl_Beneficiary ON Tbl_LetterWarranty." +
                "BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r\n                         Tbl" +
                "_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUT" +
                "ER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.ProjectID =" +
                " Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currency ON Tbl_L" +
                "etterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n                    " +
                "     Tbl_Management ON Tbl_LetterWarranty.ManagementID = Tbl_Management.Manageme" +
                "nt_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Le" +
                "tterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE        (Tbl_L" +
                "etterWarranty.Value = @p3) AND (Tbl_LetterWarranty.LetterProcessID = @p5)\r\nORDER" +
                " BY Tbl_LetterWarranty.FileNo";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 3, "Value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.LetterWDateRecieved, Tbl_LetterWarranty.ConfLetterWarran" +
                "tyExpireDate, Tbl_LetterWarranty.ConfValue, Tbl_LetterWarranty.ConfTender, Tbl_L" +
                "etterWarranty.BeneficiaryID, \r\n                         Tbl_LetterWarranty.Decis" +
                "ionsResponspilitiesID, Tbl_LetterWarrantyKind.Name, Tbl_Projects.Name AS Project" +
                "Name, Tbl_Supplier.Name AS SupplierName, Tbl_Banks.Name AS BankName, \r\n         " +
                "                Tbl_Management.Name AS ManagementName, Tbl_Currency.Name AS Curr" +
                "encyName, Tbl_Beneficiary.Name AS BenfcName\r\nFROM            Tbl_LetterWarranty " +
                "LEFT OUTER JOIN\r\n                         Tbl_Beneficiary ON Tbl_LetterWarranty." +
                "BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r\n                         Tbl" +
                "_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUT" +
                "ER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.ProjectID =" +
                " Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currency ON Tbl_L" +
                "etterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n                    " +
                "     Tbl_Management ON Tbl_LetterWarranty.ManagementID = Tbl_Management.Manageme" +
                "nt_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Le" +
                "tterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE        (Tbl_L" +
                "etterWarranty.BankID = @p1) AND (Tbl_LetterWarranty.Value = @p2) AND (Tbl_Letter" +
                "Warranty.LetterWarrantyKind = @p) AND (Tbl_LetterWarranty.LetterProcessID = @p5)" +
                "\r\nORDER BY Tbl_LetterWarranty.FileNo";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 3, "Value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved\r\nFROM            Tbl_LetterWarranty " +
                "LEFT OUTER JOIN\r\n                         Tbl_Beneficiary ON Tbl_LetterWarranty." +
                "BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r\n                         Tbl" +
                "_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUT" +
                "ER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.ProjectID =" +
                " Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currency ON Tbl_L" +
                "etterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n                    " +
                "     Tbl_Management ON Tbl_LetterWarranty.ManagementID = Tbl_Management.Manageme" +
                "nt_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Le" +
                "tterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE        (Tbl_L" +
                "etterWarranty.LetterProcessID = @p1) AND (Tbl_LetterWarranty.FileNo = @p2)\r\nORDE" +
                "R BY Tbl_LetterWarranty.FileNo";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "FileNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved\r\nFROM            Tbl_LetterWarranty " +
                "LEFT OUTER JOIN\r\n                         Tbl_Beneficiary ON Tbl_LetterWarranty." +
                "BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r\n                         Tbl" +
                "_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUT" +
                "ER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.ProjectID =" +
                " Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currency ON Tbl_L" +
                "etterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n                    " +
                "     Tbl_Management ON Tbl_LetterWarranty.ManagementID = Tbl_Management.Manageme" +
                "nt_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Le" +
                "tterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE        (Tbl_L" +
                "etterWarranty.LetterProcessID = @p1) AND (Tbl_LetterWarranty.FileNo = @p2) AND (" +
                "Tbl_LetterWarranty.LetterWarrantyKind = @p3)\r\nORDER BY Tbl_LetterWarranty.FileNo" +
                "";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "FileNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved\r\nFROM            Tbl_LetterWarranty " +
                "LEFT OUTER JOIN\r\n                         Tbl_Beneficiary ON Tbl_LetterWarranty." +
                "BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r\n                         Tbl" +
                "_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUT" +
                "ER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.ProjectID =" +
                " Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currency ON Tbl_L" +
                "etterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n                    " +
                "     Tbl_Management ON Tbl_LetterWarranty.ManagementID = Tbl_Management.Manageme" +
                "nt_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Le" +
                "tterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE        (Tbl_L" +
                "etterWarranty.LetterProcessID = @p1) AND (Tbl_LetterWarranty.FileNo >= @p2) AND " +
                "(Tbl_LetterWarranty.FileNo <= @p4)\r\nORDER BY Tbl_LetterWarranty.FileNo";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "FileNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "FileNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.LetterWDateRecieved, Tbl_LetterWarranty.ConfLetterWarran" +
                "tyExpireDate, Tbl_LetterWarranty.ConfValue, Tbl_LetterWarranty.ConfTender, Tbl_L" +
                "etterWarranty.BeneficiaryID, \r\n                         Tbl_LetterWarranty.Decis" +
                "ionsResponspilitiesID, Tbl_LetterWarrantyKind.Name, Tbl_Projects.Name AS Project" +
                "Name, Tbl_Supplier.Name AS SupplierName, Tbl_Banks.Name AS BankName, \r\n         " +
                "                Tbl_Management.Name AS ManagementName, Tbl_Currency.Name AS Curr" +
                "encyName\r\nFROM            Tbl_LetterWarranty LEFT OUTER JOIN\r\n                  " +
                "       Tbl_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOI" +
                "N\r\n                         Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.I" +
                "D LEFT OUTER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.P" +
                "rojectID = Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currenc" +
                "y ON Tbl_LetterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n          " +
                "               Tbl_Management ON Tbl_LetterWarranty.ManagementExportLettrID = Tb" +
                "l_Management.Management_ID AND Tbl_LetterWarranty.ManagementID = Tbl_Management." +
                "Management_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind O" +
                "N Tbl_LetterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE      " +
                "  (Tbl_LetterWarranty.LetterWarrantyNoFull LIKE N\'%\' + @p + N\'%\') AND (Tbl_Lette" +
                "rWarranty.LetterProcessID = @p5)\r\nORDER BY Tbl_LetterWarranty.FileNo";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p", global::System.Data.SqlDbType.NVarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyNoFull", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved\r\nFROM            Tbl_LetterWarranty " +
                "LEFT OUTER JOIN\r\n                         Tbl_Beneficiary ON Tbl_LetterWarranty." +
                "BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r\n                         Tbl" +
                "_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUT" +
                "ER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.ProjectID =" +
                " Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currency ON Tbl_L" +
                "etterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n                    " +
                "     Tbl_Management ON Tbl_LetterWarranty.ManagementID = Tbl_Management.Manageme" +
                "nt_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Le" +
                "tterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE        (Tbl_L" +
                "etterWarranty.LetterProcessID = @p1) AND (Tbl_LetterWarranty.ID = @p2)\r\nORDER BY" +
                " Tbl_LetterWarranty.FileNo";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved\r\nFROM            Tbl_LetterWarranty " +
                "LEFT OUTER JOIN\r\n                         Tbl_Beneficiary ON Tbl_LetterWarranty." +
                "BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r\n                         Tbl" +
                "_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUT" +
                "ER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.ProjectID =" +
                " Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currency ON Tbl_L" +
                "etterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n                    " +
                "     Tbl_Management ON Tbl_LetterWarranty.ManagementID = Tbl_Management.Manageme" +
                "nt_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Le" +
                "tterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE        (Tbl_L" +
                "etterWarranty.LetterWarrantyKind = @p) AND (Tbl_LetterWarranty.LetterProcessID =" +
                " @p5)\r\nORDER BY Tbl_LetterWarranty.FileNo";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved\r\nFROM            Tbl_LetterWarranty " +
                "LEFT OUTER JOIN\r\n                         Tbl_Beneficiary ON Tbl_LetterWarranty." +
                "BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r\n                         Tbl" +
                "_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUT" +
                "ER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.ProjectID =" +
                " Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currency ON Tbl_L" +
                "etterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n                    " +
                "     Tbl_Management ON Tbl_LetterWarranty.ManagementID = Tbl_Management.Manageme" +
                "nt_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Le" +
                "tterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE        (Tbl_L" +
                "etterWarranty.LetterProcessID = @p1) AND (Tbl_LetterWarranty.Value >= @p2) AND (" +
                "Tbl_LetterWarranty.Value <= @p3)\r\nORDER BY Tbl_LetterWarranty.FileNo";
            this._commandCollection[11].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 3, "Value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 3, "Value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[12].Connection = this.Connection;
            this._commandCollection[12].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved\r\nFROM            Tbl_LetterWarranty " +
                "LEFT OUTER JOIN\r\n                         Tbl_Beneficiary ON Tbl_LetterWarranty." +
                "BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r\n                         Tbl" +
                "_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Banks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUT" +
                "ER JOIN\r\n                         Tbl_Projects ON Tbl_LetterWarranty.ProjectID =" +
                " Tbl_Projects.ID LEFT OUTER JOIN\r\n                         Tbl_Currency ON Tbl_L" +
                "etterWarranty.CurrencyID = Tbl_Currency.ID LEFT OUTER JOIN\r\n                    " +
                "     Tbl_Management ON Tbl_LetterWarranty.ManagementID = Tbl_Management.Manageme" +
                "nt_ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Le" +
                "tterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID\r\nWHERE        (Tbl_L" +
                "etterWarranty.LetterProcessID = @p1) AND (Tbl_LetterWarranty.Value = @p2)\r\nORDER" +
                " BY Tbl_LetterWarranty.FileNo";
            this._commandCollection[12].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 3, "Value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, global::System.Nullable<int> p1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetData(global::System.Nullable<int> p1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankID(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, global::System.Nullable<int> p, global::System.Nullable<int> p5) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((p.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p5.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetDataByBankID(global::System.Nullable<int> p, global::System.Nullable<int> p5) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((p.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p5.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankKindNo(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<int> p2, string p3, global::System.Nullable<int> p5) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p3 == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p5.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p5.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetDataByBankKindNo(global::System.Nullable<int> p1, global::System.Nullable<int> p2, string p3, global::System.Nullable<int> p5) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p3 == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p5.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p5.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankLetterValue(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, global::System.Nullable<decimal> p3, global::System.Nullable<int> p5) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p5.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetDataByBankLetterValue(global::System.Nullable<decimal> p3, global::System.Nullable<int> p5) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p5.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankValue(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<decimal> p2, global::System.Nullable<int> p, global::System.Nullable<int> p5) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p5.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetDataByBankValue(global::System.Nullable<int> p1, global::System.Nullable<decimal> p2, global::System.Nullable<int> p, global::System.Nullable<int> p5) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p5.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFileNo(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<int> p2) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetDataByFileNo(global::System.Nullable<int> p1, global::System.Nullable<int> p2) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFillNoKindLett(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<int> p2, global::System.Nullable<int> p3) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetDataByFillNoKindLett(global::System.Nullable<int> p1, global::System.Nullable<int> p2, global::System.Nullable<int> p3) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFillNoToFillNo(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<int> p2, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetDataBy(global::System.Nullable<int> p1, global::System.Nullable<int> p2, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLetterFullNo(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, string p, global::System.Nullable<int> p5) {
            this.Adapter.SelectCommand = this.CommandCollection[8];
            if ((p == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p));
            }
            if ((p5.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p5.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetDataByLetterFullNo(string p, global::System.Nullable<int> p5) {
            this.Adapter.SelectCommand = this.CommandCollection[8];
            if ((p == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p));
            }
            if ((p5.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p5.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLetterID(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, global::System.Nullable<int> p1, int p2) {
            this.Adapter.SelectCommand = this.CommandCollection[9];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p2));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetDataByLetterID(global::System.Nullable<int> p1, int p2) {
            this.Adapter.SelectCommand = this.CommandCollection[9];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p2));
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLetterKind(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, global::System.Nullable<int> p, global::System.Nullable<int> p5) {
            this.Adapter.SelectCommand = this.CommandCollection[10];
            if ((p.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p5.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetDataByLetterKind(global::System.Nullable<int> p, global::System.Nullable<int> p5) {
            this.Adapter.SelectCommand = this.CommandCollection[10];
            if ((p.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p5.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByTwoValue(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<decimal> p2, global::System.Nullable<decimal> p3) {
            this.Adapter.SelectCommand = this.CommandCollection[11];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetDataByTwoValue(global::System.Nullable<int> p1, global::System.Nullable<decimal> p2, global::System.Nullable<decimal> p3) {
            this.Adapter.SelectCommand = this.CommandCollection[11];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByValueLetter(LetterWarranty.Dtb_WarrantyLetterDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<decimal> p2) {
            this.Adapter.SelectCommand = this.CommandCollection[12];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_WarrantyLetterDataTable GetDataByValueLetter(global::System.Nullable<int> p1, global::System.Nullable<decimal> p2) {
            this.Adapter.SelectCommand = this.CommandCollection[12];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_WarrantyLetterDataTable dataTable = new LetterWarranty.Dtb_WarrantyLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DtbWarrantyLetterRefundTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DtbWarrantyLetterRefundTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DtbWarrantyLetterRefund";
            tableMapping.ColumnMappings.Add("RecievedDate", "RecievedDate");
            tableMapping.ColumnMappings.Add("RefundLetterDate", "RefundLetterDate");
            tableMapping.ColumnMappings.Add("LetterWarrantyNo", "LetterWarrantyNo");
            tableMapping.ColumnMappings.Add("LetterWarrantyDate", "LetterWarrantyDate");
            tableMapping.ColumnMappings.Add("Value", "Value");
            tableMapping.ColumnMappings.Add("FileNo", "FileNo");
            tableMapping.ColumnMappings.Add("EmployeeName", "EmployeeName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Tbl_Employee.Name AS EmployeeName, Tbl_RefundLetter.RecievedDate, Tbl_RefundLetter.RefundLetterDate, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_LetterWarranty.LetterWarrantyDate, Tbl_LetterWarranty.Value, 
                         Tbl_LetterWarranty.FileNo
FROM            Tbl_LetterWarranty LEFT OUTER JOIN
                         Tbl_Employee RIGHT OUTER JOIN
                         Tbl_RefundLetter ON Tbl_Employee.ID = Tbl_RefundLetter.EmployeeID ON Tbl_LetterWarranty.ID = Tbl_RefundLetter.LetterWarrantyID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LetterWarranty.DtbWarrantyLetterRefundDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LetterWarranty.DtbWarrantyLetterRefundDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LetterWarranty.DtbWarrantyLetterRefundDataTable dataTable = new LetterWarranty.DtbWarrantyLetterRefundDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DtbLetterWAuditTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DtbLetterWAuditTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DtbLetterWAudit";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("LetterWarrentyID", "LetterWarrentyID");
            tableMapping.ColumnMappings.Add("LetterWBasicData", "LetterWBasicData");
            tableMapping.ColumnMappings.Add("LetterWExpandDate", "LetterWExpandDate");
            tableMapping.ColumnMappings.Add("LetterWRefundLetter", "LetterWRefundLetter");
            tableMapping.ColumnMappings.Add("LetterChangeValueLetter", "LetterChangeValueLetter");
            tableMapping.ColumnMappings.Add("ReferenceDate", "ReferenceDate");
            tableMapping.ColumnMappings.Add("EmpName", "EmpName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Tbl_LetterWarrentyAudit.ID, Tbl_LetterWarrentyAudit.UserID, Tbl_LetterWarrentyAudit.LetterWarrentyID, Tbl_LetterWarrentyAudit.LetterWBasicData, Tbl_LetterWarrentyAudit.LetterWExpandDate, 
                         Tbl_LetterWarrentyAudit.LetterWRefundLetter, Tbl_LetterWarrentyAudit.LetterChangeValueLetter, Tbl_LetterWarrentyAudit.ReferenceDate, Tbl_Employee.Name AS EmpName
FROM            Tbl_LetterWarranty RIGHT OUTER JOIN
                         Tbl_LetterWarrentyAudit ON Tbl_LetterWarranty.ID = Tbl_LetterWarrentyAudit.LetterWarrentyID LEFT OUTER JOIN
                         Tbl_Employee LEFT OUTER JOIN
                         Tbl_User ON Tbl_Employee.ID = Tbl_User.Employee_id ON Tbl_LetterWarrentyAudit.UserID = Tbl_User.ID
WHERE        (Tbl_LetterWarrentyAudit.LetterWarrentyID = @p)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrentyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LetterWarranty.DtbLetterWAuditDataTable dataTable, int p) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LetterWarranty.DtbLetterWAuditDataTable GetData(int p) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p));
            LetterWarranty.DtbLetterWAuditDataTable dataTable = new LetterWarranty.DtbLetterWAuditDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DtbArchOrderAndLetterWTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DtbArchOrderAndLetterWTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DtbArchOrderAndLetterW";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("PathFile", "PathFile");
            tableMapping.ColumnMappings.Add("LetterWID", "LetterWID");
            tableMapping.ColumnMappings.Add("OrderID", "OrderID");
            tableMapping.ColumnMappings.Add("DocumentHirarchyID", "DocumentHirarchyID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Tbl_ArchOrderAndLetterW] WHERE (([ID] = @Original_ID) AND ([PathFile] = @Original_PathFile) AND ((@IsNull_LetterWID = 1 AND [LetterWID] IS NULL) OR ([LetterWID] = @Original_LetterWID)) AND ((@IsNull_OrderID = 1 AND [OrderID] IS NULL) OR ([OrderID] = @Original_OrderID)) AND ((@IsNull_DocumentHirarchyID = 1 AND [DocumentHirarchyID] IS NULL) OR ([DocumentHirarchyID] = @Original_DocumentHirarchyID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PathFile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PathFile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LetterWID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LetterWID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OrderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrderID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DocumentHirarchyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentHirarchyID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DocumentHirarchyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentHirarchyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Tbl_ArchOrderAndLetterW] ([PathFile], [LetterWID], [OrderID], [DocumentHirarchyID]) VALUES (@PathFile, @LetterWID, @OrderID, @DocumentHirarchyID);
SELECT ID, PathFile, LetterWID, OrderID, DocumentHirarchyID FROM Tbl_ArchOrderAndLetterW WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PathFile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PathFile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LetterWID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocumentHirarchyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentHirarchyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Tbl_ArchOrderAndLetterW] SET [PathFile] = @PathFile, [LetterWID] = @LetterWID, [OrderID] = @OrderID, [DocumentHirarchyID] = @DocumentHirarchyID WHERE (([ID] = @Original_ID) AND ([PathFile] = @Original_PathFile) AND ((@IsNull_LetterWID = 1 AND [LetterWID] IS NULL) OR ([LetterWID] = @Original_LetterWID)) AND ((@IsNull_OrderID = 1 AND [OrderID] IS NULL) OR ([OrderID] = @Original_OrderID)) AND ((@IsNull_DocumentHirarchyID = 1 AND [DocumentHirarchyID] IS NULL) OR ([DocumentHirarchyID] = @Original_DocumentHirarchyID)));
SELECT ID, PathFile, LetterWID, OrderID, DocumentHirarchyID FROM Tbl_ArchOrderAndLetterW WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PathFile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PathFile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LetterWID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocumentHirarchyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentHirarchyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PathFile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PathFile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LetterWID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LetterWID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OrderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrderID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DocumentHirarchyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentHirarchyID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DocumentHirarchyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentHirarchyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysEventsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, PathFile, LetterWID, OrderID, DocumentHirarchyID FROM Tbl_ArchOrderAnd" +
                "LetterW WHERE (OrderID = @O) AND (DocumentHirarchyID = @DH)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@O", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DH", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentHirarchyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT DocumentHirarchyID, ID, LetterWID, OrderID, PathFile FROM Tbl_ArchOrderAnd" +
                "LetterW WHERE (LetterWID = @L) AND (DocumentHirarchyID = @DH)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DH", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentHirarchyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillOrderDoc(LetterWarranty.DtbArchOrderAndLetterWDataTable dataTable, global::System.Nullable<long> O, global::System.Nullable<int> DH) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((O.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(O.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DH.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(DH.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LetterWarranty.DtbArchOrderAndLetterWDataTable GetDataOrderDoc(global::System.Nullable<long> O, global::System.Nullable<int> DH) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((O.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(O.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DH.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(DH.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            LetterWarranty.DtbArchOrderAndLetterWDataTable dataTable = new LetterWarranty.DtbArchOrderAndLetterWDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLetterDoc(LetterWarranty.DtbArchOrderAndLetterWDataTable dataTable, global::System.Nullable<int> L, global::System.Nullable<int> DH) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((L.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(L.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DH.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(DH.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.DtbArchOrderAndLetterWDataTable GetDataByLetterDoc(global::System.Nullable<int> L, global::System.Nullable<int> DH) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((L.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(L.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DH.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(DH.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            LetterWarranty.DtbArchOrderAndLetterWDataTable dataTable = new LetterWarranty.DtbArchOrderAndLetterWDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LetterWarranty.DtbArchOrderAndLetterWDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LetterWarranty dataSet) {
            return this.Adapter.Update(dataSet, "DtbArchOrderAndLetterW");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_PathFile, global::System.Nullable<int> Original_LetterWID, global::System.Nullable<long> Original_OrderID, global::System.Nullable<int> Original_DocumentHirarchyID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_PathFile == null)) {
                throw new global::System.ArgumentNullException("Original_PathFile");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PathFile));
            }
            if ((Original_LetterWID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_LetterWID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_OrderID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_OrderID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_DocumentHirarchyID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_DocumentHirarchyID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PathFile, global::System.Nullable<int> LetterWID, global::System.Nullable<long> OrderID, global::System.Nullable<int> DocumentHirarchyID) {
            if ((PathFile == null)) {
                throw new global::System.ArgumentNullException("PathFile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PathFile));
            }
            if ((LetterWID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(LetterWID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((OrderID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(OrderID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((DocumentHirarchyID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(DocumentHirarchyID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PathFile, global::System.Nullable<int> LetterWID, global::System.Nullable<long> OrderID, global::System.Nullable<int> DocumentHirarchyID, int Original_ID, string Original_PathFile, global::System.Nullable<int> Original_LetterWID, global::System.Nullable<long> Original_OrderID, global::System.Nullable<int> Original_DocumentHirarchyID, int ID) {
            if ((PathFile == null)) {
                throw new global::System.ArgumentNullException("PathFile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PathFile));
            }
            if ((LetterWID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(LetterWID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((OrderID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(OrderID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((DocumentHirarchyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(DocumentHirarchyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID));
            if ((Original_PathFile == null)) {
                throw new global::System.ArgumentNullException("Original_PathFile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_PathFile));
            }
            if ((Original_LetterWID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_LetterWID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_OrderID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_OrderID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_DocumentHirarchyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_DocumentHirarchyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PathFile, global::System.Nullable<int> LetterWID, global::System.Nullable<long> OrderID, global::System.Nullable<int> DocumentHirarchyID, int Original_ID, string Original_PathFile, global::System.Nullable<int> Original_LetterWID, global::System.Nullable<long> Original_OrderID, global::System.Nullable<int> Original_DocumentHirarchyID) {
            return this.Update(PathFile, LetterWID, OrderID, DocumentHirarchyID, Original_ID, Original_PathFile, Original_LetterWID, Original_OrderID, Original_DocumentHirarchyID, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Dtb_LttrWrrntyRepTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Dtb_LttrWrrntyRepTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Dtb_LttrWrrntyRep";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("LetterWarrantyNo", "LetterWarrantyNo");
            tableMapping.ColumnMappings.Add("LetterWarrantyDate", "LetterWarrantyDate");
            tableMapping.ColumnMappings.Add("LetterWarrantyExpireDate", "LetterWarrantyExpireDate");
            tableMapping.ColumnMappings.Add("FileNo", "FileNo");
            tableMapping.ColumnMappings.Add("Value", "Value");
            tableMapping.ColumnMappings.Add("CurrencyID", "CurrencyID");
            tableMapping.ColumnMappings.Add("SupID", "SupID");
            tableMapping.ColumnMappings.Add("LetterWarrantyExpandDate", "LetterWarrantyExpandDate");
            tableMapping.ColumnMappings.Add("LetterWarrantyPurpose", "LetterWarrantyPurpose");
            tableMapping.ColumnMappings.Add("ManagementID", "ManagementID");
            tableMapping.ColumnMappings.Add("LetterWarrantyKind", "LetterWarrantyKind");
            tableMapping.ColumnMappings.Add("TendersAuctionsID", "TendersAuctionsID");
            tableMapping.ColumnMappings.Add("LetterProcessID", "LetterProcessID");
            tableMapping.ColumnMappings.Add("OrderID", "OrderID");
            tableMapping.ColumnMappings.Add("AssayesID", "AssayesID");
            tableMapping.ColumnMappings.Add("BankID", "BankID");
            tableMapping.ColumnMappings.Add("ManagementExportLettrID", "ManagementExportLettrID");
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("LetterWarrantyNoScnd", "LetterWarrantyNoScnd");
            tableMapping.ColumnMappings.Add("LetterWarrantyNoFull", "LetterWarrantyNoFull");
            tableMapping.ColumnMappings.Add("FinancialMember", "FinancialMember");
            tableMapping.ColumnMappings.Add("ConfLetterWarrantyExpireDate", "ConfLetterWarrantyExpireDate");
            tableMapping.ColumnMappings.Add("ConfValue", "ConfValue");
            tableMapping.ColumnMappings.Add("ConfTender", "ConfTender");
            tableMapping.ColumnMappings.Add("BeneficiaryID", "BeneficiaryID");
            tableMapping.ColumnMappings.Add("DecisionsResponspilitiesID", "DecisionsResponspilitiesID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("ProjectName", "ProjectName");
            tableMapping.ColumnMappings.Add("SupplierName", "SupplierName");
            tableMapping.ColumnMappings.Add("BankName", "BankName");
            tableMapping.ColumnMappings.Add("ManagementName", "ManagementName");
            tableMapping.ColumnMappings.Add("CurrencyName", "CurrencyName");
            tableMapping.ColumnMappings.Add("BenfcName", "BenfcName");
            tableMapping.ColumnMappings.Add("LetterWDateRecieved", "LetterWDateRecieved");
            tableMapping.ColumnMappings.Add("LetterWExpand", "LetterWExpand");
            tableMapping.ColumnMappings.Add("Order_NO", "Order_NO");
            tableMapping.ColumnMappings.Add("Order_Date", "Order_Date");
            tableMapping.ColumnMappings.Add("OrderKindName", "OrderKindName");
            tableMapping.ColumnMappings.Add("AssaysKindName", "AssaysKindName");
            tableMapping.ColumnMappings.Add("AssaysNo", "AssaysNo");
            tableMapping.ColumnMappings.Add("AssaysDate", "AssaysDate");
            tableMapping.ColumnMappings.Add("PurchaseMethode", "PurchaseMethode");
            tableMapping.ColumnMappings.Add("TenderNo", "TenderNo");
            tableMapping.ColumnMappings.Add("TenderDate", "TenderDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved, MAX(Tbl_LetterWExpandDates.LetterWE" +
                "xpandDate) AS LetterWExpand, Tbl_Order.Order_NO, Tbl_Order.Order_Date, \r\n       " +
                "                  Tbl_OrderKind.Name AS OrderKindName, Tbl_AssaysKind.Name AS As" +
                "saysKindName, Tbl_Assays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Na" +
                "me AS PurchaseMethode, Tbl_TendersAuctions.TenderNo, \r\n                         " +
                "Tbl_TendersAuctions.TenderDate\r\nFROM            Tbl_LetterWExpandDates FULL OUTE" +
                "R JOIN\r\n                         Tbl_Management RIGHT OUTER JOIN\r\n              " +
                "           Tbl_Currency RIGHT OUTER JOIN\r\n                         Tbl_OrderKind" +
                " RIGHT OUTER JOIN\r\n                         Tbl_Order ON Tbl_OrderKind.ID = Tbl_" +
                "Order.OrderKind_ID RIGHT OUTER JOIN\r\n                         Tbl_Assays INNER J" +
                "OIN\r\n                         Tbl_AssaysKind ON Tbl_Assays.AssaysKindId = Tbl_As" +
                "saysKind.ID RIGHT OUTER JOIN\r\n                         Tbl_TendersAuctions RIGHT" +
                " OUTER JOIN\r\n                         Tbl_LetterWarranty ON Tbl_TendersAuctions." +
                "ID = Tbl_LetterWarranty.TendersAuctionsID ON Tbl_Assays.ID = Tbl_LetterWarranty." +
                "AssayesID ON Tbl_Order.ID = Tbl_LetterWarranty.OrderID LEFT OUTER JOIN\r\n        " +
                "                 Tbl_Beneficiary ON Tbl_LetterWarranty.BeneficiaryID = Tbl_Benef" +
                "iciary.ID LEFT OUTER JOIN\r\n                         Tbl_Supplier ON Tbl_LetterWa" +
                "rranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n                         Tbl_Ban" +
                "ks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUTER JOIN\r\n                " +
                "         Tbl_Projects ON Tbl_LetterWarranty.ProjectID = Tbl_Projects.ID ON Tbl_C" +
                "urrency.ID = Tbl_LetterWarranty.CurrencyID ON Tbl_Management.Management_ID = Tbl" +
                "_LetterWarranty.ManagementID LEFT OUTER JOIN\r\n                         Tbl_Lette" +
                "rWarrantyKind ON Tbl_LetterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind." +
                "ID LEFT OUTER JOIN\r\n                         Tbl_PurchaseMethods ON Tbl_TendersA" +
                "uctions.PurchaseMethodeID = Tbl_PurchaseMethods.ID ON Tbl_LetterWExpandDates.Let" +
                "terWarrantyID = Tbl_LetterWarranty.ID\r\nGROUP BY Tbl_LetterWarranty.ID, Tbl_Lette" +
                "rWarranty.LetterWarrantyNo, Tbl_LetterWarranty.LetterWarrantyDate, Tbl_LetterWar" +
                "ranty.LetterWarrantyExpireDate, Tbl_LetterWarranty.FileNo, Tbl_LetterWarranty.Va" +
                "lue, \r\n                         Tbl_LetterWarranty.CurrencyID, Tbl_LetterWarrant" +
                "y.SupID, Tbl_LetterWarranty.LetterWarrantyExpandDate, Tbl_LetterWarranty.LetterW" +
                "arrantyPurpose, Tbl_LetterWarranty.ManagementID, \r\n                         Tbl_" +
                "LetterWarranty.LetterWarrantyKind, Tbl_LetterWarranty.TendersAuctionsID, Tbl_Let" +
                "terWarranty.LetterProcessID, Tbl_LetterWarranty.OrderID, Tbl_LetterWarranty.Assa" +
                "yesID, Tbl_LetterWarranty.BankID, \r\n                         Tbl_LetterWarranty." +
                "ManagementExportLettrID, Tbl_LetterWarranty.ProjectID, Tbl_LetterWarranty.Letter" +
                "WarrantyNoScnd, Tbl_LetterWarranty.LetterWarrantyNoFull, Tbl_LetterWarranty.Fina" +
                "ncialMember, \r\n                         Tbl_LetterWarranty.BeneficiaryID, Tbl_Le" +
                "tterWarranty.DecisionsResponspilitiesID, Tbl_LetterWarrantyKind.Name, Tbl_Projec" +
                "ts.Name, Tbl_Supplier.Name, Tbl_Banks.Name, Tbl_Management.Name, Tbl_Currency.Na" +
                "me, \r\n                         Tbl_Beneficiary.Name, Tbl_LetterWarranty.LetterWD" +
                "ateRecieved, Tbl_Order.Order_NO, Tbl_Order.Order_Date, Tbl_OrderKind.Name, Tbl_L" +
                "etterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfValue, \r\n    " +
                "                     Tbl_LetterWarranty.ConfTender, Tbl_AssaysKind.Name, Tbl_Ass" +
                "ays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Name, Tbl_TendersAuctio" +
                "ns.TenderNo, Tbl_TendersAuctions.TenderDate\r\nHAVING        (Tbl_LetterWarranty.L" +
                "etterProcessID = @p1) AND (Tbl_LetterWarranty.FileNo >= @p2) AND (Tbl_LetterWarr" +
                "anty.FileNo <= @p4) AND (Tbl_LetterWarranty.LetterWarrantyKind = @pLtrKind)\r\nORD" +
                "ER BY Tbl_LetterWarranty.FileNo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "FileNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "FileNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pLtrKind", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved, MAX(Tbl_LetterWExpandDates.LetterWE" +
                "xpandDate) AS LetterWExpand, Tbl_Order.Order_NO, Tbl_Order.Order_Date, \r\n       " +
                "                  Tbl_OrderKind.Name AS OrderKindName, Tbl_AssaysKind.Name AS As" +
                "saysKindName, Tbl_Assays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Na" +
                "me AS PurchaseMethode, Tbl_TendersAuctions.TenderNo, \r\n                         " +
                "Tbl_TendersAuctions.TenderDate\r\nFROM            Tbl_LetterWExpandDates FULL OUTE" +
                "R JOIN\r\n                         Tbl_Management RIGHT OUTER JOIN\r\n              " +
                "           Tbl_Currency RIGHT OUTER JOIN\r\n                         Tbl_OrderKind" +
                " RIGHT OUTER JOIN\r\n                         Tbl_Order ON Tbl_OrderKind.ID = Tbl_" +
                "Order.OrderKind_ID RIGHT OUTER JOIN\r\n                         Tbl_Assays INNER J" +
                "OIN\r\n                         Tbl_AssaysKind ON Tbl_Assays.AssaysKindId = Tbl_As" +
                "saysKind.ID RIGHT OUTER JOIN\r\n                         Tbl_TendersAuctions RIGHT" +
                " OUTER JOIN\r\n                         Tbl_LetterWarranty ON Tbl_TendersAuctions." +
                "ID = Tbl_LetterWarranty.TendersAuctionsID ON Tbl_Assays.ID = Tbl_LetterWarranty." +
                "AssayesID ON Tbl_Order.ID = Tbl_LetterWarranty.OrderID LEFT OUTER JOIN\r\n        " +
                "                 Tbl_Beneficiary ON Tbl_LetterWarranty.BeneficiaryID = Tbl_Benef" +
                "iciary.ID LEFT OUTER JOIN\r\n                         Tbl_Supplier ON Tbl_LetterWa" +
                "rranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n                         Tbl_Ban" +
                "ks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUTER JOIN\r\n                " +
                "         Tbl_Projects ON Tbl_LetterWarranty.ProjectID = Tbl_Projects.ID ON Tbl_C" +
                "urrency.ID = Tbl_LetterWarranty.CurrencyID ON Tbl_Management.Management_ID = Tbl" +
                "_LetterWarranty.ManagementID LEFT OUTER JOIN\r\n                         Tbl_Lette" +
                "rWarrantyKind ON Tbl_LetterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind." +
                "ID LEFT OUTER JOIN\r\n                         Tbl_PurchaseMethods ON Tbl_TendersA" +
                "uctions.PurchaseMethodeID = Tbl_PurchaseMethods.ID ON Tbl_LetterWExpandDates.Let" +
                "terWarrantyID = Tbl_LetterWarranty.ID\r\nGROUP BY Tbl_LetterWarranty.ID, Tbl_Lette" +
                "rWarranty.LetterWarrantyNo, Tbl_LetterWarranty.LetterWarrantyDate, Tbl_LetterWar" +
                "ranty.LetterWarrantyExpireDate, Tbl_LetterWarranty.FileNo, Tbl_LetterWarranty.Va" +
                "lue, \r\n                         Tbl_LetterWarranty.CurrencyID, Tbl_LetterWarrant" +
                "y.SupID, Tbl_LetterWarranty.LetterWarrantyExpandDate, Tbl_LetterWarranty.LetterW" +
                "arrantyPurpose, Tbl_LetterWarranty.ManagementID, \r\n                         Tbl_" +
                "LetterWarranty.LetterWarrantyKind, Tbl_LetterWarranty.TendersAuctionsID, Tbl_Let" +
                "terWarranty.LetterProcessID, Tbl_LetterWarranty.OrderID, Tbl_LetterWarranty.Assa" +
                "yesID, Tbl_LetterWarranty.BankID, \r\n                         Tbl_LetterWarranty." +
                "ManagementExportLettrID, Tbl_LetterWarranty.ProjectID, Tbl_LetterWarranty.Letter" +
                "WarrantyNoScnd, Tbl_LetterWarranty.LetterWarrantyNoFull, Tbl_LetterWarranty.Fina" +
                "ncialMember, \r\n                         Tbl_LetterWarranty.BeneficiaryID, Tbl_Le" +
                "tterWarranty.DecisionsResponspilitiesID, Tbl_LetterWarrantyKind.Name, Tbl_Projec" +
                "ts.Name, Tbl_Supplier.Name, Tbl_Banks.Name, Tbl_Management.Name, Tbl_Currency.Na" +
                "me, \r\n                         Tbl_Beneficiary.Name, Tbl_LetterWarranty.LetterWD" +
                "ateRecieved, Tbl_Order.Order_NO, Tbl_Order.Order_Date, Tbl_OrderKind.Name, Tbl_L" +
                "etterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfValue, \r\n    " +
                "                     Tbl_LetterWarranty.ConfTender, Tbl_AssaysKind.Name, Tbl_Ass" +
                "ays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Name, Tbl_TendersAuctio" +
                "ns.TenderNo, Tbl_TendersAuctions.TenderDate\r\nHAVING        (Tbl_LetterWarranty.L" +
                "etterProcessID = @p1) AND (Tbl_LetterWarranty.LetterWarrantyKind = @pLtrKind) AN" +
                "D (Tbl_LetterWarranty.LetterWDateRecieved >= @pDate1) AND \r\n                    " +
                "     (Tbl_LetterWarranty.LetterWDateRecieved <= @pDate2)\r\nORDER BY Tbl_LetterWar" +
                "ranty.LetterWDateRecieved";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pLtrKind", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pDate1", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWDateRecieved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pDate2", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWDateRecieved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved, MAX(Tbl_LetterWExpandDates.LetterWE" +
                "xpandDate) AS LetterWExpand, Tbl_Order.Order_NO, Tbl_Order.Order_Date, \r\n       " +
                "                  Tbl_OrderKind.Name AS OrderKindName, Tbl_AssaysKind.Name AS As" +
                "saysKindName, Tbl_Assays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Na" +
                "me AS PurchaseMethode, Tbl_TendersAuctions.TenderNo, \r\n                         " +
                "Tbl_TendersAuctions.TenderDate\r\nFROM            Tbl_LetterWExpandDates FULL OUTE" +
                "R JOIN\r\n                         Tbl_Management RIGHT OUTER JOIN\r\n              " +
                "           Tbl_Currency RIGHT OUTER JOIN\r\n                         Tbl_OrderKind" +
                " RIGHT OUTER JOIN\r\n                         Tbl_Order ON Tbl_OrderKind.ID = Tbl_" +
                "Order.OrderKind_ID RIGHT OUTER JOIN\r\n                         Tbl_Assays INNER J" +
                "OIN\r\n                         Tbl_AssaysKind ON Tbl_Assays.AssaysKindId = Tbl_As" +
                "saysKind.ID RIGHT OUTER JOIN\r\n                         Tbl_TendersAuctions RIGHT" +
                " OUTER JOIN\r\n                         Tbl_LetterWarranty ON Tbl_TendersAuctions." +
                "ID = Tbl_LetterWarranty.TendersAuctionsID ON Tbl_Assays.ID = Tbl_LetterWarranty." +
                "AssayesID ON Tbl_Order.ID = Tbl_LetterWarranty.OrderID LEFT OUTER JOIN\r\n        " +
                "                 Tbl_Beneficiary ON Tbl_LetterWarranty.BeneficiaryID = Tbl_Benef" +
                "iciary.ID LEFT OUTER JOIN\r\n                         Tbl_Supplier ON Tbl_LetterWa" +
                "rranty.SupID = Tbl_Supplier.ID LEFT OUTER JOIN\r\n                         Tbl_Ban" +
                "ks ON Tbl_LetterWarranty.BankID = Tbl_Banks.ID LEFT OUTER JOIN\r\n                " +
                "         Tbl_Projects ON Tbl_LetterWarranty.ProjectID = Tbl_Projects.ID ON Tbl_C" +
                "urrency.ID = Tbl_LetterWarranty.CurrencyID ON Tbl_Management.Management_ID = Tbl" +
                "_LetterWarranty.ManagementID LEFT OUTER JOIN\r\n                         Tbl_Lette" +
                "rWarrantyKind ON Tbl_LetterWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind." +
                "ID LEFT OUTER JOIN\r\n                         Tbl_PurchaseMethods ON Tbl_TendersA" +
                "uctions.PurchaseMethodeID = Tbl_PurchaseMethods.ID ON Tbl_LetterWExpandDates.Let" +
                "terWarrantyID = Tbl_LetterWarranty.ID\r\nGROUP BY Tbl_LetterWarranty.ID, Tbl_Lette" +
                "rWarranty.LetterWarrantyNo, Tbl_LetterWarranty.LetterWarrantyDate, Tbl_LetterWar" +
                "ranty.LetterWarrantyExpireDate, Tbl_LetterWarranty.FileNo, Tbl_LetterWarranty.Va" +
                "lue, \r\n                         Tbl_LetterWarranty.CurrencyID, Tbl_LetterWarrant" +
                "y.SupID, Tbl_LetterWarranty.LetterWarrantyExpandDate, Tbl_LetterWarranty.LetterW" +
                "arrantyPurpose, Tbl_LetterWarranty.ManagementID, \r\n                         Tbl_" +
                "LetterWarranty.LetterWarrantyKind, Tbl_LetterWarranty.TendersAuctionsID, Tbl_Let" +
                "terWarranty.LetterProcessID, Tbl_LetterWarranty.OrderID, Tbl_LetterWarranty.Assa" +
                "yesID, Tbl_LetterWarranty.BankID, \r\n                         Tbl_LetterWarranty." +
                "ManagementExportLettrID, Tbl_LetterWarranty.ProjectID, Tbl_LetterWarranty.Letter" +
                "WarrantyNoScnd, Tbl_LetterWarranty.LetterWarrantyNoFull, Tbl_LetterWarranty.Fina" +
                "ncialMember, \r\n                         Tbl_LetterWarranty.BeneficiaryID, Tbl_Le" +
                "tterWarranty.DecisionsResponspilitiesID, Tbl_LetterWarrantyKind.Name, Tbl_Projec" +
                "ts.Name, Tbl_Supplier.Name, Tbl_Banks.Name, Tbl_Management.Name, Tbl_Currency.Na" +
                "me, \r\n                         Tbl_Beneficiary.Name, Tbl_LetterWarranty.LetterWD" +
                "ateRecieved, Tbl_Order.Order_NO, Tbl_Order.Order_Date, Tbl_OrderKind.Name, Tbl_L" +
                "etterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfValue, \r\n    " +
                "                     Tbl_LetterWarranty.ConfTender, Tbl_AssaysKind.Name, Tbl_Ass" +
                "ays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Name, Tbl_TendersAuctio" +
                "ns.TenderNo, Tbl_TendersAuctions.TenderDate\r\nHAVING        (Tbl_LetterWarranty.L" +
                "etterProcessID = @p1) AND (Tbl_LetterWarranty.LetterWarrantyKind = @pLtrKind) AN" +
                "D (Tbl_LetterWarranty.LetterWarrantyExpandDate >= @pDate1) AND \r\n               " +
                "          (Tbl_LetterWarranty.LetterWarrantyExpandDate <= @pDate2)\r\nORDER BY Tbl" +
                "_LetterWarranty.LetterWarrantyExpandDate";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pLtrKind", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pDate1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyExpandDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pDate2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyExpandDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByFileToFile(LetterWarranty.Dtb_LttrWrrntyRepDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<int> p2, global::System.Nullable<int> p4, global::System.Nullable<int> pLtrKind) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LetterWarranty.Dtb_LttrWrrntyRepDataTable GetData(global::System.Nullable<int> p1, global::System.Nullable<int> p2, global::System.Nullable<int> p4, global::System.Nullable<int> pLtrKind) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_LttrWrrntyRepDataTable dataTable = new LetterWarranty.Dtb_LttrWrrntyRepDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByTwoDateRecieved(LetterWarranty.Dtb_LttrWrrntyRepDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<int> pLtrKind, string pDate1, string pDate2) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pDate1));
            }
            if ((pDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pDate2));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_LttrWrrntyRepDataTable GetDataBy(global::System.Nullable<int> p1, global::System.Nullable<int> pLtrKind, string pDate1, string pDate2) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pDate1));
            }
            if ((pDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pDate2));
            }
            LetterWarranty.Dtb_LttrWrrntyRepDataTable dataTable = new LetterWarranty.Dtb_LttrWrrntyRepDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByTwoDatesExpireDates(LetterWarranty.Dtb_LttrWrrntyRepDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<int> pLtrKind, string pDate1, string pDate2) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pDate1));
            }
            if ((pDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pDate2));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_LttrWrrntyRepDataTable GetDataBy1(global::System.Nullable<int> p1, global::System.Nullable<int> pLtrKind, string pDate1, string pDate2) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pDate1));
            }
            if ((pDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pDate2));
            }
            LetterWarranty.Dtb_LttrWrrntyRepDataTable dataTable = new LetterWarranty.Dtb_LttrWrrntyRepDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Dtb_RefundLtrWarrantyRepTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Dtb_RefundLtrWarrantyRepTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Dtb_RefundLtrWarrantyRep";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("LetterWarrantyNo", "LetterWarrantyNo");
            tableMapping.ColumnMappings.Add("LetterWarrantyDate", "LetterWarrantyDate");
            tableMapping.ColumnMappings.Add("LetterWarrantyExpireDate", "LetterWarrantyExpireDate");
            tableMapping.ColumnMappings.Add("FileNo", "FileNo");
            tableMapping.ColumnMappings.Add("Value", "Value");
            tableMapping.ColumnMappings.Add("CurrencyID", "CurrencyID");
            tableMapping.ColumnMappings.Add("SupID", "SupID");
            tableMapping.ColumnMappings.Add("LetterWarrantyExpandDate", "LetterWarrantyExpandDate");
            tableMapping.ColumnMappings.Add("LetterWarrantyPurpose", "LetterWarrantyPurpose");
            tableMapping.ColumnMappings.Add("ManagementID", "ManagementID");
            tableMapping.ColumnMappings.Add("LetterWarrantyKind", "LetterWarrantyKind");
            tableMapping.ColumnMappings.Add("TendersAuctionsID", "TendersAuctionsID");
            tableMapping.ColumnMappings.Add("LetterProcessID", "LetterProcessID");
            tableMapping.ColumnMappings.Add("OrderID", "OrderID");
            tableMapping.ColumnMappings.Add("AssayesID", "AssayesID");
            tableMapping.ColumnMappings.Add("BankID", "BankID");
            tableMapping.ColumnMappings.Add("ManagementExportLettrID", "ManagementExportLettrID");
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("LetterWarrantyNoScnd", "LetterWarrantyNoScnd");
            tableMapping.ColumnMappings.Add("LetterWarrantyNoFull", "LetterWarrantyNoFull");
            tableMapping.ColumnMappings.Add("FinancialMember", "FinancialMember");
            tableMapping.ColumnMappings.Add("ConfLetterWarrantyExpireDate", "ConfLetterWarrantyExpireDate");
            tableMapping.ColumnMappings.Add("ConfValue", "ConfValue");
            tableMapping.ColumnMappings.Add("ConfTender", "ConfTender");
            tableMapping.ColumnMappings.Add("BeneficiaryID", "BeneficiaryID");
            tableMapping.ColumnMappings.Add("DecisionsResponspilitiesID", "DecisionsResponspilitiesID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("ProjectName", "ProjectName");
            tableMapping.ColumnMappings.Add("SupplierName", "SupplierName");
            tableMapping.ColumnMappings.Add("BankName", "BankName");
            tableMapping.ColumnMappings.Add("ManagementName", "ManagementName");
            tableMapping.ColumnMappings.Add("CurrencyName", "CurrencyName");
            tableMapping.ColumnMappings.Add("BenfcName", "BenfcName");
            tableMapping.ColumnMappings.Add("LetterWDateRecieved", "LetterWDateRecieved");
            tableMapping.ColumnMappings.Add("LetterWExpand", "LetterWExpand");
            tableMapping.ColumnMappings.Add("Order_NO", "Order_NO");
            tableMapping.ColumnMappings.Add("Order_Date", "Order_Date");
            tableMapping.ColumnMappings.Add("OrderKindName", "OrderKindName");
            tableMapping.ColumnMappings.Add("AssaysKindName", "AssaysKindName");
            tableMapping.ColumnMappings.Add("AssaysNo", "AssaysNo");
            tableMapping.ColumnMappings.Add("AssaysDate", "AssaysDate");
            tableMapping.ColumnMappings.Add("PurchaseMethode", "PurchaseMethode");
            tableMapping.ColumnMappings.Add("TenderNo", "TenderNo");
            tableMapping.ColumnMappings.Add("TenderDate", "TenderDate");
            tableMapping.ColumnMappings.Add("RefundLetterDate", "RefundLetterDate");
            tableMapping.ColumnMappings.Add("RecievedDate", "RecievedDate");
            tableMapping.ColumnMappings.Add("RecieveMethodNAme", "RecieveMethodNAme");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved, MAX(Tbl_LetterWExpandDates.LetterWE" +
                "xpandDate) AS LetterWExpand, Tbl_Order.Order_NO, Tbl_Order.Order_Date, \r\n       " +
                "                  Tbl_OrderKind.Name AS OrderKindName, Tbl_AssaysKind.Name AS As" +
                "saysKindName, Tbl_Assays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Na" +
                "me AS PurchaseMethode, Tbl_TendersAuctions.TenderNo, \r\n                         " +
                "Tbl_TendersAuctions.TenderDate, Tbl_RefundLetter.RefundLetterDate, Tbl_RefundLet" +
                "ter.RecievedDate, Tbl_RecievedMethod.Name AS RecieveMethodNAme\r\nFROM            " +
                "Tbl_RefundLetter LEFT OUTER JOIN\r\n                         Tbl_RecievedMethod ON" +
                " Tbl_RefundLetter.ID = Tbl_RecievedMethod.ID FULL OUTER JOIN\r\n                  " +
                "       Tbl_Management RIGHT OUTER JOIN\r\n                         Tbl_Currency RI" +
                "GHT OUTER JOIN\r\n                         Tbl_OrderKind RIGHT OUTER JOIN\r\n       " +
                "                  Tbl_Order ON Tbl_OrderKind.ID = Tbl_Order.OrderKind_ID RIGHT O" +
                "UTER JOIN\r\n                         Tbl_Assays INNER JOIN\r\n                     " +
                "    Tbl_AssaysKind ON Tbl_Assays.AssaysKindId = Tbl_AssaysKind.ID RIGHT OUTER JO" +
                "IN\r\n                         Tbl_TendersAuctions RIGHT OUTER JOIN\r\n             " +
                "            Tbl_LetterWarranty ON Tbl_TendersAuctions.ID = Tbl_LetterWarranty.Te" +
                "ndersAuctionsID ON Tbl_Assays.ID = Tbl_LetterWarranty.AssayesID ON Tbl_Order.ID " +
                "= Tbl_LetterWarranty.OrderID LEFT OUTER JOIN\r\n                         Tbl_Benef" +
                "iciary ON Tbl_LetterWarranty.BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r" +
                "\n                         Tbl_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplie" +
                "r.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_LetterWarranty.B" +
                "ankID = Tbl_Banks.ID LEFT OUTER JOIN\r\n                         Tbl_Projects ON T" +
                "bl_LetterWarranty.ProjectID = Tbl_Projects.ID ON Tbl_Currency.ID = Tbl_LetterWar" +
                "ranty.CurrencyID ON Tbl_Management.Management_ID = Tbl_LetterWarranty.Management" +
                "ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Lette" +
                "rWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID LEFT OUTER JOIN\r\n      " +
                "                   Tbl_PurchaseMethods ON Tbl_TendersAuctions.PurchaseMethodeID " +
                "= Tbl_PurchaseMethods.ID ON Tbl_RefundLetter.LetterWarrantyID = Tbl_LetterWarran" +
                "ty.ID FULL OUTER JOIN\r\n                         Tbl_LetterWExpandDates ON Tbl_Le" +
                "tterWarranty.ID = Tbl_LetterWExpandDates.LetterWarrantyID\r\nGROUP BY Tbl_LetterWa" +
                "rranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_LetterWarranty.LetterWarrant" +
                "yDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl_LetterWarranty.FileNo, T" +
                "bl_LetterWarranty.Value, \r\n                         Tbl_LetterWarranty.CurrencyI" +
                "D, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterWarrantyExpandDate, Tbl_Le" +
                "tterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty.ManagementID, \r\n         " +
                "                Tbl_LetterWarranty.LetterWarrantyKind, Tbl_LetterWarranty.Tender" +
                "sAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_LetterWarranty.OrderID, Tbl" +
                "_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r\n                        " +
                " Tbl_LetterWarranty.ManagementExportLettrID, Tbl_LetterWarranty.ProjectID, Tbl_L" +
                "etterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty.LetterWarrantyNoFull, Tbl" +
                "_LetterWarranty.FinancialMember, \r\n                         Tbl_LetterWarranty.B" +
                "eneficiaryID, Tbl_LetterWarranty.DecisionsResponspilitiesID, Tbl_LetterWarrantyK" +
                "ind.Name, Tbl_Projects.Name, Tbl_Supplier.Name, Tbl_Banks.Name, Tbl_Management.N" +
                "ame, Tbl_Currency.Name, \r\n                         Tbl_Beneficiary.Name, Tbl_Let" +
                "terWarranty.LetterWDateRecieved, Tbl_Order.Order_NO, Tbl_Order.Order_Date, Tbl_O" +
                "rderKind.Name, Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarran" +
                "ty.ConfValue, \r\n                         Tbl_LetterWarranty.ConfTender, Tbl_Assa" +
                "ysKind.Name, Tbl_Assays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Nam" +
                "e, Tbl_TendersAuctions.TenderNo, Tbl_TendersAuctions.TenderDate, \r\n             " +
                "            Tbl_RefundLetter.RefundLetterDate, Tbl_RefundLetter.RecievedDate, Tb" +
                "l_RecievedMethod.Name\r\nHAVING        (Tbl_LetterWarranty.LetterProcessID = @p1) " +
                "AND (Tbl_LetterWarranty.LetterWarrantyKind = @pLtrKind) AND (Tbl_RefundLetter.Re" +
                "cievedDate >= @PFdate) AND (Tbl_RefundLetter.RecievedDate <= @pTDate)\r\nORDER BY " +
                "Tbl_LetterWarranty.FileNo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pLtrKind", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PFdate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "RecievedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pTDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "RecievedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved, MAX(Tbl_LetterWExpandDates.LetterWE" +
                "xpandDate) AS LetterWExpand, Tbl_Order.Order_NO, Tbl_Order.Order_Date, \r\n       " +
                "                  Tbl_OrderKind.Name AS OrderKindName, Tbl_AssaysKind.Name AS As" +
                "saysKindName, Tbl_Assays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Na" +
                "me AS PurchaseMethode, Tbl_TendersAuctions.TenderNo, \r\n                         " +
                "Tbl_TendersAuctions.TenderDate, Tbl_RefundLetter.RefundLetterDate, Tbl_RefundLet" +
                "ter.RecievedDate, Tbl_RecievedMethod.Name AS RecieveMethodNAme\r\nFROM            " +
                "Tbl_RefundLetter LEFT OUTER JOIN\r\n                         Tbl_RecievedMethod ON" +
                " Tbl_RefundLetter.ID = Tbl_RecievedMethod.ID FULL OUTER JOIN\r\n                  " +
                "       Tbl_Management RIGHT OUTER JOIN\r\n                         Tbl_Currency RI" +
                "GHT OUTER JOIN\r\n                         Tbl_OrderKind RIGHT OUTER JOIN\r\n       " +
                "                  Tbl_Order ON Tbl_OrderKind.ID = Tbl_Order.OrderKind_ID RIGHT O" +
                "UTER JOIN\r\n                         Tbl_Assays INNER JOIN\r\n                     " +
                "    Tbl_AssaysKind ON Tbl_Assays.AssaysKindId = Tbl_AssaysKind.ID RIGHT OUTER JO" +
                "IN\r\n                         Tbl_TendersAuctions RIGHT OUTER JOIN\r\n             " +
                "            Tbl_LetterWarranty ON Tbl_TendersAuctions.ID = Tbl_LetterWarranty.Te" +
                "ndersAuctionsID ON Tbl_Assays.ID = Tbl_LetterWarranty.AssayesID ON Tbl_Order.ID " +
                "= Tbl_LetterWarranty.OrderID LEFT OUTER JOIN\r\n                         Tbl_Benef" +
                "iciary ON Tbl_LetterWarranty.BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r" +
                "\n                         Tbl_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplie" +
                "r.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_LetterWarranty.B" +
                "ankID = Tbl_Banks.ID LEFT OUTER JOIN\r\n                         Tbl_Projects ON T" +
                "bl_LetterWarranty.ProjectID = Tbl_Projects.ID ON Tbl_Currency.ID = Tbl_LetterWar" +
                "ranty.CurrencyID ON Tbl_Management.Management_ID = Tbl_LetterWarranty.Management" +
                "ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Lette" +
                "rWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID LEFT OUTER JOIN\r\n      " +
                "                   Tbl_PurchaseMethods ON Tbl_TendersAuctions.PurchaseMethodeID " +
                "= Tbl_PurchaseMethods.ID ON Tbl_RefundLetter.LetterWarrantyID = Tbl_LetterWarran" +
                "ty.ID FULL OUTER JOIN\r\n                         Tbl_LetterWExpandDates ON Tbl_Le" +
                "tterWarranty.ID = Tbl_LetterWExpandDates.LetterWarrantyID\r\nGROUP BY Tbl_LetterWa" +
                "rranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_LetterWarranty.LetterWarrant" +
                "yDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl_LetterWarranty.FileNo, T" +
                "bl_LetterWarranty.Value, \r\n                         Tbl_LetterWarranty.CurrencyI" +
                "D, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterWarrantyExpandDate, Tbl_Le" +
                "tterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty.ManagementID, \r\n         " +
                "                Tbl_LetterWarranty.LetterWarrantyKind, Tbl_LetterWarranty.Tender" +
                "sAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_LetterWarranty.OrderID, Tbl" +
                "_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r\n                        " +
                " Tbl_LetterWarranty.ManagementExportLettrID, Tbl_LetterWarranty.ProjectID, Tbl_L" +
                "etterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty.LetterWarrantyNoFull, Tbl" +
                "_LetterWarranty.FinancialMember, \r\n                         Tbl_LetterWarranty.B" +
                "eneficiaryID, Tbl_LetterWarranty.DecisionsResponspilitiesID, Tbl_LetterWarrantyK" +
                "ind.Name, Tbl_Projects.Name, Tbl_Supplier.Name, Tbl_Banks.Name, Tbl_Management.N" +
                "ame, Tbl_Currency.Name, \r\n                         Tbl_Beneficiary.Name, Tbl_Let" +
                "terWarranty.LetterWDateRecieved, Tbl_Order.Order_NO, Tbl_Order.Order_Date, Tbl_O" +
                "rderKind.Name, Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarran" +
                "ty.ConfValue, \r\n                         Tbl_LetterWarranty.ConfTender, Tbl_Assa" +
                "ysKind.Name, Tbl_Assays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Nam" +
                "e, Tbl_TendersAuctions.TenderNo, Tbl_TendersAuctions.TenderDate, \r\n             " +
                "            Tbl_RefundLetter.RefundLetterDate, Tbl_RefundLetter.RecievedDate, Tb" +
                "l_RecievedMethod.Name\r\nHAVING        (Tbl_LetterWarranty.LetterProcessID = @p1) " +
                "AND (Tbl_LetterWarranty.LetterWarrantyKind = @pLtrKind) AND (Tbl_RefundLetter.Re" +
                "cievedDate >= @PFdate) AND (Tbl_RefundLetter.RecievedDate <= @pTDate) AND \r\n    " +
                "                     (Tbl_LetterWarranty.BankID = @PBank)\r\nORDER BY Tbl_LetterWa" +
                "rranty.FileNo";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pLtrKind", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PFdate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "RecievedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pTDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "RecievedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBank", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved, MAX(Tbl_LetterWExpandDates.LetterWE" +
                "xpandDate) AS LetterWExpand, Tbl_Order.Order_NO, Tbl_Order.Order_Date, \r\n       " +
                "                  Tbl_OrderKind.Name AS OrderKindName, Tbl_AssaysKind.Name AS As" +
                "saysKindName, Tbl_Assays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Na" +
                "me AS PurchaseMethode, Tbl_TendersAuctions.TenderNo, \r\n                         " +
                "Tbl_TendersAuctions.TenderDate, Tbl_RefundLetter.RefundLetterDate, Tbl_RefundLet" +
                "ter.RecievedDate, Tbl_RecievedMethod.Name AS RecieveMethodNAme\r\nFROM            " +
                "Tbl_RefundLetter LEFT OUTER JOIN\r\n                         Tbl_RecievedMethod ON" +
                " Tbl_RefundLetter.ID = Tbl_RecievedMethod.ID FULL OUTER JOIN\r\n                  " +
                "       Tbl_Management RIGHT OUTER JOIN\r\n                         Tbl_Currency RI" +
                "GHT OUTER JOIN\r\n                         Tbl_OrderKind RIGHT OUTER JOIN\r\n       " +
                "                  Tbl_Order ON Tbl_OrderKind.ID = Tbl_Order.OrderKind_ID RIGHT O" +
                "UTER JOIN\r\n                         Tbl_Assays INNER JOIN\r\n                     " +
                "    Tbl_AssaysKind ON Tbl_Assays.AssaysKindId = Tbl_AssaysKind.ID RIGHT OUTER JO" +
                "IN\r\n                         Tbl_TendersAuctions RIGHT OUTER JOIN\r\n             " +
                "            Tbl_LetterWarranty ON Tbl_TendersAuctions.ID = Tbl_LetterWarranty.Te" +
                "ndersAuctionsID ON Tbl_Assays.ID = Tbl_LetterWarranty.AssayesID ON Tbl_Order.ID " +
                "= Tbl_LetterWarranty.OrderID LEFT OUTER JOIN\r\n                         Tbl_Benef" +
                "iciary ON Tbl_LetterWarranty.BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r" +
                "\n                         Tbl_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplie" +
                "r.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_LetterWarranty.B" +
                "ankID = Tbl_Banks.ID LEFT OUTER JOIN\r\n                         Tbl_Projects ON T" +
                "bl_LetterWarranty.ProjectID = Tbl_Projects.ID ON Tbl_Currency.ID = Tbl_LetterWar" +
                "ranty.CurrencyID ON Tbl_Management.Management_ID = Tbl_LetterWarranty.Management" +
                "ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Lette" +
                "rWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID LEFT OUTER JOIN\r\n      " +
                "                   Tbl_PurchaseMethods ON Tbl_TendersAuctions.PurchaseMethodeID " +
                "= Tbl_PurchaseMethods.ID ON Tbl_RefundLetter.LetterWarrantyID = Tbl_LetterWarran" +
                "ty.ID FULL OUTER JOIN\r\n                         Tbl_LetterWExpandDates ON Tbl_Le" +
                "tterWarranty.ID = Tbl_LetterWExpandDates.LetterWarrantyID\r\nGROUP BY Tbl_LetterWa" +
                "rranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_LetterWarranty.LetterWarrant" +
                "yDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl_LetterWarranty.FileNo, T" +
                "bl_LetterWarranty.Value, \r\n                         Tbl_LetterWarranty.CurrencyI" +
                "D, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterWarrantyExpandDate, Tbl_Le" +
                "tterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty.ManagementID, \r\n         " +
                "                Tbl_LetterWarranty.LetterWarrantyKind, Tbl_LetterWarranty.Tender" +
                "sAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_LetterWarranty.OrderID, Tbl" +
                "_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r\n                        " +
                " Tbl_LetterWarranty.ManagementExportLettrID, Tbl_LetterWarranty.ProjectID, Tbl_L" +
                "etterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty.LetterWarrantyNoFull, Tbl" +
                "_LetterWarranty.FinancialMember, \r\n                         Tbl_LetterWarranty.B" +
                "eneficiaryID, Tbl_LetterWarranty.DecisionsResponspilitiesID, Tbl_LetterWarrantyK" +
                "ind.Name, Tbl_Projects.Name, Tbl_Supplier.Name, Tbl_Banks.Name, Tbl_Management.N" +
                "ame, Tbl_Currency.Name, \r\n                         Tbl_Beneficiary.Name, Tbl_Let" +
                "terWarranty.LetterWDateRecieved, Tbl_Order.Order_NO, Tbl_Order.Order_Date, Tbl_O" +
                "rderKind.Name, Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarran" +
                "ty.ConfValue, \r\n                         Tbl_LetterWarranty.ConfTender, Tbl_Assa" +
                "ysKind.Name, Tbl_Assays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Nam" +
                "e, Tbl_TendersAuctions.TenderNo, Tbl_TendersAuctions.TenderDate, \r\n             " +
                "            Tbl_RefundLetter.RefundLetterDate, Tbl_RefundLetter.RecievedDate, Tb" +
                "l_RecievedMethod.Name\r\nHAVING        (Tbl_LetterWarranty.LetterProcessID = @p1) " +
                "AND (Tbl_LetterWarranty.LetterWarrantyKind = @pLtrKind) AND (Tbl_RefundLetter.Re" +
                "cievedDate >= @PFdate) AND (Tbl_RefundLetter.RecievedDate <= @pTDate) AND \r\n    " +
                "                     (Tbl_LetterWarranty.SupID = @PSuppID)\r\nORDER BY Tbl_LetterW" +
                "arranty.FileNo";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pLtrKind", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PFdate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "RecievedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pTDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "RecievedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSuppID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        Tbl_LetterWarranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_Let" +
                "terWarranty.LetterWarrantyDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl" +
                "_LetterWarranty.FileNo, Tbl_LetterWarranty.Value, \r\n                         Tbl" +
                "_LetterWarranty.CurrencyID, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterW" +
                "arrantyExpandDate, Tbl_LetterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty." +
                "ManagementID, \r\n                         Tbl_LetterWarranty.LetterWarrantyKind, " +
                "Tbl_LetterWarranty.TendersAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_Le" +
                "tterWarranty.OrderID, Tbl_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r" +
                "\n                         Tbl_LetterWarranty.ManagementExportLettrID, Tbl_Letter" +
                "Warranty.ProjectID, Tbl_LetterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty." +
                "LetterWarrantyNoFull, Tbl_LetterWarranty.FinancialMember, \r\n                    " +
                "     Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarranty.ConfVal" +
                "ue, Tbl_LetterWarranty.ConfTender, Tbl_LetterWarranty.BeneficiaryID, Tbl_LetterW" +
                "arranty.DecisionsResponspilitiesID, \r\n                         Tbl_LetterWarrant" +
                "yKind.Name, Tbl_Projects.Name AS ProjectName, Tbl_Supplier.Name AS SupplierName," +
                " Tbl_Banks.Name AS BankName, Tbl_Management.Name AS ManagementName, Tbl_Currency" +
                ".Name AS CurrencyName, \r\n                         Tbl_Beneficiary.Name AS BenfcN" +
                "ame, Tbl_LetterWarranty.LetterWDateRecieved, MAX(Tbl_LetterWExpandDates.LetterWE" +
                "xpandDate) AS LetterWExpand, Tbl_Order.Order_NO, Tbl_Order.Order_Date, \r\n       " +
                "                  Tbl_OrderKind.Name AS OrderKindName, Tbl_AssaysKind.Name AS As" +
                "saysKindName, Tbl_Assays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Na" +
                "me AS PurchaseMethode, Tbl_TendersAuctions.TenderNo, \r\n                         " +
                "Tbl_TendersAuctions.TenderDate, Tbl_RefundLetter.RefundLetterDate, Tbl_RefundLet" +
                "ter.RecievedDate, Tbl_RecievedMethod.Name AS RecieveMethodNAme\r\nFROM            " +
                "Tbl_RefundLetter LEFT OUTER JOIN\r\n                         Tbl_RecievedMethod ON" +
                " Tbl_RefundLetter.ID = Tbl_RecievedMethod.ID FULL OUTER JOIN\r\n                  " +
                "       Tbl_Management RIGHT OUTER JOIN\r\n                         Tbl_Currency RI" +
                "GHT OUTER JOIN\r\n                         Tbl_OrderKind RIGHT OUTER JOIN\r\n       " +
                "                  Tbl_Order ON Tbl_OrderKind.ID = Tbl_Order.OrderKind_ID RIGHT O" +
                "UTER JOIN\r\n                         Tbl_Assays INNER JOIN\r\n                     " +
                "    Tbl_AssaysKind ON Tbl_Assays.AssaysKindId = Tbl_AssaysKind.ID RIGHT OUTER JO" +
                "IN\r\n                         Tbl_TendersAuctions RIGHT OUTER JOIN\r\n             " +
                "            Tbl_LetterWarranty ON Tbl_TendersAuctions.ID = Tbl_LetterWarranty.Te" +
                "ndersAuctionsID ON Tbl_Assays.ID = Tbl_LetterWarranty.AssayesID ON Tbl_Order.ID " +
                "= Tbl_LetterWarranty.OrderID LEFT OUTER JOIN\r\n                         Tbl_Benef" +
                "iciary ON Tbl_LetterWarranty.BeneficiaryID = Tbl_Beneficiary.ID LEFT OUTER JOIN\r" +
                "\n                         Tbl_Supplier ON Tbl_LetterWarranty.SupID = Tbl_Supplie" +
                "r.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_LetterWarranty.B" +
                "ankID = Tbl_Banks.ID LEFT OUTER JOIN\r\n                         Tbl_Projects ON T" +
                "bl_LetterWarranty.ProjectID = Tbl_Projects.ID ON Tbl_Currency.ID = Tbl_LetterWar" +
                "ranty.CurrencyID ON Tbl_Management.Management_ID = Tbl_LetterWarranty.Management" +
                "ID LEFT OUTER JOIN\r\n                         Tbl_LetterWarrantyKind ON Tbl_Lette" +
                "rWarranty.LetterWarrantyKind = Tbl_LetterWarrantyKind.ID LEFT OUTER JOIN\r\n      " +
                "                   Tbl_PurchaseMethods ON Tbl_TendersAuctions.PurchaseMethodeID " +
                "= Tbl_PurchaseMethods.ID ON Tbl_RefundLetter.LetterWarrantyID = Tbl_LetterWarran" +
                "ty.ID FULL OUTER JOIN\r\n                         Tbl_LetterWExpandDates ON Tbl_Le" +
                "tterWarranty.ID = Tbl_LetterWExpandDates.LetterWarrantyID\r\nGROUP BY Tbl_LetterWa" +
                "rranty.ID, Tbl_LetterWarranty.LetterWarrantyNo, Tbl_LetterWarranty.LetterWarrant" +
                "yDate, Tbl_LetterWarranty.LetterWarrantyExpireDate, Tbl_LetterWarranty.FileNo, T" +
                "bl_LetterWarranty.Value, \r\n                         Tbl_LetterWarranty.CurrencyI" +
                "D, Tbl_LetterWarranty.SupID, Tbl_LetterWarranty.LetterWarrantyExpandDate, Tbl_Le" +
                "tterWarranty.LetterWarrantyPurpose, Tbl_LetterWarranty.ManagementID, \r\n         " +
                "                Tbl_LetterWarranty.LetterWarrantyKind, Tbl_LetterWarranty.Tender" +
                "sAuctionsID, Tbl_LetterWarranty.LetterProcessID, Tbl_LetterWarranty.OrderID, Tbl" +
                "_LetterWarranty.AssayesID, Tbl_LetterWarranty.BankID, \r\n                        " +
                " Tbl_LetterWarranty.ManagementExportLettrID, Tbl_LetterWarranty.ProjectID, Tbl_L" +
                "etterWarranty.LetterWarrantyNoScnd, Tbl_LetterWarranty.LetterWarrantyNoFull, Tbl" +
                "_LetterWarranty.FinancialMember, \r\n                         Tbl_LetterWarranty.B" +
                "eneficiaryID, Tbl_LetterWarranty.DecisionsResponspilitiesID, Tbl_LetterWarrantyK" +
                "ind.Name, Tbl_Projects.Name, Tbl_Supplier.Name, Tbl_Banks.Name, Tbl_Management.N" +
                "ame, Tbl_Currency.Name, \r\n                         Tbl_Beneficiary.Name, Tbl_Let" +
                "terWarranty.LetterWDateRecieved, Tbl_Order.Order_NO, Tbl_Order.Order_Date, Tbl_O" +
                "rderKind.Name, Tbl_LetterWarranty.ConfLetterWarrantyExpireDate, Tbl_LetterWarran" +
                "ty.ConfValue, \r\n                         Tbl_LetterWarranty.ConfTender, Tbl_Assa" +
                "ysKind.Name, Tbl_Assays.AssaysNo, Tbl_Assays.AssaysDate, Tbl_PurchaseMethods.Nam" +
                "e, Tbl_TendersAuctions.TenderNo, Tbl_TendersAuctions.TenderDate, \r\n             " +
                "            Tbl_RefundLetter.RefundLetterDate, Tbl_RefundLetter.RecievedDate, Tb" +
                "l_RecievedMethod.Name\r\nHAVING        (Tbl_LetterWarranty.LetterProcessID = @p1) " +
                "AND (Tbl_LetterWarranty.LetterWarrantyKind = @pLtrKind) AND (Tbl_RefundLetter.Re" +
                "cievedDate >= @PFdate) AND (Tbl_RefundLetter.RecievedDate <= @pTDate) AND \r\n    " +
                "                     (Tbl_LetterWarranty.BankID = @PBankID) AND (Tbl_LetterWarra" +
                "nty.SupID = @PSuppId)\r\nORDER BY Tbl_LetterWarranty.FileNo";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterProcessID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pLtrKind", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LetterWarrantyKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PFdate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "RecievedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pTDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "RecievedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBankID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PSuppId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByRefundDatesLetterWrnty(LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<int> pLtrKind, string PFdate, string pTDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PFdate == null)) {
                throw new global::System.ArgumentNullException("PFdate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PFdate));
            }
            if ((pTDate == null)) {
                throw new global::System.ArgumentNullException("pTDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pTDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable GetData(global::System.Nullable<int> p1, global::System.Nullable<int> pLtrKind, string PFdate, string pTDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PFdate == null)) {
                throw new global::System.ArgumentNullException("PFdate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PFdate));
            }
            if ((pTDate == null)) {
                throw new global::System.ArgumentNullException("pTDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pTDate));
            }
            LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable dataTable = new LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByRefundByBank(LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<int> pLtrKind, string PFdate, string pTDate, global::System.Nullable<int> PBank) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PFdate == null)) {
                throw new global::System.ArgumentNullException("PFdate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PFdate));
            }
            if ((pTDate == null)) {
                throw new global::System.ArgumentNullException("pTDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pTDate));
            }
            if ((PBank.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PBank.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable GetDataBy1(global::System.Nullable<int> p1, global::System.Nullable<int> pLtrKind, string PFdate, string pTDate, global::System.Nullable<int> PBank) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PFdate == null)) {
                throw new global::System.ArgumentNullException("PFdate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PFdate));
            }
            if ((pTDate == null)) {
                throw new global::System.ArgumentNullException("pTDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pTDate));
            }
            if ((PBank.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PBank.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable dataTable = new LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByRefundLetterDatesAndSuppID(LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<int> pLtrKind, string PFdate, string pTDate, global::System.Nullable<int> PSuppID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PFdate == null)) {
                throw new global::System.ArgumentNullException("PFdate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PFdate));
            }
            if ((pTDate == null)) {
                throw new global::System.ArgumentNullException("pTDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pTDate));
            }
            if ((PSuppID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PSuppID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable GetDataBy(global::System.Nullable<int> p1, global::System.Nullable<int> pLtrKind, string PFdate, string pTDate, global::System.Nullable<int> PSuppID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PFdate == null)) {
                throw new global::System.ArgumentNullException("PFdate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PFdate));
            }
            if ((pTDate == null)) {
                throw new global::System.ArgumentNullException("pTDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pTDate));
            }
            if ((PSuppID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PSuppID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable dataTable = new LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySuppIdBankID(LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable dataTable, global::System.Nullable<int> p1, global::System.Nullable<int> pLtrKind, string PFdate, string pTDate, global::System.Nullable<int> PBankID, global::System.Nullable<int> PSuppId) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PFdate == null)) {
                throw new global::System.ArgumentNullException("PFdate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PFdate));
            }
            if ((pTDate == null)) {
                throw new global::System.ArgumentNullException("pTDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pTDate));
            }
            if ((PBankID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PBankID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PSuppId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(PSuppId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable GetDataBy2(global::System.Nullable<int> p1, global::System.Nullable<int> pLtrKind, string PFdate, string pTDate, global::System.Nullable<int> PBankID, global::System.Nullable<int> PSuppId) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((p1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((pLtrKind.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(pLtrKind.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PFdate == null)) {
                throw new global::System.ArgumentNullException("PFdate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PFdate));
            }
            if ((pTDate == null)) {
                throw new global::System.ArgumentNullException("pTDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pTDate));
            }
            if ((PBankID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PBankID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PSuppId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(PSuppId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable dataTable = new LetterWarranty.Dtb_RefundLtrWarrantyRepDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private DtbArchOrderAndLetterWTableAdapter _dtbArchOrderAndLetterWTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DtbArchOrderAndLetterWTableAdapter DtbArchOrderAndLetterWTableAdapter {
            get {
                return this._dtbArchOrderAndLetterWTableAdapter;
            }
            set {
                this._dtbArchOrderAndLetterWTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._dtbArchOrderAndLetterWTableAdapter != null) 
                            && (this._dtbArchOrderAndLetterWTableAdapter.Connection != null))) {
                    return this._dtbArchOrderAndLetterWTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._dtbArchOrderAndLetterWTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(LetterWarranty dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dtbArchOrderAndLetterWTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DtbArchOrderAndLetterW.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dtbArchOrderAndLetterWTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(LetterWarranty dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dtbArchOrderAndLetterWTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DtbArchOrderAndLetterW.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dtbArchOrderAndLetterWTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(LetterWarranty dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dtbArchOrderAndLetterWTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DtbArchOrderAndLetterW.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dtbArchOrderAndLetterWTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(LetterWarranty dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._dtbArchOrderAndLetterWTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dtbArchOrderAndLetterWTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._dtbArchOrderAndLetterWTableAdapter != null)) {
                    revertConnections.Add(this._dtbArchOrderAndLetterWTableAdapter, this._dtbArchOrderAndLetterWTableAdapter.Connection);
                    this._dtbArchOrderAndLetterWTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dtbArchOrderAndLetterWTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dtbArchOrderAndLetterWTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dtbArchOrderAndLetterWTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dtbArchOrderAndLetterWTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._dtbArchOrderAndLetterWTableAdapter != null)) {
                    this._dtbArchOrderAndLetterWTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dtbArchOrderAndLetterWTableAdapter]));
                    this._dtbArchOrderAndLetterWTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591