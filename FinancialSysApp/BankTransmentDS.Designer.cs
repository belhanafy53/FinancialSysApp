//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FinancialSysApp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BankTransmentDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BankTransmentDS : global::System.Data.DataSet {
        
        private DataTable1DataTable tableDataTable1;
        
        private Tbl_MovementBankTypeDataTable tableTbl_MovementBankType;
        
        private DataTable2DataTable tableDataTable2;
        
        private DataTable13DataTable tableDataTable13;
        
        private Tbl_BankStringCHeqCashDataTable tableTbl_BankStringCHeqCash;
        
        private Tbl_BankMovementDataTable tableTbl_BankMovement;
        
        private Tbl_CustmersTypeDataTable tableTbl_CustmersType;
        
        private DTBElectronicPayAuditDataTable tableDTBElectronicPayAudit;
        
        private global::System.Data.DataRelation relationFK_Tbl_BankMovement_Tbl_MovementBankType;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BankTransmentDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected BankTransmentDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["Tbl_MovementBankType"] != null)) {
                    base.Tables.Add(new Tbl_MovementBankTypeDataTable(ds.Tables["Tbl_MovementBankType"]));
                }
                if ((ds.Tables["DataTable2"] != null)) {
                    base.Tables.Add(new DataTable2DataTable(ds.Tables["DataTable2"]));
                }
                if ((ds.Tables["DataTable13"] != null)) {
                    base.Tables.Add(new DataTable13DataTable(ds.Tables["DataTable13"]));
                }
                if ((ds.Tables["Tbl_BankStringCHeqCash"] != null)) {
                    base.Tables.Add(new Tbl_BankStringCHeqCashDataTable(ds.Tables["Tbl_BankStringCHeqCash"]));
                }
                if ((ds.Tables["Tbl_BankMovement"] != null)) {
                    base.Tables.Add(new Tbl_BankMovementDataTable(ds.Tables["Tbl_BankMovement"]));
                }
                if ((ds.Tables["Tbl_CustmersType"] != null)) {
                    base.Tables.Add(new Tbl_CustmersTypeDataTable(ds.Tables["Tbl_CustmersType"]));
                }
                if ((ds.Tables["DTBElectronicPayAudit"] != null)) {
                    base.Tables.Add(new DTBElectronicPayAuditDataTable(ds.Tables["DTBElectronicPayAudit"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Tbl_MovementBankTypeDataTable Tbl_MovementBankType {
            get {
                return this.tableTbl_MovementBankType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable2DataTable DataTable2 {
            get {
                return this.tableDataTable2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable13DataTable DataTable13 {
            get {
                return this.tableDataTable13;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Tbl_BankStringCHeqCashDataTable Tbl_BankStringCHeqCash {
            get {
                return this.tableTbl_BankStringCHeqCash;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Tbl_BankMovementDataTable Tbl_BankMovement {
            get {
                return this.tableTbl_BankMovement;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Tbl_CustmersTypeDataTable Tbl_CustmersType {
            get {
                return this.tableTbl_CustmersType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DTBElectronicPayAuditDataTable DTBElectronicPayAudit {
            get {
                return this.tableDTBElectronicPayAudit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            BankTransmentDS cln = ((BankTransmentDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["Tbl_MovementBankType"] != null)) {
                    base.Tables.Add(new Tbl_MovementBankTypeDataTable(ds.Tables["Tbl_MovementBankType"]));
                }
                if ((ds.Tables["DataTable2"] != null)) {
                    base.Tables.Add(new DataTable2DataTable(ds.Tables["DataTable2"]));
                }
                if ((ds.Tables["DataTable13"] != null)) {
                    base.Tables.Add(new DataTable13DataTable(ds.Tables["DataTable13"]));
                }
                if ((ds.Tables["Tbl_BankStringCHeqCash"] != null)) {
                    base.Tables.Add(new Tbl_BankStringCHeqCashDataTable(ds.Tables["Tbl_BankStringCHeqCash"]));
                }
                if ((ds.Tables["Tbl_BankMovement"] != null)) {
                    base.Tables.Add(new Tbl_BankMovementDataTable(ds.Tables["Tbl_BankMovement"]));
                }
                if ((ds.Tables["Tbl_CustmersType"] != null)) {
                    base.Tables.Add(new Tbl_CustmersTypeDataTable(ds.Tables["Tbl_CustmersType"]));
                }
                if ((ds.Tables["DTBElectronicPayAudit"] != null)) {
                    base.Tables.Add(new DTBElectronicPayAuditDataTable(ds.Tables["DTBElectronicPayAudit"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
            this.tableTbl_MovementBankType = ((Tbl_MovementBankTypeDataTable)(base.Tables["Tbl_MovementBankType"]));
            if ((initTable == true)) {
                if ((this.tableTbl_MovementBankType != null)) {
                    this.tableTbl_MovementBankType.InitVars();
                }
            }
            this.tableDataTable2 = ((DataTable2DataTable)(base.Tables["DataTable2"]));
            if ((initTable == true)) {
                if ((this.tableDataTable2 != null)) {
                    this.tableDataTable2.InitVars();
                }
            }
            this.tableDataTable13 = ((DataTable13DataTable)(base.Tables["DataTable13"]));
            if ((initTable == true)) {
                if ((this.tableDataTable13 != null)) {
                    this.tableDataTable13.InitVars();
                }
            }
            this.tableTbl_BankStringCHeqCash = ((Tbl_BankStringCHeqCashDataTable)(base.Tables["Tbl_BankStringCHeqCash"]));
            if ((initTable == true)) {
                if ((this.tableTbl_BankStringCHeqCash != null)) {
                    this.tableTbl_BankStringCHeqCash.InitVars();
                }
            }
            this.tableTbl_BankMovement = ((Tbl_BankMovementDataTable)(base.Tables["Tbl_BankMovement"]));
            if ((initTable == true)) {
                if ((this.tableTbl_BankMovement != null)) {
                    this.tableTbl_BankMovement.InitVars();
                }
            }
            this.tableTbl_CustmersType = ((Tbl_CustmersTypeDataTable)(base.Tables["Tbl_CustmersType"]));
            if ((initTable == true)) {
                if ((this.tableTbl_CustmersType != null)) {
                    this.tableTbl_CustmersType.InitVars();
                }
            }
            this.tableDTBElectronicPayAudit = ((DTBElectronicPayAuditDataTable)(base.Tables["DTBElectronicPayAudit"]));
            if ((initTable == true)) {
                if ((this.tableDTBElectronicPayAudit != null)) {
                    this.tableDTBElectronicPayAudit.InitVars();
                }
            }
            this.relationFK_Tbl_BankMovement_Tbl_MovementBankType = this.Relations["FK_Tbl_BankMovement_Tbl_MovementBankType"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "BankTransmentDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BankTransmentDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
            this.tableTbl_MovementBankType = new Tbl_MovementBankTypeDataTable();
            base.Tables.Add(this.tableTbl_MovementBankType);
            this.tableDataTable2 = new DataTable2DataTable();
            base.Tables.Add(this.tableDataTable2);
            this.tableDataTable13 = new DataTable13DataTable();
            base.Tables.Add(this.tableDataTable13);
            this.tableTbl_BankStringCHeqCash = new Tbl_BankStringCHeqCashDataTable();
            base.Tables.Add(this.tableTbl_BankStringCHeqCash);
            this.tableTbl_BankMovement = new Tbl_BankMovementDataTable();
            base.Tables.Add(this.tableTbl_BankMovement);
            this.tableTbl_CustmersType = new Tbl_CustmersTypeDataTable();
            base.Tables.Add(this.tableTbl_CustmersType);
            this.tableDTBElectronicPayAudit = new DTBElectronicPayAuditDataTable();
            base.Tables.Add(this.tableDTBElectronicPayAudit);
            this.relationFK_Tbl_BankMovement_Tbl_MovementBankType = new global::System.Data.DataRelation("FK_Tbl_BankMovement_Tbl_MovementBankType", new global::System.Data.DataColumn[] {
                        this.tableTbl_MovementBankType.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDataTable13.MoveType1Column}, false);
            this.Relations.Add(this.relationFK_Tbl_BankMovement_Tbl_MovementBankType);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTbl_MovementBankType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDataTable2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDataTable13() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTbl_BankStringCHeqCash() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTbl_BankMovement() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTbl_CustmersType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDTBElectronicPayAudit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BankTransmentDS ds = new BankTransmentDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Tbl_MovementBankTypeRowChangeEventHandler(object sender, Tbl_MovementBankTypeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataTable2RowChangeEventHandler(object sender, DataTable2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataTable13RowChangeEventHandler(object sender, DataTable13RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Tbl_BankStringCHeqCashRowChangeEventHandler(object sender, Tbl_BankStringCHeqCashRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Tbl_BankMovementRowChangeEventHandler(object sender, Tbl_BankMovementRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Tbl_CustmersTypeRowChangeEventHandler(object sender, Tbl_CustmersTypeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DTBElectronicPayAuditRowChangeEventHandler(object sender, DTBElectronicPayAuditRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.TypedTableBase<DataTable1Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnBankAccID;
            
            private global::System.Data.DataColumn columnMovementCode;
            
            private global::System.Data.DataColumn columnFisicalYeariD;
            
            private global::System.Data.DataColumn columnتاريخ_الحركه;
            
            private global::System.Data.DataColumn columnتاريخ_الحق;
            
            private global::System.Data.DataColumn columnكود_البنك;
            
            private global::System.Data.DataColumn columnوصف_الحركه;
            
            private global::System.Data.DataColumn columnقيمة_التحويل;
            
            private global::System.Data.DataColumn columnنوع_العمليه;
            
            private global::System.Data.DataColumn columnالرصيد;
            
            private global::System.Data.DataColumn columnالبنك;
            
            private global::System.Data.DataColumn columnرقم_الحساب;
            
            private global::System.Data.DataColumn columnنوع_الحساب;
            
            private global::System.Data.DataColumn columnالغرض_من_الحساب;
            
            private global::System.Data.DataColumn columnالتصنيف_الرئيسي;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnMoveType1;
            
            private global::System.Data.DataColumn columnMoveType2;
            
            private global::System.Data.DataColumn columnIsSelectedType;
            
            private global::System.Data.DataColumn columnBankCheqID;
            
            private global::System.Data.DataColumn columnDepositCashID;
            
            private global::System.Data.DataColumn columnC1;
            
            private global::System.Data.DataColumn columnIsCollected;
            
            private global::System.Data.DataColumn columnBranchId;
            
            private global::System.Data.DataColumn columnTradeCode;
            
            private global::System.Data.DataColumn columnTradeMoveType;
            
            private global::System.Data.DataColumn columnDailyDate;
            
            private global::System.Data.DataColumn columnتصنيف_العملاء;
            
            private global::System.Data.DataColumn columnالفرع;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAccIDColumn {
                get {
                    return this.columnBankAccID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MovementCodeColumn {
                get {
                    return this.columnMovementCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FisicalYeariDColumn {
                get {
                    return this.columnFisicalYeariD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تاريخ_الحركهColumn {
                get {
                    return this.columnتاريخ_الحركه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تاريخ_الحقColumn {
                get {
                    return this.columnتاريخ_الحق;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn كود_البنكColumn {
                get {
                    return this.columnكود_البنك;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn وصف_الحركهColumn {
                get {
                    return this.columnوصف_الحركه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn قيمة_التحويلColumn {
                get {
                    return this.columnقيمة_التحويل;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn نوع_العمليهColumn {
                get {
                    return this.columnنوع_العمليه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn الرصيدColumn {
                get {
                    return this.columnالرصيد;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn البنكColumn {
                get {
                    return this.columnالبنك;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn رقم_الحسابColumn {
                get {
                    return this.columnرقم_الحساب;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn نوع_الحسابColumn {
                get {
                    return this.columnنوع_الحساب;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn الغرض_من_الحسابColumn {
                get {
                    return this.columnالغرض_من_الحساب;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn التصنيف_الرئيسيColumn {
                get {
                    return this.columnالتصنيف_الرئيسي;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoveType1Column {
                get {
                    return this.columnMoveType1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoveType2Column {
                get {
                    return this.columnMoveType2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsSelectedTypeColumn {
                get {
                    return this.columnIsSelectedType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankCheqIDColumn {
                get {
                    return this.columnBankCheqID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepositCashIDColumn {
                get {
                    return this.columnDepositCashID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C1Column {
                get {
                    return this.columnC1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCollectedColumn {
                get {
                    return this.columnIsCollected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BranchIdColumn {
                get {
                    return this.columnBranchId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeCodeColumn {
                get {
                    return this.columnTradeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeMoveTypeColumn {
                get {
                    return this.columnTradeMoveType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DailyDateColumn {
                get {
                    return this.columnDailyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تصنيف_العملاءColumn {
                get {
                    return this.columnتصنيف_العملاء;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn الفرعColumn {
                get {
                    return this.columnالفرع;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row AddDataTable1Row(
                        int BankID, 
                        int BankAccID, 
                        string MovementCode, 
                        int FisicalYeariD, 
                        System.DateTime تاريخ_الحركه, 
                        System.DateTime تاريخ_الحق, 
                        string كود_البنك, 
                        string وصف_الحركه, 
                        decimal قيمة_التحويل, 
                        string نوع_العمليه, 
                        decimal الرصيد, 
                        string البنك, 
                        string رقم_الحساب, 
                        string نوع_الحساب, 
                        string الغرض_من_الحساب, 
                        string التصنيف_الرئيسي, 
                        string Name, 
                        int MoveType1, 
                        int MoveType2, 
                        bool IsSelectedType, 
                        long BankCheqID, 
                        long DepositCashID, 
                        string C1, 
                        bool IsCollected, 
                        int BranchId, 
                        long TradeCode, 
                        int TradeMoveType, 
                        System.DateTime DailyDate, 
                        string تصنيف_العملاء, 
                        string الفرع) {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BankID,
                        BankAccID,
                        MovementCode,
                        FisicalYeariD,
                        تاريخ_الحركه,
                        تاريخ_الحق,
                        كود_البنك,
                        وصف_الحركه,
                        قيمة_التحويل,
                        نوع_العمليه,
                        الرصيد,
                        البنك,
                        رقم_الحساب,
                        نوع_الحساب,
                        الغرض_من_الحساب,
                        التصنيف_الرئيسي,
                        Name,
                        MoveType1,
                        MoveType2,
                        IsSelectedType,
                        BankCheqID,
                        DepositCashID,
                        C1,
                        IsCollected,
                        BranchId,
                        TradeCode,
                        TradeMoveType,
                        DailyDate,
                        تصنيف_العملاء,
                        الفرع};
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row FindByID(long ID) {
                return ((DataTable1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBankID = base.Columns["BankID"];
                this.columnBankAccID = base.Columns["BankAccID"];
                this.columnMovementCode = base.Columns["MovementCode"];
                this.columnFisicalYeariD = base.Columns["FisicalYeariD"];
                this.columnتاريخ_الحركه = base.Columns["تاريخ الحركه"];
                this.columnتاريخ_الحق = base.Columns["تاريخ الحق"];
                this.columnكود_البنك = base.Columns["كود البنك"];
                this.columnوصف_الحركه = base.Columns["وصف الحركه"];
                this.columnقيمة_التحويل = base.Columns["قيمة التحويل"];
                this.columnنوع_العمليه = base.Columns["نوع العمليه"];
                this.columnالرصيد = base.Columns["الرصيد"];
                this.columnالبنك = base.Columns["البنك"];
                this.columnرقم_الحساب = base.Columns["رقم الحساب"];
                this.columnنوع_الحساب = base.Columns["نوع الحساب"];
                this.columnالغرض_من_الحساب = base.Columns["الغرض من الحساب"];
                this.columnالتصنيف_الرئيسي = base.Columns["التصنيف الرئيسي"];
                this.columnName = base.Columns["Name"];
                this.columnMoveType1 = base.Columns["MoveType1"];
                this.columnMoveType2 = base.Columns["MoveType2"];
                this.columnIsSelectedType = base.Columns["IsSelectedType"];
                this.columnBankCheqID = base.Columns["BankCheqID"];
                this.columnDepositCashID = base.Columns["DepositCashID"];
                this.columnC1 = base.Columns["C1"];
                this.columnIsCollected = base.Columns["IsCollected"];
                this.columnBranchId = base.Columns["BranchId"];
                this.columnTradeCode = base.Columns["TradeCode"];
                this.columnTradeMoveType = base.Columns["TradeMoveType"];
                this.columnDailyDate = base.Columns["DailyDate"];
                this.columnتصنيف_العملاء = base.Columns["تصنيف_العملاء"];
                this.columnالفرع = base.Columns["الفرع"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnBankAccID = new global::System.Data.DataColumn("BankAccID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccID);
                this.columnMovementCode = new global::System.Data.DataColumn("MovementCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovementCode);
                this.columnFisicalYeariD = new global::System.Data.DataColumn("FisicalYeariD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFisicalYeariD);
                this.columnتاريخ_الحركه = new global::System.Data.DataColumn("تاريخ الحركه", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnتاريخ_الحركه);
                this.columnتاريخ_الحق = new global::System.Data.DataColumn("تاريخ الحق", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnتاريخ_الحق);
                this.columnكود_البنك = new global::System.Data.DataColumn("كود البنك", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnكود_البنك);
                this.columnوصف_الحركه = new global::System.Data.DataColumn("وصف الحركه", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnوصف_الحركه);
                this.columnقيمة_التحويل = new global::System.Data.DataColumn("قيمة التحويل", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnقيمة_التحويل);
                this.columnنوع_العمليه = new global::System.Data.DataColumn("نوع العمليه", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnنوع_العمليه);
                this.columnالرصيد = new global::System.Data.DataColumn("الرصيد", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالرصيد);
                this.columnالبنك = new global::System.Data.DataColumn("البنك", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالبنك);
                this.columnرقم_الحساب = new global::System.Data.DataColumn("رقم الحساب", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnرقم_الحساب);
                this.columnنوع_الحساب = new global::System.Data.DataColumn("نوع الحساب", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnنوع_الحساب);
                this.columnالغرض_من_الحساب = new global::System.Data.DataColumn("الغرض من الحساب", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالغرض_من_الحساب);
                this.columnالتصنيف_الرئيسي = new global::System.Data.DataColumn("التصنيف الرئيسي", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالتصنيف_الرئيسي);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnMoveType1 = new global::System.Data.DataColumn("MoveType1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveType1);
                this.columnMoveType2 = new global::System.Data.DataColumn("MoveType2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveType2);
                this.columnIsSelectedType = new global::System.Data.DataColumn("IsSelectedType", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSelectedType);
                this.columnBankCheqID = new global::System.Data.DataColumn("BankCheqID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCheqID);
                this.columnDepositCashID = new global::System.Data.DataColumn("DepositCashID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositCashID);
                this.columnC1 = new global::System.Data.DataColumn("C1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1);
                this.columnIsCollected = new global::System.Data.DataColumn("IsCollected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCollected);
                this.columnBranchId = new global::System.Data.DataColumn("BranchId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchId);
                this.columnTradeCode = new global::System.Data.DataColumn("TradeCode", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeCode);
                this.columnTradeMoveType = new global::System.Data.DataColumn("TradeMoveType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeMoveType);
                this.columnDailyDate = new global::System.Data.DataColumn("DailyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDailyDate);
                this.columnتصنيف_العملاء = new global::System.Data.DataColumn("تصنيف_العملاء", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnتصنيف_العملاء);
                this.columnالفرع = new global::System.Data.DataColumn("الفرع", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالفرع);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnMovementCode.MaxLength = 50;
                this.columnكود_البنك.MaxLength = 50;
                this.columnوصف_الحركه.MaxLength = 500;
                this.columnنوع_العمليه.MaxLength = 10;
                this.columnالبنك.MaxLength = 50;
                this.columnرقم_الحساب.MaxLength = 250;
                this.columnنوع_الحساب.MaxLength = 50;
                this.columnالغرض_من_الحساب.MaxLength = 50;
                this.columnالتصنيف_الرئيسي.MaxLength = 150;
                this.columnName.MaxLength = 150;
                this.columnC1.MaxLength = 100;
                this.columnتصنيف_العملاء.MaxLength = 100;
                this.columnالفرع.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BankTransmentDS ds = new BankTransmentDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Tbl_MovementBankTypeDataTable : global::System.Data.TypedTableBase<Tbl_MovementBankTypeRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnMoveType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_MovementBankTypeDataTable() {
                this.TableName = "Tbl_MovementBankType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Tbl_MovementBankTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Tbl_MovementBankTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoveTypeColumn {
                get {
                    return this.columnMoveType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_MovementBankTypeRow this[int index] {
                get {
                    return ((Tbl_MovementBankTypeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_MovementBankTypeRowChangeEventHandler Tbl_MovementBankTypeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_MovementBankTypeRowChangeEventHandler Tbl_MovementBankTypeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_MovementBankTypeRowChangeEventHandler Tbl_MovementBankTypeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_MovementBankTypeRowChangeEventHandler Tbl_MovementBankTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTbl_MovementBankTypeRow(Tbl_MovementBankTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_MovementBankTypeRow AddTbl_MovementBankTypeRow(string Name, int MoveType) {
                Tbl_MovementBankTypeRow rowTbl_MovementBankTypeRow = ((Tbl_MovementBankTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        MoveType};
                rowTbl_MovementBankTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTbl_MovementBankTypeRow);
                return rowTbl_MovementBankTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_MovementBankTypeRow FindByID(int ID) {
                return ((Tbl_MovementBankTypeRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Tbl_MovementBankTypeDataTable cln = ((Tbl_MovementBankTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Tbl_MovementBankTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnName = base.Columns["Name"];
                this.columnMoveType = base.Columns["MoveType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnMoveType = new global::System.Data.DataColumn("MoveType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnName.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_MovementBankTypeRow NewTbl_MovementBankTypeRow() {
                return ((Tbl_MovementBankTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Tbl_MovementBankTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Tbl_MovementBankTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Tbl_MovementBankTypeRowChanged != null)) {
                    this.Tbl_MovementBankTypeRowChanged(this, new Tbl_MovementBankTypeRowChangeEvent(((Tbl_MovementBankTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Tbl_MovementBankTypeRowChanging != null)) {
                    this.Tbl_MovementBankTypeRowChanging(this, new Tbl_MovementBankTypeRowChangeEvent(((Tbl_MovementBankTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Tbl_MovementBankTypeRowDeleted != null)) {
                    this.Tbl_MovementBankTypeRowDeleted(this, new Tbl_MovementBankTypeRowChangeEvent(((Tbl_MovementBankTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Tbl_MovementBankTypeRowDeleting != null)) {
                    this.Tbl_MovementBankTypeRowDeleting(this, new Tbl_MovementBankTypeRowChangeEvent(((Tbl_MovementBankTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTbl_MovementBankTypeRow(Tbl_MovementBankTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BankTransmentDS ds = new BankTransmentDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Tbl_MovementBankTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable2DataTable : global::System.Data.TypedTableBase<DataTable2Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMoveDat;
            
            private global::System.Data.DataColumn columnBankDueDate;
            
            private global::System.Data.DataColumn columnNumberRefrBank;
            
            private global::System.Data.DataColumn columnDescriptionNote;
            
            private global::System.Data.DataColumn columnTransferValue;
            
            private global::System.Data.DataColumn columnDebitCredit;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnBankAccID;
            
            private global::System.Data.DataColumn columnMovementCode;
            
            private global::System.Data.DataColumn columnFisicalYeariD;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAccountBankNo;
            
            private global::System.Data.DataColumn columnMoveType1;
            
            private global::System.Data.DataColumn columnMoveType2;
            
            private global::System.Data.DataColumn columnIsSelectedType;
            
            private global::System.Data.DataColumn columnBankCheqID;
            
            private global::System.Data.DataColumn columnDepositCashID;
            
            private global::System.Data.DataColumn columnExpr1;
            
            private global::System.Data.DataColumn columnExpr2;
            
            private global::System.Data.DataColumn columnExpr3;
            
            private global::System.Data.DataColumn columnExpr4;
            
            private global::System.Data.DataColumn columnBranchId;
            
            private global::System.Data.DataColumn columnTradeMoveType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2DataTable() {
                this.TableName = "DataTable2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataTable2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoveDatColumn {
                get {
                    return this.columnMoveDat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankDueDateColumn {
                get {
                    return this.columnBankDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberRefrBankColumn {
                get {
                    return this.columnNumberRefrBank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionNoteColumn {
                get {
                    return this.columnDescriptionNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransferValueColumn {
                get {
                    return this.columnTransferValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DebitCreditColumn {
                get {
                    return this.columnDebitCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAccIDColumn {
                get {
                    return this.columnBankAccID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MovementCodeColumn {
                get {
                    return this.columnMovementCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FisicalYeariDColumn {
                get {
                    return this.columnFisicalYeariD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountBankNoColumn {
                get {
                    return this.columnAccountBankNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoveType1Column {
                get {
                    return this.columnMoveType1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoveType2Column {
                get {
                    return this.columnMoveType2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsSelectedTypeColumn {
                get {
                    return this.columnIsSelectedType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankCheqIDColumn {
                get {
                    return this.columnBankCheqID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepositCashIDColumn {
                get {
                    return this.columnDepositCashID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr1Column {
                get {
                    return this.columnExpr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr2Column {
                get {
                    return this.columnExpr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr3Column {
                get {
                    return this.columnExpr3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr4Column {
                get {
                    return this.columnExpr4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BranchIdColumn {
                get {
                    return this.columnBranchId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeMoveTypeColumn {
                get {
                    return this.columnTradeMoveType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2Row this[int index] {
                get {
                    return ((DataTable2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable2RowChangeEventHandler DataTable2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable2RowChangeEventHandler DataTable2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable2RowChangeEventHandler DataTable2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable2RowChangeEventHandler DataTable2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataTable2Row(DataTable2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2Row AddDataTable2Row(
                        System.DateTime MoveDat, 
                        System.DateTime BankDueDate, 
                        string NumberRefrBank, 
                        string DescriptionNote, 
                        decimal TransferValue, 
                        string DebitCredit, 
                        decimal Balance, 
                        int BankID, 
                        int BankAccID, 
                        string MovementCode, 
                        int FisicalYeariD, 
                        string Name, 
                        string AccountBankNo, 
                        int MoveType1, 
                        int MoveType2, 
                        bool IsSelectedType, 
                        long BankCheqID, 
                        long DepositCashID, 
                        string Expr1, 
                        string Expr2, 
                        string Expr3, 
                        string Expr4, 
                        int BranchId, 
                        int TradeMoveType) {
                DataTable2Row rowDataTable2Row = ((DataTable2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MoveDat,
                        BankDueDate,
                        NumberRefrBank,
                        DescriptionNote,
                        TransferValue,
                        DebitCredit,
                        Balance,
                        BankID,
                        BankAccID,
                        MovementCode,
                        FisicalYeariD,
                        Name,
                        AccountBankNo,
                        MoveType1,
                        MoveType2,
                        IsSelectedType,
                        BankCheqID,
                        DepositCashID,
                        Expr1,
                        Expr2,
                        Expr3,
                        Expr4,
                        BranchId,
                        TradeMoveType};
                rowDataTable2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable2Row);
                return rowDataTable2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2Row FindByID(long ID) {
                return ((DataTable2Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataTable2DataTable cln = ((DataTable2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMoveDat = base.Columns["MoveDat"];
                this.columnBankDueDate = base.Columns["BankDueDate"];
                this.columnNumberRefrBank = base.Columns["NumberRefrBank"];
                this.columnDescriptionNote = base.Columns["DescriptionNote"];
                this.columnTransferValue = base.Columns["TransferValue"];
                this.columnDebitCredit = base.Columns["DebitCredit"];
                this.columnBalance = base.Columns["Balance"];
                this.columnBankID = base.Columns["BankID"];
                this.columnBankAccID = base.Columns["BankAccID"];
                this.columnMovementCode = base.Columns["MovementCode"];
                this.columnFisicalYeariD = base.Columns["FisicalYeariD"];
                this.columnName = base.Columns["Name"];
                this.columnAccountBankNo = base.Columns["AccountBankNo"];
                this.columnMoveType1 = base.Columns["MoveType1"];
                this.columnMoveType2 = base.Columns["MoveType2"];
                this.columnIsSelectedType = base.Columns["IsSelectedType"];
                this.columnBankCheqID = base.Columns["BankCheqID"];
                this.columnDepositCashID = base.Columns["DepositCashID"];
                this.columnExpr1 = base.Columns["Expr1"];
                this.columnExpr2 = base.Columns["Expr2"];
                this.columnExpr3 = base.Columns["Expr3"];
                this.columnExpr4 = base.Columns["Expr4"];
                this.columnBranchId = base.Columns["BranchId"];
                this.columnTradeMoveType = base.Columns["TradeMoveType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMoveDat = new global::System.Data.DataColumn("MoveDat", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveDat);
                this.columnBankDueDate = new global::System.Data.DataColumn("BankDueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankDueDate);
                this.columnNumberRefrBank = new global::System.Data.DataColumn("NumberRefrBank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberRefrBank);
                this.columnDescriptionNote = new global::System.Data.DataColumn("DescriptionNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescriptionNote);
                this.columnTransferValue = new global::System.Data.DataColumn("TransferValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferValue);
                this.columnDebitCredit = new global::System.Data.DataColumn("DebitCredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitCredit);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnBankAccID = new global::System.Data.DataColumn("BankAccID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccID);
                this.columnMovementCode = new global::System.Data.DataColumn("MovementCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovementCode);
                this.columnFisicalYeariD = new global::System.Data.DataColumn("FisicalYeariD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFisicalYeariD);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAccountBankNo = new global::System.Data.DataColumn("AccountBankNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountBankNo);
                this.columnMoveType1 = new global::System.Data.DataColumn("MoveType1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveType1);
                this.columnMoveType2 = new global::System.Data.DataColumn("MoveType2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveType2);
                this.columnIsSelectedType = new global::System.Data.DataColumn("IsSelectedType", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSelectedType);
                this.columnBankCheqID = new global::System.Data.DataColumn("BankCheqID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCheqID);
                this.columnDepositCashID = new global::System.Data.DataColumn("DepositCashID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositCashID);
                this.columnExpr1 = new global::System.Data.DataColumn("Expr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr1);
                this.columnExpr2 = new global::System.Data.DataColumn("Expr2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr2);
                this.columnExpr3 = new global::System.Data.DataColumn("Expr3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr3);
                this.columnExpr4 = new global::System.Data.DataColumn("Expr4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr4);
                this.columnBranchId = new global::System.Data.DataColumn("BranchId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchId);
                this.columnTradeMoveType = new global::System.Data.DataColumn("TradeMoveType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeMoveType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnNumberRefrBank.MaxLength = 50;
                this.columnDescriptionNote.MaxLength = 500;
                this.columnDebitCredit.MaxLength = 10;
                this.columnMovementCode.MaxLength = 50;
                this.columnName.MaxLength = 50;
                this.columnAccountBankNo.MaxLength = 250;
                this.columnExpr1.MaxLength = 50;
                this.columnExpr2.MaxLength = 50;
                this.columnExpr3.MaxLength = 150;
                this.columnExpr4.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2Row NewDataTable2Row() {
                return ((DataTable2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable2RowChanged != null)) {
                    this.DataTable2RowChanged(this, new DataTable2RowChangeEvent(((DataTable2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable2RowChanging != null)) {
                    this.DataTable2RowChanging(this, new DataTable2RowChangeEvent(((DataTable2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable2RowDeleted != null)) {
                    this.DataTable2RowDeleted(this, new DataTable2RowChangeEvent(((DataTable2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable2RowDeleting != null)) {
                    this.DataTable2RowDeleting(this, new DataTable2RowChangeEvent(((DataTable2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataTable2Row(DataTable2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BankTransmentDS ds = new BankTransmentDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable13DataTable : global::System.Data.TypedTableBase<DataTable13Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnBankAccID;
            
            private global::System.Data.DataColumn columnMovementCode;
            
            private global::System.Data.DataColumn columnFisicalYeariD;
            
            private global::System.Data.DataColumn columnتاريخ_الحركه;
            
            private global::System.Data.DataColumn columnتاريخ_الحق;
            
            private global::System.Data.DataColumn columnكود_البنك;
            
            private global::System.Data.DataColumn columnوصف_الحركه;
            
            private global::System.Data.DataColumn columnقيمة_التحويل;
            
            private global::System.Data.DataColumn columnنوع_العمليه;
            
            private global::System.Data.DataColumn columnالرصيد;
            
            private global::System.Data.DataColumn columnالبنك;
            
            private global::System.Data.DataColumn columnرقم_الحساب;
            
            private global::System.Data.DataColumn columnنوع_الحساب;
            
            private global::System.Data.DataColumn columnالغرض_من_الحساب;
            
            private global::System.Data.DataColumn columnالتصنيف_الرئيسي;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnMoveType1;
            
            private global::System.Data.DataColumn columnMoveType2;
            
            private global::System.Data.DataColumn columnIsSelectedType;
            
            private global::System.Data.DataColumn columnBankCheqID;
            
            private global::System.Data.DataColumn columnDepositCashID;
            
            private global::System.Data.DataColumn columnC1;
            
            private global::System.Data.DataColumn columnC6;
            
            private global::System.Data.DataColumn columnتاريخ_الخركه;
            
            private global::System.Data.DataColumn columnالبنك_المسحوب_عليه;
            
            private global::System.Data.DataColumn columnتاريخ_الاضافه;
            
            private global::System.Data.DataColumn columnتمت_الاضافه;
            
            private global::System.Data.DataColumn columnAddDateBank;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable13DataTable() {
                this.TableName = "DataTable13";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable13DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataTable13DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAccIDColumn {
                get {
                    return this.columnBankAccID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MovementCodeColumn {
                get {
                    return this.columnMovementCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FisicalYeariDColumn {
                get {
                    return this.columnFisicalYeariD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تاريخ_الحركهColumn {
                get {
                    return this.columnتاريخ_الحركه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تاريخ_الحقColumn {
                get {
                    return this.columnتاريخ_الحق;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn كود_البنكColumn {
                get {
                    return this.columnكود_البنك;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn وصف_الحركهColumn {
                get {
                    return this.columnوصف_الحركه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn قيمة_التحويلColumn {
                get {
                    return this.columnقيمة_التحويل;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn نوع_العمليهColumn {
                get {
                    return this.columnنوع_العمليه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn الرصيدColumn {
                get {
                    return this.columnالرصيد;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn البنكColumn {
                get {
                    return this.columnالبنك;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn رقم_الحسابColumn {
                get {
                    return this.columnرقم_الحساب;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn نوع_الحسابColumn {
                get {
                    return this.columnنوع_الحساب;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn الغرض_من_الحسابColumn {
                get {
                    return this.columnالغرض_من_الحساب;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn التصنيف_الرئيسيColumn {
                get {
                    return this.columnالتصنيف_الرئيسي;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoveType1Column {
                get {
                    return this.columnMoveType1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoveType2Column {
                get {
                    return this.columnMoveType2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsSelectedTypeColumn {
                get {
                    return this.columnIsSelectedType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankCheqIDColumn {
                get {
                    return this.columnBankCheqID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepositCashIDColumn {
                get {
                    return this.columnDepositCashID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C1Column {
                get {
                    return this.columnC1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C6Column {
                get {
                    return this.columnC6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تاريخ_الخركهColumn {
                get {
                    return this.columnتاريخ_الخركه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn البنك_المسحوب_عليهColumn {
                get {
                    return this.columnالبنك_المسحوب_عليه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تاريخ_الاضافهColumn {
                get {
                    return this.columnتاريخ_الاضافه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تمت_الاضافهColumn {
                get {
                    return this.columnتمت_الاضافه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddDateBankColumn {
                get {
                    return this.columnAddDateBank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable13Row this[int index] {
                get {
                    return ((DataTable13Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable13RowChangeEventHandler DataTable13RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable13RowChangeEventHandler DataTable13RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable13RowChangeEventHandler DataTable13RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable13RowChangeEventHandler DataTable13RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataTable13Row(DataTable13Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable13Row AddDataTable13Row(
                        int BankID, 
                        int BankAccID, 
                        string MovementCode, 
                        int FisicalYeariD, 
                        System.DateTime تاريخ_الحركه, 
                        System.DateTime تاريخ_الحق, 
                        string كود_البنك, 
                        string وصف_الحركه, 
                        decimal قيمة_التحويل, 
                        string نوع_العمليه, 
                        decimal الرصيد, 
                        string البنك, 
                        string رقم_الحساب, 
                        string نوع_الحساب, 
                        string الغرض_من_الحساب, 
                        string التصنيف_الرئيسي, 
                        string Name, 
                        Tbl_MovementBankTypeRow parentTbl_MovementBankTypeRowByFK_Tbl_BankMovement_Tbl_MovementBankType, 
                        int MoveType2, 
                        bool IsSelectedType, 
                        long BankCheqID, 
                        long DepositCashID, 
                        string C1, 
                        string C6, 
                        System.DateTime تاريخ_الخركه, 
                        string البنك_المسحوب_عليه, 
                        System.DateTime تاريخ_الاضافه, 
                        bool تمت_الاضافه, 
                        System.DateTime AddDateBank) {
                DataTable13Row rowDataTable13Row = ((DataTable13Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BankID,
                        BankAccID,
                        MovementCode,
                        FisicalYeariD,
                        تاريخ_الحركه,
                        تاريخ_الحق,
                        كود_البنك,
                        وصف_الحركه,
                        قيمة_التحويل,
                        نوع_العمليه,
                        الرصيد,
                        البنك,
                        رقم_الحساب,
                        نوع_الحساب,
                        الغرض_من_الحساب,
                        التصنيف_الرئيسي,
                        Name,
                        null,
                        MoveType2,
                        IsSelectedType,
                        BankCheqID,
                        DepositCashID,
                        C1,
                        C6,
                        تاريخ_الخركه,
                        البنك_المسحوب_عليه,
                        تاريخ_الاضافه,
                        تمت_الاضافه,
                        AddDateBank};
                if ((parentTbl_MovementBankTypeRowByFK_Tbl_BankMovement_Tbl_MovementBankType != null)) {
                    columnValuesArray[18] = parentTbl_MovementBankTypeRowByFK_Tbl_BankMovement_Tbl_MovementBankType[0];
                }
                rowDataTable13Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable13Row);
                return rowDataTable13Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable13Row FindByID(long ID) {
                return ((DataTable13Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataTable13DataTable cln = ((DataTable13DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable13DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBankID = base.Columns["BankID"];
                this.columnBankAccID = base.Columns["BankAccID"];
                this.columnMovementCode = base.Columns["MovementCode"];
                this.columnFisicalYeariD = base.Columns["FisicalYeariD"];
                this.columnتاريخ_الحركه = base.Columns["تاريخ الحركه"];
                this.columnتاريخ_الحق = base.Columns["تاريخ الحق"];
                this.columnكود_البنك = base.Columns["كود البنك"];
                this.columnوصف_الحركه = base.Columns["وصف الحركه"];
                this.columnقيمة_التحويل = base.Columns["قيمة التحويل"];
                this.columnنوع_العمليه = base.Columns["نوع العمليه"];
                this.columnالرصيد = base.Columns["الرصيد"];
                this.columnالبنك = base.Columns["البنك"];
                this.columnرقم_الحساب = base.Columns["رقم الحساب"];
                this.columnنوع_الحساب = base.Columns["نوع الحساب"];
                this.columnالغرض_من_الحساب = base.Columns["الغرض من الحساب"];
                this.columnالتصنيف_الرئيسي = base.Columns["التصنيف الرئيسي"];
                this.columnName = base.Columns["Name"];
                this.columnMoveType1 = base.Columns["MoveType1"];
                this.columnMoveType2 = base.Columns["MoveType2"];
                this.columnIsSelectedType = base.Columns["IsSelectedType"];
                this.columnBankCheqID = base.Columns["BankCheqID"];
                this.columnDepositCashID = base.Columns["DepositCashID"];
                this.columnC1 = base.Columns["C1"];
                this.columnC6 = base.Columns["C6"];
                this.columnتاريخ_الخركه = base.Columns["تاريخ الخركه"];
                this.columnالبنك_المسحوب_عليه = base.Columns["البنك المسحوب عليه"];
                this.columnتاريخ_الاضافه = base.Columns["تاريخ الاضافه"];
                this.columnتمت_الاضافه = base.Columns["تمت الاضافه"];
                this.columnAddDateBank = base.Columns["AddDateBank"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnBankAccID = new global::System.Data.DataColumn("BankAccID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccID);
                this.columnMovementCode = new global::System.Data.DataColumn("MovementCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovementCode);
                this.columnFisicalYeariD = new global::System.Data.DataColumn("FisicalYeariD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFisicalYeariD);
                this.columnتاريخ_الحركه = new global::System.Data.DataColumn("تاريخ الحركه", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnتاريخ_الحركه);
                this.columnتاريخ_الحق = new global::System.Data.DataColumn("تاريخ الحق", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnتاريخ_الحق);
                this.columnكود_البنك = new global::System.Data.DataColumn("كود البنك", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnكود_البنك);
                this.columnوصف_الحركه = new global::System.Data.DataColumn("وصف الحركه", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnوصف_الحركه);
                this.columnقيمة_التحويل = new global::System.Data.DataColumn("قيمة التحويل", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnقيمة_التحويل);
                this.columnنوع_العمليه = new global::System.Data.DataColumn("نوع العمليه", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnنوع_العمليه);
                this.columnالرصيد = new global::System.Data.DataColumn("الرصيد", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالرصيد);
                this.columnالبنك = new global::System.Data.DataColumn("البنك", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالبنك);
                this.columnرقم_الحساب = new global::System.Data.DataColumn("رقم الحساب", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnرقم_الحساب);
                this.columnنوع_الحساب = new global::System.Data.DataColumn("نوع الحساب", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnنوع_الحساب);
                this.columnالغرض_من_الحساب = new global::System.Data.DataColumn("الغرض من الحساب", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالغرض_من_الحساب);
                this.columnالتصنيف_الرئيسي = new global::System.Data.DataColumn("التصنيف الرئيسي", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالتصنيف_الرئيسي);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnMoveType1 = new global::System.Data.DataColumn("MoveType1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveType1);
                this.columnMoveType2 = new global::System.Data.DataColumn("MoveType2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveType2);
                this.columnIsSelectedType = new global::System.Data.DataColumn("IsSelectedType", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSelectedType);
                this.columnBankCheqID = new global::System.Data.DataColumn("BankCheqID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCheqID);
                this.columnDepositCashID = new global::System.Data.DataColumn("DepositCashID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositCashID);
                this.columnC1 = new global::System.Data.DataColumn("C1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1);
                this.columnC6 = new global::System.Data.DataColumn("C6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC6);
                this.columnتاريخ_الخركه = new global::System.Data.DataColumn("تاريخ الخركه", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnتاريخ_الخركه);
                this.columnالبنك_المسحوب_عليه = new global::System.Data.DataColumn("البنك المسحوب عليه", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالبنك_المسحوب_عليه);
                this.columnتاريخ_الاضافه = new global::System.Data.DataColumn("تاريخ الاضافه", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnتاريخ_الاضافه);
                this.columnتمت_الاضافه = new global::System.Data.DataColumn("تمت الاضافه", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnتمت_الاضافه);
                this.columnAddDateBank = new global::System.Data.DataColumn("AddDateBank", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddDateBank);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnMovementCode.MaxLength = 50;
                this.columnكود_البنك.MaxLength = 50;
                this.columnوصف_الحركه.MaxLength = 500;
                this.columnنوع_العمليه.MaxLength = 10;
                this.columnالبنك.MaxLength = 50;
                this.columnرقم_الحساب.MaxLength = 250;
                this.columnنوع_الحساب.MaxLength = 50;
                this.columnالغرض_من_الحساب.MaxLength = 50;
                this.columnالتصنيف_الرئيسي.MaxLength = 150;
                this.columnName.MaxLength = 150;
                this.columnC1.MaxLength = 100;
                this.columnC6.MaxLength = 150;
                this.columnالبنك_المسحوب_عليه.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable13Row NewDataTable13Row() {
                return ((DataTable13Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable13Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable13Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable13RowChanged != null)) {
                    this.DataTable13RowChanged(this, new DataTable13RowChangeEvent(((DataTable13Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable13RowChanging != null)) {
                    this.DataTable13RowChanging(this, new DataTable13RowChangeEvent(((DataTable13Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable13RowDeleted != null)) {
                    this.DataTable13RowDeleted(this, new DataTable13RowChangeEvent(((DataTable13Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable13RowDeleting != null)) {
                    this.DataTable13RowDeleting(this, new DataTable13RowChangeEvent(((DataTable13Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataTable13Row(DataTable13Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BankTransmentDS ds = new BankTransmentDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable13DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Tbl_BankStringCHeqCashDataTable : global::System.Data.TypedTableBase<Tbl_BankStringCHeqCashRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnMoveType;
            
            private global::System.Data.DataColumn columnMoveType1;
            
            private global::System.Data.DataColumn columnالتصنيف_الرئيسي;
            
            private global::System.Data.DataColumn columnالتصنيف_الفرعي;
            
            private global::System.Data.DataColumn columnالكلمه_الثانيه;
            
            private global::System.Data.DataColumn columnالبنك;
            
            private global::System.Data.DataColumn columnالكلمه_الاولى;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankStringCHeqCashDataTable() {
                this.TableName = "Tbl_BankStringCHeqCash";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Tbl_BankStringCHeqCashDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Tbl_BankStringCHeqCashDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoveTypeColumn {
                get {
                    return this.columnMoveType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoveType1Column {
                get {
                    return this.columnMoveType1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn التصنيف_الرئيسيColumn {
                get {
                    return this.columnالتصنيف_الرئيسي;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn التصنيف_الفرعيColumn {
                get {
                    return this.columnالتصنيف_الفرعي;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn الكلمه_الثانيهColumn {
                get {
                    return this.columnالكلمه_الثانيه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn البنكColumn {
                get {
                    return this.columnالبنك;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn الكلمه_الاولىColumn {
                get {
                    return this.columnالكلمه_الاولى;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankStringCHeqCashRow this[int index] {
                get {
                    return ((Tbl_BankStringCHeqCashRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_BankStringCHeqCashRowChangeEventHandler Tbl_BankStringCHeqCashRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_BankStringCHeqCashRowChangeEventHandler Tbl_BankStringCHeqCashRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_BankStringCHeqCashRowChangeEventHandler Tbl_BankStringCHeqCashRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_BankStringCHeqCashRowChangeEventHandler Tbl_BankStringCHeqCashRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTbl_BankStringCHeqCashRow(Tbl_BankStringCHeqCashRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankStringCHeqCashRow AddTbl_BankStringCHeqCashRow(int BankID, int MoveType, int MoveType1, string التصنيف_الرئيسي, string التصنيف_الفرعي, string الكلمه_الثانيه, string البنك, string الكلمه_الاولى) {
                Tbl_BankStringCHeqCashRow rowTbl_BankStringCHeqCashRow = ((Tbl_BankStringCHeqCashRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BankID,
                        MoveType,
                        MoveType1,
                        التصنيف_الرئيسي,
                        التصنيف_الفرعي,
                        الكلمه_الثانيه,
                        البنك,
                        الكلمه_الاولى};
                rowTbl_BankStringCHeqCashRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTbl_BankStringCHeqCashRow);
                return rowTbl_BankStringCHeqCashRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankStringCHeqCashRow FindByID(int ID) {
                return ((Tbl_BankStringCHeqCashRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Tbl_BankStringCHeqCashDataTable cln = ((Tbl_BankStringCHeqCashDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Tbl_BankStringCHeqCashDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBankID = base.Columns["BankID"];
                this.columnMoveType = base.Columns["MoveType"];
                this.columnMoveType1 = base.Columns["MoveType1"];
                this.columnالتصنيف_الرئيسي = base.Columns["التصنيف الرئيسي"];
                this.columnالتصنيف_الفرعي = base.Columns["التصنيف الفرعي"];
                this.columnالكلمه_الثانيه = base.Columns["الكلمه الثانيه"];
                this.columnالبنك = base.Columns["البنك"];
                this.columnالكلمه_الاولى = base.Columns["الكلمه الاولى"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnMoveType = new global::System.Data.DataColumn("MoveType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveType);
                this.columnMoveType1 = new global::System.Data.DataColumn("MoveType1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveType1);
                this.columnالتصنيف_الرئيسي = new global::System.Data.DataColumn("التصنيف الرئيسي", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالتصنيف_الرئيسي);
                this.columnالتصنيف_الفرعي = new global::System.Data.DataColumn("التصنيف الفرعي", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالتصنيف_الفرعي);
                this.columnالكلمه_الثانيه = new global::System.Data.DataColumn("الكلمه الثانيه", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالكلمه_الثانيه);
                this.columnالبنك = new global::System.Data.DataColumn("البنك", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالبنك);
                this.columnالكلمه_الاولى = new global::System.Data.DataColumn("الكلمه الاولى", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالكلمه_الاولى);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnBankID.AllowDBNull = false;
                this.columnالتصنيف_الرئيسي.MaxLength = 150;
                this.columnالتصنيف_الفرعي.MaxLength = 150;
                this.columnالكلمه_الثانيه.MaxLength = 50;
                this.columnالبنك.MaxLength = 50;
                this.columnالكلمه_الاولى.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankStringCHeqCashRow NewTbl_BankStringCHeqCashRow() {
                return ((Tbl_BankStringCHeqCashRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Tbl_BankStringCHeqCashRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Tbl_BankStringCHeqCashRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Tbl_BankStringCHeqCashRowChanged != null)) {
                    this.Tbl_BankStringCHeqCashRowChanged(this, new Tbl_BankStringCHeqCashRowChangeEvent(((Tbl_BankStringCHeqCashRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Tbl_BankStringCHeqCashRowChanging != null)) {
                    this.Tbl_BankStringCHeqCashRowChanging(this, new Tbl_BankStringCHeqCashRowChangeEvent(((Tbl_BankStringCHeqCashRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Tbl_BankStringCHeqCashRowDeleted != null)) {
                    this.Tbl_BankStringCHeqCashRowDeleted(this, new Tbl_BankStringCHeqCashRowChangeEvent(((Tbl_BankStringCHeqCashRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Tbl_BankStringCHeqCashRowDeleting != null)) {
                    this.Tbl_BankStringCHeqCashRowDeleting(this, new Tbl_BankStringCHeqCashRowChangeEvent(((Tbl_BankStringCHeqCashRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTbl_BankStringCHeqCashRow(Tbl_BankStringCHeqCashRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BankTransmentDS ds = new BankTransmentDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Tbl_BankStringCHeqCashDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Tbl_BankMovementDataTable : global::System.Data.TypedTableBase<Tbl_BankMovementRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnC1;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnBankAccID;
            
            private global::System.Data.DataColumn columnMovementCode;
            
            private global::System.Data.DataColumn columnFisicalYeariD;
            
            private global::System.Data.DataColumn columnMoveType1;
            
            private global::System.Data.DataColumn columnMoveType2;
            
            private global::System.Data.DataColumn columnIsSelectedType;
            
            private global::System.Data.DataColumn columnBankCheqID;
            
            private global::System.Data.DataColumn columnDepositCashID;
            
            private global::System.Data.DataColumn columnIsCollected;
            
            private global::System.Data.DataColumn columnالرصيد;
            
            private global::System.Data.DataColumn columnالبنك;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAmountCheque;
            
            private global::System.Data.DataColumn columnChequeNo;
            
            private global::System.Data.DataColumn columnChequeDueDate;
            
            private global::System.Data.DataColumn columnAddDateBank;
            
            private global::System.Data.DataColumn columnTradeCollectionNo;
            
            private global::System.Data.DataColumn columnAddDateAccBank;
            
            private global::System.Data.DataColumn columnBankDueDate;
            
            private global::System.Data.DataColumn columnتاريخ_الحركه;
            
            private global::System.Data.DataColumn columnتاريخ_الحق;
            
            private global::System.Data.DataColumn columnكود_البنك;
            
            private global::System.Data.DataColumn columnوصف_الحركه;
            
            private global::System.Data.DataColumn columnقيمة_التحويل;
            
            private global::System.Data.DataColumn columnنوع_العملية;
            
            private global::System.Data.DataColumn columnرقم_الحساب;
            
            private global::System.Data.DataColumn columnنوع_الحساب;
            
            private global::System.Data.DataColumn columnالغرض_من_الحساب;
            
            private global::System.Data.DataColumn columnالتصنيف_الرئيسي;
            
            private global::System.Data.DataColumn columnExpr1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankMovementDataTable() {
                this.TableName = "Tbl_BankMovement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Tbl_BankMovementDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Tbl_BankMovementDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C1Column {
                get {
                    return this.columnC1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAccIDColumn {
                get {
                    return this.columnBankAccID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MovementCodeColumn {
                get {
                    return this.columnMovementCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FisicalYeariDColumn {
                get {
                    return this.columnFisicalYeariD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoveType1Column {
                get {
                    return this.columnMoveType1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MoveType2Column {
                get {
                    return this.columnMoveType2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsSelectedTypeColumn {
                get {
                    return this.columnIsSelectedType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankCheqIDColumn {
                get {
                    return this.columnBankCheqID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepositCashIDColumn {
                get {
                    return this.columnDepositCashID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCollectedColumn {
                get {
                    return this.columnIsCollected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn الرصيدColumn {
                get {
                    return this.columnالرصيد;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn البنكColumn {
                get {
                    return this.columnالبنك;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountChequeColumn {
                get {
                    return this.columnAmountCheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChequeNoColumn {
                get {
                    return this.columnChequeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChequeDueDateColumn {
                get {
                    return this.columnChequeDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddDateBankColumn {
                get {
                    return this.columnAddDateBank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeCollectionNoColumn {
                get {
                    return this.columnTradeCollectionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddDateAccBankColumn {
                get {
                    return this.columnAddDateAccBank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankDueDateColumn {
                get {
                    return this.columnBankDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تاريخ_الحركهColumn {
                get {
                    return this.columnتاريخ_الحركه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تاريخ_الحقColumn {
                get {
                    return this.columnتاريخ_الحق;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn كود_البنكColumn {
                get {
                    return this.columnكود_البنك;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn وصف_الحركهColumn {
                get {
                    return this.columnوصف_الحركه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn قيمة_التحويلColumn {
                get {
                    return this.columnقيمة_التحويل;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn نوع_العمليةColumn {
                get {
                    return this.columnنوع_العملية;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn رقم_الحسابColumn {
                get {
                    return this.columnرقم_الحساب;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn نوع_الحسابColumn {
                get {
                    return this.columnنوع_الحساب;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn الغرض_من_الحسابColumn {
                get {
                    return this.columnالغرض_من_الحساب;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn التصنيف_الرئيسيColumn {
                get {
                    return this.columnالتصنيف_الرئيسي;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr1Column {
                get {
                    return this.columnExpr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankMovementRow this[int index] {
                get {
                    return ((Tbl_BankMovementRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_BankMovementRowChangeEventHandler Tbl_BankMovementRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_BankMovementRowChangeEventHandler Tbl_BankMovementRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_BankMovementRowChangeEventHandler Tbl_BankMovementRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_BankMovementRowChangeEventHandler Tbl_BankMovementRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTbl_BankMovementRow(Tbl_BankMovementRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankMovementRow AddTbl_BankMovementRow(
                        string C1, 
                        int BankID, 
                        int BankAccID, 
                        string MovementCode, 
                        int FisicalYeariD, 
                        int MoveType1, 
                        int MoveType2, 
                        bool IsSelectedType, 
                        long BankCheqID, 
                        long DepositCashID, 
                        bool IsCollected, 
                        decimal الرصيد, 
                        string البنك, 
                        string Name, 
                        decimal AmountCheque, 
                        string ChequeNo, 
                        System.DateTime ChequeDueDate, 
                        System.DateTime AddDateBank, 
                        string TradeCollectionNo, 
                        System.DateTime AddDateAccBank, 
                        System.DateTime BankDueDate, 
                        System.DateTime تاريخ_الحركه, 
                        System.DateTime تاريخ_الحق, 
                        string كود_البنك, 
                        string وصف_الحركه, 
                        decimal قيمة_التحويل, 
                        string نوع_العملية, 
                        string رقم_الحساب, 
                        string نوع_الحساب, 
                        string الغرض_من_الحساب, 
                        string التصنيف_الرئيسي) {
                Tbl_BankMovementRow rowTbl_BankMovementRow = ((Tbl_BankMovementRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        C1,
                        BankID,
                        BankAccID,
                        MovementCode,
                        FisicalYeariD,
                        MoveType1,
                        MoveType2,
                        IsSelectedType,
                        BankCheqID,
                        DepositCashID,
                        IsCollected,
                        الرصيد,
                        البنك,
                        Name,
                        AmountCheque,
                        ChequeNo,
                        ChequeDueDate,
                        AddDateBank,
                        TradeCollectionNo,
                        AddDateAccBank,
                        BankDueDate,
                        تاريخ_الحركه,
                        تاريخ_الحق,
                        كود_البنك,
                        وصف_الحركه,
                        قيمة_التحويل,
                        نوع_العملية,
                        رقم_الحساب,
                        نوع_الحساب,
                        الغرض_من_الحساب,
                        التصنيف_الرئيسي,
                        null};
                rowTbl_BankMovementRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTbl_BankMovementRow);
                return rowTbl_BankMovementRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankMovementRow FindByID(long ID) {
                return ((Tbl_BankMovementRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Tbl_BankMovementDataTable cln = ((Tbl_BankMovementDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Tbl_BankMovementDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnC1 = base.Columns["C1"];
                this.columnBankID = base.Columns["BankID"];
                this.columnBankAccID = base.Columns["BankAccID"];
                this.columnMovementCode = base.Columns["MovementCode"];
                this.columnFisicalYeariD = base.Columns["FisicalYeariD"];
                this.columnMoveType1 = base.Columns["MoveType1"];
                this.columnMoveType2 = base.Columns["MoveType2"];
                this.columnIsSelectedType = base.Columns["IsSelectedType"];
                this.columnBankCheqID = base.Columns["BankCheqID"];
                this.columnDepositCashID = base.Columns["DepositCashID"];
                this.columnIsCollected = base.Columns["IsCollected"];
                this.columnالرصيد = base.Columns["الرصيد"];
                this.columnالبنك = base.Columns["البنك"];
                this.columnName = base.Columns["Name"];
                this.columnAmountCheque = base.Columns["AmountCheque"];
                this.columnChequeNo = base.Columns["ChequeNo"];
                this.columnChequeDueDate = base.Columns["ChequeDueDate"];
                this.columnAddDateBank = base.Columns["AddDateBank"];
                this.columnTradeCollectionNo = base.Columns["TradeCollectionNo"];
                this.columnAddDateAccBank = base.Columns["AddDateAccBank"];
                this.columnBankDueDate = base.Columns["BankDueDate"];
                this.columnتاريخ_الحركه = base.Columns["تاريخ_الحركه"];
                this.columnتاريخ_الحق = base.Columns["تاريخ_الحق"];
                this.columnكود_البنك = base.Columns["كود_البنك"];
                this.columnوصف_الحركه = base.Columns["وصف_الحركه"];
                this.columnقيمة_التحويل = base.Columns["قيمة_التحويل"];
                this.columnنوع_العملية = base.Columns["نوع_العملية"];
                this.columnرقم_الحساب = base.Columns["رقم_الحساب"];
                this.columnنوع_الحساب = base.Columns["نوع_الحساب"];
                this.columnالغرض_من_الحساب = base.Columns["الغرض_من_الحساب"];
                this.columnالتصنيف_الرئيسي = base.Columns["التصنيف_الرئيسي"];
                this.columnExpr1 = base.Columns["Expr1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnC1 = new global::System.Data.DataColumn("C1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnBankAccID = new global::System.Data.DataColumn("BankAccID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccID);
                this.columnMovementCode = new global::System.Data.DataColumn("MovementCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovementCode);
                this.columnFisicalYeariD = new global::System.Data.DataColumn("FisicalYeariD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFisicalYeariD);
                this.columnMoveType1 = new global::System.Data.DataColumn("MoveType1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveType1);
                this.columnMoveType2 = new global::System.Data.DataColumn("MoveType2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveType2);
                this.columnIsSelectedType = new global::System.Data.DataColumn("IsSelectedType", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSelectedType);
                this.columnBankCheqID = new global::System.Data.DataColumn("BankCheqID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCheqID);
                this.columnDepositCashID = new global::System.Data.DataColumn("DepositCashID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositCashID);
                this.columnIsCollected = new global::System.Data.DataColumn("IsCollected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCollected);
                this.columnالرصيد = new global::System.Data.DataColumn("الرصيد", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالرصيد);
                this.columnالبنك = new global::System.Data.DataColumn("البنك", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالبنك);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAmountCheque = new global::System.Data.DataColumn("AmountCheque", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountCheque);
                this.columnChequeNo = new global::System.Data.DataColumn("ChequeNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChequeNo);
                this.columnChequeDueDate = new global::System.Data.DataColumn("ChequeDueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChequeDueDate);
                this.columnAddDateBank = new global::System.Data.DataColumn("AddDateBank", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddDateBank);
                this.columnTradeCollectionNo = new global::System.Data.DataColumn("TradeCollectionNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeCollectionNo);
                this.columnAddDateAccBank = new global::System.Data.DataColumn("AddDateAccBank", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddDateAccBank);
                this.columnBankDueDate = new global::System.Data.DataColumn("BankDueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankDueDate);
                this.columnتاريخ_الحركه = new global::System.Data.DataColumn("تاريخ_الحركه", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this.columnتاريخ_الحركه.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "تاريخ_الحركه");
                this.columnتاريخ_الحركه.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "تاريخ_الحركهColumn");
                this.columnتاريخ_الحركه.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnتاريخ_الحركه");
                this.columnتاريخ_الحركه.ExtendedProperties.Add("Generator_UserColumnName", "تاريخ_الحركه");
                base.Columns.Add(this.columnتاريخ_الحركه);
                this.columnتاريخ_الحق = new global::System.Data.DataColumn("تاريخ_الحق", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this.columnتاريخ_الحق.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "تاريخ_الحق");
                this.columnتاريخ_الحق.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "تاريخ_الحقColumn");
                this.columnتاريخ_الحق.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnتاريخ_الحق");
                this.columnتاريخ_الحق.ExtendedProperties.Add("Generator_UserColumnName", "تاريخ_الحق");
                base.Columns.Add(this.columnتاريخ_الحق);
                this.columnكود_البنك = new global::System.Data.DataColumn("كود_البنك", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnكود_البنك.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "كود_البنك");
                this.columnكود_البنك.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "كود_البنكColumn");
                this.columnكود_البنك.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnكود_البنك");
                this.columnكود_البنك.ExtendedProperties.Add("Generator_UserColumnName", "كود_البنك");
                base.Columns.Add(this.columnكود_البنك);
                this.columnوصف_الحركه = new global::System.Data.DataColumn("وصف_الحركه", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnوصف_الحركه.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "وصف_الحركه");
                this.columnوصف_الحركه.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "وصف_الحركهColumn");
                this.columnوصف_الحركه.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnوصف_الحركه");
                this.columnوصف_الحركه.ExtendedProperties.Add("Generator_UserColumnName", "وصف_الحركه");
                base.Columns.Add(this.columnوصف_الحركه);
                this.columnقيمة_التحويل = new global::System.Data.DataColumn("قيمة_التحويل", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.columnقيمة_التحويل.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "قيمة_التحويل");
                this.columnقيمة_التحويل.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "قيمة_التحويلColumn");
                this.columnقيمة_التحويل.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnقيمة_التحويل");
                this.columnقيمة_التحويل.ExtendedProperties.Add("Generator_UserColumnName", "قيمة_التحويل");
                base.Columns.Add(this.columnقيمة_التحويل);
                this.columnنوع_العملية = new global::System.Data.DataColumn("نوع_العملية", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnنوع_العملية);
                this.columnرقم_الحساب = new global::System.Data.DataColumn("رقم_الحساب", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnرقم_الحساب.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "رقم_الحساب");
                this.columnرقم_الحساب.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "رقم_الحسابColumn");
                this.columnرقم_الحساب.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnرقم_الحساب");
                this.columnرقم_الحساب.ExtendedProperties.Add("Generator_UserColumnName", "رقم_الحساب");
                base.Columns.Add(this.columnرقم_الحساب);
                this.columnنوع_الحساب = new global::System.Data.DataColumn("نوع_الحساب", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnنوع_الحساب.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "نوع_الحساب");
                this.columnنوع_الحساب.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "نوع_الحسابColumn");
                this.columnنوع_الحساب.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnنوع_الحساب");
                this.columnنوع_الحساب.ExtendedProperties.Add("Generator_UserColumnName", "نوع_الحساب");
                base.Columns.Add(this.columnنوع_الحساب);
                this.columnالغرض_من_الحساب = new global::System.Data.DataColumn("الغرض_من_الحساب", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnالغرض_من_الحساب.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "الغرض_من_الحساب");
                this.columnالغرض_من_الحساب.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "الغرض_من_الحسابColumn");
                this.columnالغرض_من_الحساب.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnالغرض_من_الحساب");
                this.columnالغرض_من_الحساب.ExtendedProperties.Add("Generator_UserColumnName", "الغرض_من_الحساب");
                base.Columns.Add(this.columnالغرض_من_الحساب);
                this.columnالتصنيف_الرئيسي = new global::System.Data.DataColumn("التصنيف_الرئيسي", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnالتصنيف_الرئيسي.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "التصنيف_الرئيسي");
                this.columnالتصنيف_الرئيسي.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "التصنيف_الرئيسيColumn");
                this.columnالتصنيف_الرئيسي.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnالتصنيف_الرئيسي");
                this.columnالتصنيف_الرئيسي.ExtendedProperties.Add("Generator_UserColumnName", "التصنيف_الرئيسي");
                base.Columns.Add(this.columnالتصنيف_الرئيسي);
                this.columnExpr1 = new global::System.Data.DataColumn("Expr1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr1);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnC1.MaxLength = 100;
                this.columnMovementCode.MaxLength = 50;
                this.columnالبنك.MaxLength = 50;
                this.columnName.MaxLength = 150;
                this.columnChequeNo.MaxLength = 100;
                this.columnTradeCollectionNo.MaxLength = 100;
                this.columnكود_البنك.MaxLength = 50;
                this.columnوصف_الحركه.MaxLength = 500;
                this.columnنوع_العملية.MaxLength = 50;
                this.columnرقم_الحساب.MaxLength = 250;
                this.columnنوع_الحساب.MaxLength = 50;
                this.columnالغرض_من_الحساب.MaxLength = 50;
                this.columnالتصنيف_الرئيسي.MaxLength = 150;
                this.columnExpr1.AutoIncrement = true;
                this.columnExpr1.AutoIncrementSeed = -1;
                this.columnExpr1.AutoIncrementStep = -1;
                this.columnExpr1.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankMovementRow NewTbl_BankMovementRow() {
                return ((Tbl_BankMovementRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Tbl_BankMovementRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Tbl_BankMovementRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Tbl_BankMovementRowChanged != null)) {
                    this.Tbl_BankMovementRowChanged(this, new Tbl_BankMovementRowChangeEvent(((Tbl_BankMovementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Tbl_BankMovementRowChanging != null)) {
                    this.Tbl_BankMovementRowChanging(this, new Tbl_BankMovementRowChangeEvent(((Tbl_BankMovementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Tbl_BankMovementRowDeleted != null)) {
                    this.Tbl_BankMovementRowDeleted(this, new Tbl_BankMovementRowChangeEvent(((Tbl_BankMovementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Tbl_BankMovementRowDeleting != null)) {
                    this.Tbl_BankMovementRowDeleting(this, new Tbl_BankMovementRowChangeEvent(((Tbl_BankMovementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTbl_BankMovementRow(Tbl_BankMovementRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BankTransmentDS ds = new BankTransmentDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Tbl_BankMovementDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Tbl_CustmersTypeDataTable : global::System.Data.TypedTableBase<Tbl_CustmersTypeRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAccounting_GuidID;
            
            private global::System.Data.DataColumn columnParent_ID;
            
            private global::System.Data.DataColumn columnIsElectronicPaymentNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_CustmersTypeDataTable() {
                this.TableName = "Tbl_CustmersType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Tbl_CustmersTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Tbl_CustmersTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Accounting_GuidIDColumn {
                get {
                    return this.columnAccounting_GuidID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Parent_IDColumn {
                get {
                    return this.columnParent_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsElectronicPaymentNoColumn {
                get {
                    return this.columnIsElectronicPaymentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_CustmersTypeRow this[int index] {
                get {
                    return ((Tbl_CustmersTypeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_CustmersTypeRowChangeEventHandler Tbl_CustmersTypeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_CustmersTypeRowChangeEventHandler Tbl_CustmersTypeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_CustmersTypeRowChangeEventHandler Tbl_CustmersTypeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Tbl_CustmersTypeRowChangeEventHandler Tbl_CustmersTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTbl_CustmersTypeRow(Tbl_CustmersTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_CustmersTypeRow AddTbl_CustmersTypeRow(string Name, int Accounting_GuidID, int Parent_ID, bool IsElectronicPaymentNo) {
                Tbl_CustmersTypeRow rowTbl_CustmersTypeRow = ((Tbl_CustmersTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        Accounting_GuidID,
                        Parent_ID,
                        IsElectronicPaymentNo};
                rowTbl_CustmersTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTbl_CustmersTypeRow);
                return rowTbl_CustmersTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_CustmersTypeRow FindByID(int ID) {
                return ((Tbl_CustmersTypeRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Tbl_CustmersTypeDataTable cln = ((Tbl_CustmersTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Tbl_CustmersTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnName = base.Columns["Name"];
                this.columnAccounting_GuidID = base.Columns["Accounting_GuidID"];
                this.columnParent_ID = base.Columns["Parent_ID"];
                this.columnIsElectronicPaymentNo = base.Columns["IsElectronicPaymentNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAccounting_GuidID = new global::System.Data.DataColumn("Accounting_GuidID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccounting_GuidID);
                this.columnParent_ID = new global::System.Data.DataColumn("Parent_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParent_ID);
                this.columnIsElectronicPaymentNo = new global::System.Data.DataColumn("IsElectronicPaymentNo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsElectronicPaymentNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_CustmersTypeRow NewTbl_CustmersTypeRow() {
                return ((Tbl_CustmersTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Tbl_CustmersTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Tbl_CustmersTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Tbl_CustmersTypeRowChanged != null)) {
                    this.Tbl_CustmersTypeRowChanged(this, new Tbl_CustmersTypeRowChangeEvent(((Tbl_CustmersTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Tbl_CustmersTypeRowChanging != null)) {
                    this.Tbl_CustmersTypeRowChanging(this, new Tbl_CustmersTypeRowChangeEvent(((Tbl_CustmersTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Tbl_CustmersTypeRowDeleted != null)) {
                    this.Tbl_CustmersTypeRowDeleted(this, new Tbl_CustmersTypeRowChangeEvent(((Tbl_CustmersTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Tbl_CustmersTypeRowDeleting != null)) {
                    this.Tbl_CustmersTypeRowDeleting(this, new Tbl_CustmersTypeRowChangeEvent(((Tbl_CustmersTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTbl_CustmersTypeRow(Tbl_CustmersTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BankTransmentDS ds = new BankTransmentDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Tbl_CustmersTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DTBElectronicPayAuditDataTable : global::System.Data.TypedTableBase<DTBElectronicPayAuditRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnتاريخ_الحركه;
            
            private global::System.Data.DataColumn columnتاريخ_الحق;
            
            private global::System.Data.DataColumn columnوصف_الحركه;
            
            private global::System.Data.DataColumn columnكود_الحركه;
            
            private global::System.Data.DataColumn columnتاريخ_المراجعه;
            
            private global::System.Data.DataColumn columnالملاحظه;
            
            private global::System.Data.DataColumn columnتاريخ_التعديل;
            
            private global::System.Data.DataColumn columnقيمة_الحركه;
            
            private global::System.Data.DataColumn columnالبنك;
            
            private global::System.Data.DataColumn columnIsUpdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DTBElectronicPayAuditDataTable() {
                this.TableName = "DTBElectronicPayAudit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DTBElectronicPayAuditDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DTBElectronicPayAuditDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تاريخ_الحركهColumn {
                get {
                    return this.columnتاريخ_الحركه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تاريخ_الحقColumn {
                get {
                    return this.columnتاريخ_الحق;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn وصف_الحركهColumn {
                get {
                    return this.columnوصف_الحركه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn كود_الحركهColumn {
                get {
                    return this.columnكود_الحركه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تاريخ_المراجعهColumn {
                get {
                    return this.columnتاريخ_المراجعه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn الملاحظهColumn {
                get {
                    return this.columnالملاحظه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn تاريخ_التعديلColumn {
                get {
                    return this.columnتاريخ_التعديل;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn قيمة_الحركهColumn {
                get {
                    return this.columnقيمة_الحركه;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn البنكColumn {
                get {
                    return this.columnالبنك;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsUpdateColumn {
                get {
                    return this.columnIsUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DTBElectronicPayAuditRow this[int index] {
                get {
                    return ((DTBElectronicPayAuditRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DTBElectronicPayAuditRowChangeEventHandler DTBElectronicPayAuditRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DTBElectronicPayAuditRowChangeEventHandler DTBElectronicPayAuditRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DTBElectronicPayAuditRowChangeEventHandler DTBElectronicPayAuditRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DTBElectronicPayAuditRowChangeEventHandler DTBElectronicPayAuditRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDTBElectronicPayAuditRow(DTBElectronicPayAuditRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DTBElectronicPayAuditRow AddDTBElectronicPayAuditRow(System.DateTime تاريخ_الحركه, System.DateTime تاريخ_الحق, string وصف_الحركه, string كود_الحركه, System.DateTime تاريخ_المراجعه, string الملاحظه, System.DateTime تاريخ_التعديل, decimal قيمة_الحركه, string البنك, bool IsUpdate) {
                DTBElectronicPayAuditRow rowDTBElectronicPayAuditRow = ((DTBElectronicPayAuditRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        تاريخ_الحركه,
                        تاريخ_الحق,
                        وصف_الحركه,
                        كود_الحركه,
                        تاريخ_المراجعه,
                        الملاحظه,
                        تاريخ_التعديل,
                        قيمة_الحركه,
                        البنك,
                        IsUpdate};
                rowDTBElectronicPayAuditRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDTBElectronicPayAuditRow);
                return rowDTBElectronicPayAuditRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DTBElectronicPayAuditRow FindByID(long ID) {
                return ((DTBElectronicPayAuditRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DTBElectronicPayAuditDataTable cln = ((DTBElectronicPayAuditDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DTBElectronicPayAuditDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnتاريخ_الحركه = base.Columns["تاريخ_الحركه"];
                this.columnتاريخ_الحق = base.Columns["تاريخ_الحق"];
                this.columnوصف_الحركه = base.Columns["وصف_الحركه"];
                this.columnكود_الحركه = base.Columns["كود_الحركه"];
                this.columnتاريخ_المراجعه = base.Columns["تاريخ_المراجعه"];
                this.columnالملاحظه = base.Columns["الملاحظه"];
                this.columnتاريخ_التعديل = base.Columns["تاريخ_التعديل"];
                this.columnقيمة_الحركه = base.Columns["قيمة_الحركه"];
                this.columnالبنك = base.Columns["البنك"];
                this.columnIsUpdate = base.Columns["IsUpdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnتاريخ_الحركه = new global::System.Data.DataColumn("تاريخ_الحركه", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this.columnتاريخ_الحركه.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "تاريخ_الحركه");
                this.columnتاريخ_الحركه.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "تاريخ_الحركهColumn");
                this.columnتاريخ_الحركه.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnتاريخ_الحركه");
                this.columnتاريخ_الحركه.ExtendedProperties.Add("Generator_UserColumnName", "تاريخ_الحركه");
                base.Columns.Add(this.columnتاريخ_الحركه);
                this.columnتاريخ_الحق = new global::System.Data.DataColumn("تاريخ_الحق", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this.columnتاريخ_الحق.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "تاريخ_الحق");
                this.columnتاريخ_الحق.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "تاريخ_الحقColumn");
                this.columnتاريخ_الحق.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnتاريخ_الحق");
                this.columnتاريخ_الحق.ExtendedProperties.Add("Generator_UserColumnName", "تاريخ_الحق");
                base.Columns.Add(this.columnتاريخ_الحق);
                this.columnوصف_الحركه = new global::System.Data.DataColumn("وصف_الحركه", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnوصف_الحركه.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "وصف_الحركه");
                this.columnوصف_الحركه.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "وصف_الحركهColumn");
                this.columnوصف_الحركه.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnوصف_الحركه");
                this.columnوصف_الحركه.ExtendedProperties.Add("Generator_UserColumnName", "وصف_الحركه");
                base.Columns.Add(this.columnوصف_الحركه);
                this.columnكود_الحركه = new global::System.Data.DataColumn("كود_الحركه", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnكود_الحركه);
                this.columnتاريخ_المراجعه = new global::System.Data.DataColumn("تاريخ_المراجعه", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnتاريخ_المراجعه);
                this.columnالملاحظه = new global::System.Data.DataColumn("الملاحظه", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالملاحظه);
                this.columnتاريخ_التعديل = new global::System.Data.DataColumn("تاريخ_التعديل", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnتاريخ_التعديل);
                this.columnقيمة_الحركه = new global::System.Data.DataColumn("قيمة_الحركه", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnقيمة_الحركه);
                this.columnالبنك = new global::System.Data.DataColumn("البنك", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnالبنك);
                this.columnIsUpdate = new global::System.Data.DataColumn("IsUpdate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsUpdate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnوصف_الحركه.MaxLength = 500;
                this.columnكود_الحركه.MaxLength = 50;
                this.columnالملاحظه.MaxLength = 250;
                this.columnالبنك.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DTBElectronicPayAuditRow NewDTBElectronicPayAuditRow() {
                return ((DTBElectronicPayAuditRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DTBElectronicPayAuditRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DTBElectronicPayAuditRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DTBElectronicPayAuditRowChanged != null)) {
                    this.DTBElectronicPayAuditRowChanged(this, new DTBElectronicPayAuditRowChangeEvent(((DTBElectronicPayAuditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DTBElectronicPayAuditRowChanging != null)) {
                    this.DTBElectronicPayAuditRowChanging(this, new DTBElectronicPayAuditRowChangeEvent(((DTBElectronicPayAuditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DTBElectronicPayAuditRowDeleted != null)) {
                    this.DTBElectronicPayAuditRowDeleted(this, new DTBElectronicPayAuditRowChangeEvent(((DTBElectronicPayAuditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DTBElectronicPayAuditRowDeleting != null)) {
                    this.DTBElectronicPayAuditRowDeleting(this, new DTBElectronicPayAuditRowChangeEvent(((DTBElectronicPayAuditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDTBElectronicPayAuditRow(DTBElectronicPayAuditRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BankTransmentDS ds = new BankTransmentDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DTBElectronicPayAuditDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    return ((long)(this[this.tableDataTable1.IDColumn]));
                }
                set {
                    this[this.tableDataTable1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankID {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.BankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankID\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankAccID {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.BankAccIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAccID\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.BankAccIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MovementCode {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.MovementCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MovementCode\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.MovementCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FisicalYeariD {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.FisicalYeariDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FisicalYeariD\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.FisicalYeariDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime تاريخ_الحركه {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable1.تاريخ_الحركهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تاريخ الحركه\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.تاريخ_الحركهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime تاريخ_الحق {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable1.تاريخ_الحقColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تاريخ الحق\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.تاريخ_الحقColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string كود_البنك {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.كود_البنكColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'كود البنك\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.كود_البنكColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string وصف_الحركه {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.وصف_الحركهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'وصف الحركه\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.وصف_الحركهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal قيمة_التحويل {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.قيمة_التحويلColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'قيمة التحويل\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.قيمة_التحويلColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string نوع_العمليه {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.نوع_العمليهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'نوع العمليه\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.نوع_العمليهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal الرصيد {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.الرصيدColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'الرصيد\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.الرصيدColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string البنك {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.البنكColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'البنك\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.البنكColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string رقم_الحساب {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.رقم_الحسابColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'رقم الحساب\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.رقم_الحسابColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string نوع_الحساب {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.نوع_الحسابColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'نوع الحساب\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.نوع_الحسابColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string الغرض_من_الحساب {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.الغرض_من_الحسابColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'الغرض من الحساب\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.الغرض_من_الحسابColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string التصنيف_الرئيسي {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.التصنيف_الرئيسيColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'التصنيف الرئيسي\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.التصنيف_الرئيسيColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MoveType1 {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.MoveType1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveType1\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.MoveType1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MoveType2 {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.MoveType2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveType2\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.MoveType2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSelectedType {
                get {
                    try {
                        return ((bool)(this[this.tableDataTable1.IsSelectedTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSelectedType\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.IsSelectedTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BankCheqID {
                get {
                    try {
                        return ((long)(this[this.tableDataTable1.BankCheqIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCheqID\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.BankCheqIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DepositCashID {
                get {
                    try {
                        return ((long)(this[this.tableDataTable1.DepositCashIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepositCashID\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DepositCashIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string C1 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.C1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.C1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCollected {
                get {
                    try {
                        return ((bool)(this[this.tableDataTable1.IsCollectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCollected\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.IsCollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BranchId {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.BranchIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchId\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.BranchIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long TradeCode {
                get {
                    try {
                        return ((long)(this[this.tableDataTable1.TradeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeCode\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.TradeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TradeMoveType {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.TradeMoveTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeMoveType\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.TradeMoveTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DailyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable1.DailyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DailyDate\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DailyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string تصنيف_العملاء {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.تصنيف_العملاءColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تصنيف_العملاء\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.تصنيف_العملاءColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string الفرع {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.الفرعColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'الفرع\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.الفرعColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankIDNull() {
                return this.IsNull(this.tableDataTable1.BankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankIDNull() {
                this[this.tableDataTable1.BankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankAccIDNull() {
                return this.IsNull(this.tableDataTable1.BankAccIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankAccIDNull() {
                this[this.tableDataTable1.BankAccIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMovementCodeNull() {
                return this.IsNull(this.tableDataTable1.MovementCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMovementCodeNull() {
                this[this.tableDataTable1.MovementCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFisicalYeariDNull() {
                return this.IsNull(this.tableDataTable1.FisicalYeariDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFisicalYeariDNull() {
                this[this.tableDataTable1.FisicalYeariDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتاريخ_الحركهNull() {
                return this.IsNull(this.tableDataTable1.تاريخ_الحركهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتاريخ_الحركهNull() {
                this[this.tableDataTable1.تاريخ_الحركهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتاريخ_الحقNull() {
                return this.IsNull(this.tableDataTable1.تاريخ_الحقColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتاريخ_الحقNull() {
                this[this.tableDataTable1.تاريخ_الحقColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isكود_البنكNull() {
                return this.IsNull(this.tableDataTable1.كود_البنكColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setكود_البنكNull() {
                this[this.tableDataTable1.كود_البنكColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isوصف_الحركهNull() {
                return this.IsNull(this.tableDataTable1.وصف_الحركهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setوصف_الحركهNull() {
                this[this.tableDataTable1.وصف_الحركهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isقيمة_التحويلNull() {
                return this.IsNull(this.tableDataTable1.قيمة_التحويلColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setقيمة_التحويلNull() {
                this[this.tableDataTable1.قيمة_التحويلColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isنوع_العمليهNull() {
                return this.IsNull(this.tableDataTable1.نوع_العمليهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setنوع_العمليهNull() {
                this[this.tableDataTable1.نوع_العمليهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsالرصيدNull() {
                return this.IsNull(this.tableDataTable1.الرصيدColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetالرصيدNull() {
                this[this.tableDataTable1.الرصيدColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsالبنكNull() {
                return this.IsNull(this.tableDataTable1.البنكColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetالبنكNull() {
                this[this.tableDataTable1.البنكColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isرقم_الحسابNull() {
                return this.IsNull(this.tableDataTable1.رقم_الحسابColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setرقم_الحسابNull() {
                this[this.tableDataTable1.رقم_الحسابColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isنوع_الحسابNull() {
                return this.IsNull(this.tableDataTable1.نوع_الحسابColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setنوع_الحسابNull() {
                this[this.tableDataTable1.نوع_الحسابColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isالغرض_من_الحسابNull() {
                return this.IsNull(this.tableDataTable1.الغرض_من_الحسابColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setالغرض_من_الحسابNull() {
                this[this.tableDataTable1.الغرض_من_الحسابColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isالتصنيف_الرئيسيNull() {
                return this.IsNull(this.tableDataTable1.التصنيف_الرئيسيColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setالتصنيف_الرئيسيNull() {
                this[this.tableDataTable1.التصنيف_الرئيسيColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableDataTable1.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableDataTable1.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoveType1Null() {
                return this.IsNull(this.tableDataTable1.MoveType1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoveType1Null() {
                this[this.tableDataTable1.MoveType1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoveType2Null() {
                return this.IsNull(this.tableDataTable1.MoveType2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoveType2Null() {
                this[this.tableDataTable1.MoveType2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsSelectedTypeNull() {
                return this.IsNull(this.tableDataTable1.IsSelectedTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsSelectedTypeNull() {
                this[this.tableDataTable1.IsSelectedTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankCheqIDNull() {
                return this.IsNull(this.tableDataTable1.BankCheqIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankCheqIDNull() {
                this[this.tableDataTable1.BankCheqIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepositCashIDNull() {
                return this.IsNull(this.tableDataTable1.DepositCashIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepositCashIDNull() {
                this[this.tableDataTable1.DepositCashIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC1Null() {
                return this.IsNull(this.tableDataTable1.C1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC1Null() {
                this[this.tableDataTable1.C1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsCollectedNull() {
                return this.IsNull(this.tableDataTable1.IsCollectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsCollectedNull() {
                this[this.tableDataTable1.IsCollectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBranchIdNull() {
                return this.IsNull(this.tableDataTable1.BranchIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBranchIdNull() {
                this[this.tableDataTable1.BranchIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeCodeNull() {
                return this.IsNull(this.tableDataTable1.TradeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeCodeNull() {
                this[this.tableDataTable1.TradeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeMoveTypeNull() {
                return this.IsNull(this.tableDataTable1.TradeMoveTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeMoveTypeNull() {
                this[this.tableDataTable1.TradeMoveTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDailyDateNull() {
                return this.IsNull(this.tableDataTable1.DailyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDailyDateNull() {
                this[this.tableDataTable1.DailyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتصنيف_العملاءNull() {
                return this.IsNull(this.tableDataTable1.تصنيف_العملاءColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتصنيف_العملاءNull() {
                this[this.tableDataTable1.تصنيف_العملاءColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsالفرعNull() {
                return this.IsNull(this.tableDataTable1.الفرعColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetالفرعNull() {
                this[this.tableDataTable1.الفرعColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Tbl_MovementBankTypeRow : global::System.Data.DataRow {
            
            private Tbl_MovementBankTypeDataTable tableTbl_MovementBankType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Tbl_MovementBankTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTbl_MovementBankType = ((Tbl_MovementBankTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableTbl_MovementBankType.IDColumn]));
                }
                set {
                    this[this.tableTbl_MovementBankType.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableTbl_MovementBankType.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Tbl_MovementBankType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_MovementBankType.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MoveType {
                get {
                    try {
                        return ((int)(this[this.tableTbl_MovementBankType.MoveTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveType\' in table \'Tbl_MovementBankType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_MovementBankType.MoveTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableTbl_MovementBankType.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableTbl_MovementBankType.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoveTypeNull() {
                return this.IsNull(this.tableTbl_MovementBankType.MoveTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoveTypeNull() {
                this[this.tableTbl_MovementBankType.MoveTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable13Row[] GetDataTable13Rows() {
                if ((this.Table.ChildRelations["FK_Tbl_BankMovement_Tbl_MovementBankType"] == null)) {
                    return new DataTable13Row[0];
                }
                else {
                    return ((DataTable13Row[])(base.GetChildRows(this.Table.ChildRelations["FK_Tbl_BankMovement_Tbl_MovementBankType"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTable2Row : global::System.Data.DataRow {
            
            private DataTable2DataTable tableDataTable2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable2 = ((DataTable2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    return ((long)(this[this.tableDataTable2.IDColumn]));
                }
                set {
                    this[this.tableDataTable2.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MoveDat {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable2.MoveDatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveDat\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.MoveDatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BankDueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable2.BankDueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankDueDate\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.BankDueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumberRefrBank {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.NumberRefrBankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberRefrBank\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.NumberRefrBankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescriptionNote {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.DescriptionNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescriptionNote\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.DescriptionNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TransferValue {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable2.TransferValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferValue\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.TransferValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DebitCredit {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.DebitCreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DebitCredit\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.DebitCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable2.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankID {
                get {
                    try {
                        return ((int)(this[this.tableDataTable2.BankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankID\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankAccID {
                get {
                    try {
                        return ((int)(this[this.tableDataTable2.BankAccIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAccID\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.BankAccIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MovementCode {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.MovementCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MovementCode\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.MovementCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FisicalYeariD {
                get {
                    try {
                        return ((int)(this[this.tableDataTable2.FisicalYeariDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FisicalYeariD\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.FisicalYeariDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountBankNo {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.AccountBankNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountBankNo\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.AccountBankNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MoveType1 {
                get {
                    try {
                        return ((int)(this[this.tableDataTable2.MoveType1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveType1\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.MoveType1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MoveType2 {
                get {
                    try {
                        return ((int)(this[this.tableDataTable2.MoveType2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveType2\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.MoveType2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSelectedType {
                get {
                    try {
                        return ((bool)(this[this.tableDataTable2.IsSelectedTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSelectedType\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.IsSelectedTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BankCheqID {
                get {
                    try {
                        return ((long)(this[this.tableDataTable2.BankCheqIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCheqID\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.BankCheqIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DepositCashID {
                get {
                    try {
                        return ((long)(this[this.tableDataTable2.DepositCashIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepositCashID\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.DepositCashIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Expr1 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.Expr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr1\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.Expr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Expr2 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.Expr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr2\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.Expr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Expr3 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.Expr3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr3\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.Expr3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Expr4 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.Expr4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr4\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.Expr4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BranchId {
                get {
                    try {
                        return ((int)(this[this.tableDataTable2.BranchIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchId\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.BranchIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TradeMoveType {
                get {
                    try {
                        return ((int)(this[this.tableDataTable2.TradeMoveTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeMoveType\' in table \'DataTable2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.TradeMoveTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoveDatNull() {
                return this.IsNull(this.tableDataTable2.MoveDatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoveDatNull() {
                this[this.tableDataTable2.MoveDatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankDueDateNull() {
                return this.IsNull(this.tableDataTable2.BankDueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankDueDateNull() {
                this[this.tableDataTable2.BankDueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberRefrBankNull() {
                return this.IsNull(this.tableDataTable2.NumberRefrBankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberRefrBankNull() {
                this[this.tableDataTable2.NumberRefrBankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNoteNull() {
                return this.IsNull(this.tableDataTable2.DescriptionNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNoteNull() {
                this[this.tableDataTable2.DescriptionNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransferValueNull() {
                return this.IsNull(this.tableDataTable2.TransferValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransferValueNull() {
                this[this.tableDataTable2.TransferValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDebitCreditNull() {
                return this.IsNull(this.tableDataTable2.DebitCreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDebitCreditNull() {
                this[this.tableDataTable2.DebitCreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBalanceNull() {
                return this.IsNull(this.tableDataTable2.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBalanceNull() {
                this[this.tableDataTable2.BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankIDNull() {
                return this.IsNull(this.tableDataTable2.BankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankIDNull() {
                this[this.tableDataTable2.BankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankAccIDNull() {
                return this.IsNull(this.tableDataTable2.BankAccIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankAccIDNull() {
                this[this.tableDataTable2.BankAccIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMovementCodeNull() {
                return this.IsNull(this.tableDataTable2.MovementCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMovementCodeNull() {
                this[this.tableDataTable2.MovementCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFisicalYeariDNull() {
                return this.IsNull(this.tableDataTable2.FisicalYeariDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFisicalYeariDNull() {
                this[this.tableDataTable2.FisicalYeariDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableDataTable2.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableDataTable2.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountBankNoNull() {
                return this.IsNull(this.tableDataTable2.AccountBankNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountBankNoNull() {
                this[this.tableDataTable2.AccountBankNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoveType1Null() {
                return this.IsNull(this.tableDataTable2.MoveType1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoveType1Null() {
                this[this.tableDataTable2.MoveType1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoveType2Null() {
                return this.IsNull(this.tableDataTable2.MoveType2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoveType2Null() {
                this[this.tableDataTable2.MoveType2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsSelectedTypeNull() {
                return this.IsNull(this.tableDataTable2.IsSelectedTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsSelectedTypeNull() {
                this[this.tableDataTable2.IsSelectedTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankCheqIDNull() {
                return this.IsNull(this.tableDataTable2.BankCheqIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankCheqIDNull() {
                this[this.tableDataTable2.BankCheqIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepositCashIDNull() {
                return this.IsNull(this.tableDataTable2.DepositCashIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepositCashIDNull() {
                this[this.tableDataTable2.DepositCashIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpr1Null() {
                return this.IsNull(this.tableDataTable2.Expr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpr1Null() {
                this[this.tableDataTable2.Expr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpr2Null() {
                return this.IsNull(this.tableDataTable2.Expr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpr2Null() {
                this[this.tableDataTable2.Expr2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpr3Null() {
                return this.IsNull(this.tableDataTable2.Expr3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpr3Null() {
                this[this.tableDataTable2.Expr3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpr4Null() {
                return this.IsNull(this.tableDataTable2.Expr4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpr4Null() {
                this[this.tableDataTable2.Expr4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBranchIdNull() {
                return this.IsNull(this.tableDataTable2.BranchIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBranchIdNull() {
                this[this.tableDataTable2.BranchIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeMoveTypeNull() {
                return this.IsNull(this.tableDataTable2.TradeMoveTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeMoveTypeNull() {
                this[this.tableDataTable2.TradeMoveTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTable13Row : global::System.Data.DataRow {
            
            private DataTable13DataTable tableDataTable13;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable13Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable13 = ((DataTable13DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    return ((long)(this[this.tableDataTable13.IDColumn]));
                }
                set {
                    this[this.tableDataTable13.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankID {
                get {
                    try {
                        return ((int)(this[this.tableDataTable13.BankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankID\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankAccID {
                get {
                    try {
                        return ((int)(this[this.tableDataTable13.BankAccIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAccID\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.BankAccIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MovementCode {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.MovementCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MovementCode\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.MovementCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FisicalYeariD {
                get {
                    try {
                        return ((int)(this[this.tableDataTable13.FisicalYeariDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FisicalYeariD\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.FisicalYeariDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime تاريخ_الحركه {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable13.تاريخ_الحركهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تاريخ الحركه\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.تاريخ_الحركهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime تاريخ_الحق {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable13.تاريخ_الحقColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تاريخ الحق\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.تاريخ_الحقColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string كود_البنك {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.كود_البنكColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'كود البنك\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.كود_البنكColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string وصف_الحركه {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.وصف_الحركهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'وصف الحركه\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.وصف_الحركهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal قيمة_التحويل {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable13.قيمة_التحويلColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'قيمة التحويل\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.قيمة_التحويلColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string نوع_العمليه {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.نوع_العمليهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'نوع العمليه\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.نوع_العمليهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal الرصيد {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable13.الرصيدColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'الرصيد\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.الرصيدColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string البنك {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.البنكColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'البنك\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.البنكColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string رقم_الحساب {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.رقم_الحسابColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'رقم الحساب\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.رقم_الحسابColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string نوع_الحساب {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.نوع_الحسابColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'نوع الحساب\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.نوع_الحسابColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string الغرض_من_الحساب {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.الغرض_من_الحسابColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'الغرض من الحساب\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.الغرض_من_الحسابColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string التصنيف_الرئيسي {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.التصنيف_الرئيسيColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'التصنيف الرئيسي\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.التصنيف_الرئيسيColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MoveType1 {
                get {
                    try {
                        return ((int)(this[this.tableDataTable13.MoveType1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveType1\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.MoveType1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MoveType2 {
                get {
                    try {
                        return ((int)(this[this.tableDataTable13.MoveType2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveType2\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.MoveType2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSelectedType {
                get {
                    try {
                        return ((bool)(this[this.tableDataTable13.IsSelectedTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSelectedType\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.IsSelectedTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BankCheqID {
                get {
                    try {
                        return ((long)(this[this.tableDataTable13.BankCheqIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCheqID\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.BankCheqIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DepositCashID {
                get {
                    try {
                        return ((long)(this[this.tableDataTable13.DepositCashIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepositCashID\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.DepositCashIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string C1 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.C1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.C1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string C6 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.C6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C6\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.C6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime تاريخ_الخركه {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable13.تاريخ_الخركهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تاريخ الخركه\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.تاريخ_الخركهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string البنك_المسحوب_عليه {
                get {
                    try {
                        return ((string)(this[this.tableDataTable13.البنك_المسحوب_عليهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'البنك المسحوب عليه\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.البنك_المسحوب_عليهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime تاريخ_الاضافه {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable13.تاريخ_الاضافهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تاريخ الاضافه\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.تاريخ_الاضافهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool تمت_الاضافه {
                get {
                    try {
                        return ((bool)(this[this.tableDataTable13.تمت_الاضافهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تمت الاضافه\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.تمت_الاضافهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AddDateBank {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable13.AddDateBankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddDateBank\' in table \'DataTable13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable13.AddDateBankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_MovementBankTypeRow Tbl_MovementBankTypeRow {
                get {
                    return ((Tbl_MovementBankTypeRow)(this.GetParentRow(this.Table.ParentRelations["FK_Tbl_BankMovement_Tbl_MovementBankType"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Tbl_BankMovement_Tbl_MovementBankType"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankIDNull() {
                return this.IsNull(this.tableDataTable13.BankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankIDNull() {
                this[this.tableDataTable13.BankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankAccIDNull() {
                return this.IsNull(this.tableDataTable13.BankAccIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankAccIDNull() {
                this[this.tableDataTable13.BankAccIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMovementCodeNull() {
                return this.IsNull(this.tableDataTable13.MovementCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMovementCodeNull() {
                this[this.tableDataTable13.MovementCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFisicalYeariDNull() {
                return this.IsNull(this.tableDataTable13.FisicalYeariDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFisicalYeariDNull() {
                this[this.tableDataTable13.FisicalYeariDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتاريخ_الحركهNull() {
                return this.IsNull(this.tableDataTable13.تاريخ_الحركهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتاريخ_الحركهNull() {
                this[this.tableDataTable13.تاريخ_الحركهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتاريخ_الحقNull() {
                return this.IsNull(this.tableDataTable13.تاريخ_الحقColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتاريخ_الحقNull() {
                this[this.tableDataTable13.تاريخ_الحقColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isكود_البنكNull() {
                return this.IsNull(this.tableDataTable13.كود_البنكColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setكود_البنكNull() {
                this[this.tableDataTable13.كود_البنكColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isوصف_الحركهNull() {
                return this.IsNull(this.tableDataTable13.وصف_الحركهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setوصف_الحركهNull() {
                this[this.tableDataTable13.وصف_الحركهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isقيمة_التحويلNull() {
                return this.IsNull(this.tableDataTable13.قيمة_التحويلColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setقيمة_التحويلNull() {
                this[this.tableDataTable13.قيمة_التحويلColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isنوع_العمليهNull() {
                return this.IsNull(this.tableDataTable13.نوع_العمليهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setنوع_العمليهNull() {
                this[this.tableDataTable13.نوع_العمليهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsالرصيدNull() {
                return this.IsNull(this.tableDataTable13.الرصيدColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetالرصيدNull() {
                this[this.tableDataTable13.الرصيدColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsالبنكNull() {
                return this.IsNull(this.tableDataTable13.البنكColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetالبنكNull() {
                this[this.tableDataTable13.البنكColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isرقم_الحسابNull() {
                return this.IsNull(this.tableDataTable13.رقم_الحسابColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setرقم_الحسابNull() {
                this[this.tableDataTable13.رقم_الحسابColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isنوع_الحسابNull() {
                return this.IsNull(this.tableDataTable13.نوع_الحسابColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setنوع_الحسابNull() {
                this[this.tableDataTable13.نوع_الحسابColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isالغرض_من_الحسابNull() {
                return this.IsNull(this.tableDataTable13.الغرض_من_الحسابColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setالغرض_من_الحسابNull() {
                this[this.tableDataTable13.الغرض_من_الحسابColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isالتصنيف_الرئيسيNull() {
                return this.IsNull(this.tableDataTable13.التصنيف_الرئيسيColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setالتصنيف_الرئيسيNull() {
                this[this.tableDataTable13.التصنيف_الرئيسيColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableDataTable13.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableDataTable13.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoveType1Null() {
                return this.IsNull(this.tableDataTable13.MoveType1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoveType1Null() {
                this[this.tableDataTable13.MoveType1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoveType2Null() {
                return this.IsNull(this.tableDataTable13.MoveType2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoveType2Null() {
                this[this.tableDataTable13.MoveType2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsSelectedTypeNull() {
                return this.IsNull(this.tableDataTable13.IsSelectedTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsSelectedTypeNull() {
                this[this.tableDataTable13.IsSelectedTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankCheqIDNull() {
                return this.IsNull(this.tableDataTable13.BankCheqIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankCheqIDNull() {
                this[this.tableDataTable13.BankCheqIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepositCashIDNull() {
                return this.IsNull(this.tableDataTable13.DepositCashIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepositCashIDNull() {
                this[this.tableDataTable13.DepositCashIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC1Null() {
                return this.IsNull(this.tableDataTable13.C1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC1Null() {
                this[this.tableDataTable13.C1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC6Null() {
                return this.IsNull(this.tableDataTable13.C6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC6Null() {
                this[this.tableDataTable13.C6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتاريخ_الخركهNull() {
                return this.IsNull(this.tableDataTable13.تاريخ_الخركهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتاريخ_الخركهNull() {
                this[this.tableDataTable13.تاريخ_الخركهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isالبنك_المسحوب_عليهNull() {
                return this.IsNull(this.tableDataTable13.البنك_المسحوب_عليهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setالبنك_المسحوب_عليهNull() {
                this[this.tableDataTable13.البنك_المسحوب_عليهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتاريخ_الاضافهNull() {
                return this.IsNull(this.tableDataTable13.تاريخ_الاضافهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتاريخ_الاضافهNull() {
                this[this.tableDataTable13.تاريخ_الاضافهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتمت_الاضافهNull() {
                return this.IsNull(this.tableDataTable13.تمت_الاضافهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتمت_الاضافهNull() {
                this[this.tableDataTable13.تمت_الاضافهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddDateBankNull() {
                return this.IsNull(this.tableDataTable13.AddDateBankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddDateBankNull() {
                this[this.tableDataTable13.AddDateBankColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Tbl_BankStringCHeqCashRow : global::System.Data.DataRow {
            
            private Tbl_BankStringCHeqCashDataTable tableTbl_BankStringCHeqCash;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Tbl_BankStringCHeqCashRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTbl_BankStringCHeqCash = ((Tbl_BankStringCHeqCashDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableTbl_BankStringCHeqCash.IDColumn]));
                }
                set {
                    this[this.tableTbl_BankStringCHeqCash.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankID {
                get {
                    return ((int)(this[this.tableTbl_BankStringCHeqCash.BankIDColumn]));
                }
                set {
                    this[this.tableTbl_BankStringCHeqCash.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MoveType {
                get {
                    try {
                        return ((int)(this[this.tableTbl_BankStringCHeqCash.MoveTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveType\' in table \'Tbl_BankStringCHeqCash\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankStringCHeqCash.MoveTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MoveType1 {
                get {
                    try {
                        return ((int)(this[this.tableTbl_BankStringCHeqCash.MoveType1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveType1\' in table \'Tbl_BankStringCHeqCash\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankStringCHeqCash.MoveType1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string التصنيف_الرئيسي {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankStringCHeqCash.التصنيف_الرئيسيColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'التصنيف الرئيسي\' in table \'Tbl_BankStringCHeqCash\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankStringCHeqCash.التصنيف_الرئيسيColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string التصنيف_الفرعي {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankStringCHeqCash.التصنيف_الفرعيColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'التصنيف الفرعي\' in table \'Tbl_BankStringCHeqCash\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTbl_BankStringCHeqCash.التصنيف_الفرعيColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string الكلمه_الثانيه {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankStringCHeqCash.الكلمه_الثانيهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'الكلمه الثانيه\' in table \'Tbl_BankStringCHeqCash\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTbl_BankStringCHeqCash.الكلمه_الثانيهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string البنك {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankStringCHeqCash.البنكColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'البنك\' in table \'Tbl_BankStringCHeqCash\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankStringCHeqCash.البنكColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string الكلمه_الاولى {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankStringCHeqCash.الكلمه_الاولىColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'الكلمه الاولى\' in table \'Tbl_BankStringCHeqCash\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTbl_BankStringCHeqCash.الكلمه_الاولىColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoveTypeNull() {
                return this.IsNull(this.tableTbl_BankStringCHeqCash.MoveTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoveTypeNull() {
                this[this.tableTbl_BankStringCHeqCash.MoveTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoveType1Null() {
                return this.IsNull(this.tableTbl_BankStringCHeqCash.MoveType1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoveType1Null() {
                this[this.tableTbl_BankStringCHeqCash.MoveType1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isالتصنيف_الرئيسيNull() {
                return this.IsNull(this.tableTbl_BankStringCHeqCash.التصنيف_الرئيسيColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setالتصنيف_الرئيسيNull() {
                this[this.tableTbl_BankStringCHeqCash.التصنيف_الرئيسيColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isالتصنيف_الفرعيNull() {
                return this.IsNull(this.tableTbl_BankStringCHeqCash.التصنيف_الفرعيColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setالتصنيف_الفرعيNull() {
                this[this.tableTbl_BankStringCHeqCash.التصنيف_الفرعيColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isالكلمه_الثانيهNull() {
                return this.IsNull(this.tableTbl_BankStringCHeqCash.الكلمه_الثانيهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setالكلمه_الثانيهNull() {
                this[this.tableTbl_BankStringCHeqCash.الكلمه_الثانيهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsالبنكNull() {
                return this.IsNull(this.tableTbl_BankStringCHeqCash.البنكColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetالبنكNull() {
                this[this.tableTbl_BankStringCHeqCash.البنكColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isالكلمه_الاولىNull() {
                return this.IsNull(this.tableTbl_BankStringCHeqCash.الكلمه_الاولىColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setالكلمه_الاولىNull() {
                this[this.tableTbl_BankStringCHeqCash.الكلمه_الاولىColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Tbl_BankMovementRow : global::System.Data.DataRow {
            
            private Tbl_BankMovementDataTable tableTbl_BankMovement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Tbl_BankMovementRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTbl_BankMovement = ((Tbl_BankMovementDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    return ((long)(this[this.tableTbl_BankMovement.IDColumn]));
                }
                set {
                    this[this.tableTbl_BankMovement.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string C1 {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.C1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.C1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankID {
                get {
                    try {
                        return ((int)(this[this.tableTbl_BankMovement.BankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankID\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankAccID {
                get {
                    try {
                        return ((int)(this[this.tableTbl_BankMovement.BankAccIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAccID\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.BankAccIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MovementCode {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.MovementCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MovementCode\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.MovementCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FisicalYeariD {
                get {
                    try {
                        return ((int)(this[this.tableTbl_BankMovement.FisicalYeariDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FisicalYeariD\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.FisicalYeariDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MoveType1 {
                get {
                    try {
                        return ((int)(this[this.tableTbl_BankMovement.MoveType1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveType1\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.MoveType1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MoveType2 {
                get {
                    try {
                        return ((int)(this[this.tableTbl_BankMovement.MoveType2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveType2\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.MoveType2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSelectedType {
                get {
                    try {
                        return ((bool)(this[this.tableTbl_BankMovement.IsSelectedTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSelectedType\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.IsSelectedTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BankCheqID {
                get {
                    try {
                        return ((long)(this[this.tableTbl_BankMovement.BankCheqIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCheqID\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.BankCheqIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DepositCashID {
                get {
                    try {
                        return ((long)(this[this.tableTbl_BankMovement.DepositCashIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepositCashID\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.DepositCashIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCollected {
                get {
                    try {
                        return ((bool)(this[this.tableTbl_BankMovement.IsCollectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCollected\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.IsCollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal الرصيد {
                get {
                    try {
                        return ((decimal)(this[this.tableTbl_BankMovement.الرصيدColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'الرصيد\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.الرصيدColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string البنك {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.البنكColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'البنك\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.البنكColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AmountCheque {
                get {
                    try {
                        return ((decimal)(this[this.tableTbl_BankMovement.AmountChequeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountCheque\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.AmountChequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChequeNo {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.ChequeNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChequeNo\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.ChequeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ChequeDueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTbl_BankMovement.ChequeDueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChequeDueDate\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.ChequeDueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AddDateBank {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTbl_BankMovement.AddDateBankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddDateBank\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.AddDateBankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradeCollectionNo {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.TradeCollectionNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeCollectionNo\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.TradeCollectionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AddDateAccBank {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTbl_BankMovement.AddDateAccBankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddDateAccBank\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.AddDateAccBankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BankDueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTbl_BankMovement.BankDueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankDueDate\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.BankDueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime تاريخ_الحركه {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTbl_BankMovement.تاريخ_الحركهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تاريخ_الحركه\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.تاريخ_الحركهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime تاريخ_الحق {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTbl_BankMovement.تاريخ_الحقColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تاريخ_الحق\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.تاريخ_الحقColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string كود_البنك {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.كود_البنكColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'كود_البنك\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.كود_البنكColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string وصف_الحركه {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.وصف_الحركهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'وصف_الحركه\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.وصف_الحركهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal قيمة_التحويل {
                get {
                    try {
                        return ((decimal)(this[this.tableTbl_BankMovement.قيمة_التحويلColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'قيمة_التحويل\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.قيمة_التحويلColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string نوع_العملية {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.نوع_العمليةColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'نوع_العملية\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.نوع_العمليةColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string رقم_الحساب {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.رقم_الحسابColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'رقم_الحساب\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.رقم_الحسابColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string نوع_الحساب {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.نوع_الحسابColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'نوع_الحساب\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.نوع_الحسابColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string الغرض_من_الحساب {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.الغرض_من_الحسابColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'الغرض_من_الحساب\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.الغرض_من_الحسابColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string التصنيف_الرئيسي {
                get {
                    try {
                        return ((string)(this[this.tableTbl_BankMovement.التصنيف_الرئيسيColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'التصنيف_الرئيسي\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.التصنيف_الرئيسيColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Expr1 {
                get {
                    try {
                        return ((int)(this[this.tableTbl_BankMovement.Expr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr1\' in table \'Tbl_BankMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_BankMovement.Expr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC1Null() {
                return this.IsNull(this.tableTbl_BankMovement.C1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC1Null() {
                this[this.tableTbl_BankMovement.C1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankIDNull() {
                return this.IsNull(this.tableTbl_BankMovement.BankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankIDNull() {
                this[this.tableTbl_BankMovement.BankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankAccIDNull() {
                return this.IsNull(this.tableTbl_BankMovement.BankAccIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankAccIDNull() {
                this[this.tableTbl_BankMovement.BankAccIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMovementCodeNull() {
                return this.IsNull(this.tableTbl_BankMovement.MovementCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMovementCodeNull() {
                this[this.tableTbl_BankMovement.MovementCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFisicalYeariDNull() {
                return this.IsNull(this.tableTbl_BankMovement.FisicalYeariDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFisicalYeariDNull() {
                this[this.tableTbl_BankMovement.FisicalYeariDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoveType1Null() {
                return this.IsNull(this.tableTbl_BankMovement.MoveType1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoveType1Null() {
                this[this.tableTbl_BankMovement.MoveType1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoveType2Null() {
                return this.IsNull(this.tableTbl_BankMovement.MoveType2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoveType2Null() {
                this[this.tableTbl_BankMovement.MoveType2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsSelectedTypeNull() {
                return this.IsNull(this.tableTbl_BankMovement.IsSelectedTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsSelectedTypeNull() {
                this[this.tableTbl_BankMovement.IsSelectedTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankCheqIDNull() {
                return this.IsNull(this.tableTbl_BankMovement.BankCheqIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankCheqIDNull() {
                this[this.tableTbl_BankMovement.BankCheqIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepositCashIDNull() {
                return this.IsNull(this.tableTbl_BankMovement.DepositCashIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepositCashIDNull() {
                this[this.tableTbl_BankMovement.DepositCashIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsCollectedNull() {
                return this.IsNull(this.tableTbl_BankMovement.IsCollectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsCollectedNull() {
                this[this.tableTbl_BankMovement.IsCollectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsالرصيدNull() {
                return this.IsNull(this.tableTbl_BankMovement.الرصيدColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetالرصيدNull() {
                this[this.tableTbl_BankMovement.الرصيدColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsالبنكNull() {
                return this.IsNull(this.tableTbl_BankMovement.البنكColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetالبنكNull() {
                this[this.tableTbl_BankMovement.البنكColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableTbl_BankMovement.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableTbl_BankMovement.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountChequeNull() {
                return this.IsNull(this.tableTbl_BankMovement.AmountChequeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountChequeNull() {
                this[this.tableTbl_BankMovement.AmountChequeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChequeNoNull() {
                return this.IsNull(this.tableTbl_BankMovement.ChequeNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChequeNoNull() {
                this[this.tableTbl_BankMovement.ChequeNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChequeDueDateNull() {
                return this.IsNull(this.tableTbl_BankMovement.ChequeDueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChequeDueDateNull() {
                this[this.tableTbl_BankMovement.ChequeDueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddDateBankNull() {
                return this.IsNull(this.tableTbl_BankMovement.AddDateBankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddDateBankNull() {
                this[this.tableTbl_BankMovement.AddDateBankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeCollectionNoNull() {
                return this.IsNull(this.tableTbl_BankMovement.TradeCollectionNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeCollectionNoNull() {
                this[this.tableTbl_BankMovement.TradeCollectionNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddDateAccBankNull() {
                return this.IsNull(this.tableTbl_BankMovement.AddDateAccBankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddDateAccBankNull() {
                this[this.tableTbl_BankMovement.AddDateAccBankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankDueDateNull() {
                return this.IsNull(this.tableTbl_BankMovement.BankDueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankDueDateNull() {
                this[this.tableTbl_BankMovement.BankDueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتاريخ_الحركهNull() {
                return this.IsNull(this.tableTbl_BankMovement.تاريخ_الحركهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتاريخ_الحركهNull() {
                this[this.tableTbl_BankMovement.تاريخ_الحركهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتاريخ_الحقNull() {
                return this.IsNull(this.tableTbl_BankMovement.تاريخ_الحقColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتاريخ_الحقNull() {
                this[this.tableTbl_BankMovement.تاريخ_الحقColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isكود_البنكNull() {
                return this.IsNull(this.tableTbl_BankMovement.كود_البنكColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setكود_البنكNull() {
                this[this.tableTbl_BankMovement.كود_البنكColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isوصف_الحركهNull() {
                return this.IsNull(this.tableTbl_BankMovement.وصف_الحركهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setوصف_الحركهNull() {
                this[this.tableTbl_BankMovement.وصف_الحركهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isقيمة_التحويلNull() {
                return this.IsNull(this.tableTbl_BankMovement.قيمة_التحويلColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setقيمة_التحويلNull() {
                this[this.tableTbl_BankMovement.قيمة_التحويلColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isنوع_العمليةNull() {
                return this.IsNull(this.tableTbl_BankMovement.نوع_العمليةColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setنوع_العمليةNull() {
                this[this.tableTbl_BankMovement.نوع_العمليةColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isرقم_الحسابNull() {
                return this.IsNull(this.tableTbl_BankMovement.رقم_الحسابColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setرقم_الحسابNull() {
                this[this.tableTbl_BankMovement.رقم_الحسابColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isنوع_الحسابNull() {
                return this.IsNull(this.tableTbl_BankMovement.نوع_الحسابColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setنوع_الحسابNull() {
                this[this.tableTbl_BankMovement.نوع_الحسابColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isالغرض_من_الحسابNull() {
                return this.IsNull(this.tableTbl_BankMovement.الغرض_من_الحسابColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setالغرض_من_الحسابNull() {
                this[this.tableTbl_BankMovement.الغرض_من_الحسابColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isالتصنيف_الرئيسيNull() {
                return this.IsNull(this.tableTbl_BankMovement.التصنيف_الرئيسيColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setالتصنيف_الرئيسيNull() {
                this[this.tableTbl_BankMovement.التصنيف_الرئيسيColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpr1Null() {
                return this.IsNull(this.tableTbl_BankMovement.Expr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpr1Null() {
                this[this.tableTbl_BankMovement.Expr1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Tbl_CustmersTypeRow : global::System.Data.DataRow {
            
            private Tbl_CustmersTypeDataTable tableTbl_CustmersType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Tbl_CustmersTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTbl_CustmersType = ((Tbl_CustmersTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableTbl_CustmersType.IDColumn]));
                }
                set {
                    this[this.tableTbl_CustmersType.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableTbl_CustmersType.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Tbl_CustmersType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_CustmersType.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Accounting_GuidID {
                get {
                    try {
                        return ((int)(this[this.tableTbl_CustmersType.Accounting_GuidIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Accounting_GuidID\' in table \'Tbl_CustmersType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_CustmersType.Accounting_GuidIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Parent_ID {
                get {
                    try {
                        return ((int)(this[this.tableTbl_CustmersType.Parent_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Parent_ID\' in table \'Tbl_CustmersType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTbl_CustmersType.Parent_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElectronicPaymentNo {
                get {
                    try {
                        return ((bool)(this[this.tableTbl_CustmersType.IsElectronicPaymentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsElectronicPaymentNo\' in table \'Tbl_CustmersType\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTbl_CustmersType.IsElectronicPaymentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableTbl_CustmersType.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableTbl_CustmersType.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccounting_GuidIDNull() {
                return this.IsNull(this.tableTbl_CustmersType.Accounting_GuidIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccounting_GuidIDNull() {
                this[this.tableTbl_CustmersType.Accounting_GuidIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParent_IDNull() {
                return this.IsNull(this.tableTbl_CustmersType.Parent_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParent_IDNull() {
                this[this.tableTbl_CustmersType.Parent_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsElectronicPaymentNoNull() {
                return this.IsNull(this.tableTbl_CustmersType.IsElectronicPaymentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsElectronicPaymentNoNull() {
                this[this.tableTbl_CustmersType.IsElectronicPaymentNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DTBElectronicPayAuditRow : global::System.Data.DataRow {
            
            private DTBElectronicPayAuditDataTable tableDTBElectronicPayAudit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DTBElectronicPayAuditRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDTBElectronicPayAudit = ((DTBElectronicPayAuditDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    return ((long)(this[this.tableDTBElectronicPayAudit.IDColumn]));
                }
                set {
                    this[this.tableDTBElectronicPayAudit.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime تاريخ_الحركه {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDTBElectronicPayAudit.تاريخ_الحركهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تاريخ_الحركه\' in table \'DTBElectronicPayAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTBElectronicPayAudit.تاريخ_الحركهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime تاريخ_الحق {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDTBElectronicPayAudit.تاريخ_الحقColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تاريخ_الحق\' in table \'DTBElectronicPayAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTBElectronicPayAudit.تاريخ_الحقColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string وصف_الحركه {
                get {
                    try {
                        return ((string)(this[this.tableDTBElectronicPayAudit.وصف_الحركهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'وصف_الحركه\' in table \'DTBElectronicPayAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTBElectronicPayAudit.وصف_الحركهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string كود_الحركه {
                get {
                    try {
                        return ((string)(this[this.tableDTBElectronicPayAudit.كود_الحركهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'كود_الحركه\' in table \'DTBElectronicPayAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTBElectronicPayAudit.كود_الحركهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime تاريخ_المراجعه {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDTBElectronicPayAudit.تاريخ_المراجعهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تاريخ_المراجعه\' in table \'DTBElectronicPayAudit\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDTBElectronicPayAudit.تاريخ_المراجعهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string الملاحظه {
                get {
                    try {
                        return ((string)(this[this.tableDTBElectronicPayAudit.الملاحظهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'الملاحظه\' in table \'DTBElectronicPayAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTBElectronicPayAudit.الملاحظهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime تاريخ_التعديل {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDTBElectronicPayAudit.تاريخ_التعديلColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'تاريخ_التعديل\' in table \'DTBElectronicPayAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTBElectronicPayAudit.تاريخ_التعديلColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal قيمة_الحركه {
                get {
                    try {
                        return ((decimal)(this[this.tableDTBElectronicPayAudit.قيمة_الحركهColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'قيمة_الحركه\' in table \'DTBElectronicPayAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTBElectronicPayAudit.قيمة_الحركهColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string البنك {
                get {
                    try {
                        return ((string)(this[this.tableDTBElectronicPayAudit.البنكColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'البنك\' in table \'DTBElectronicPayAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTBElectronicPayAudit.البنكColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdate {
                get {
                    try {
                        return ((bool)(this[this.tableDTBElectronicPayAudit.IsUpdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsUpdate\' in table \'DTBElectronicPayAudit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTBElectronicPayAudit.IsUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتاريخ_الحركهNull() {
                return this.IsNull(this.tableDTBElectronicPayAudit.تاريخ_الحركهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتاريخ_الحركهNull() {
                this[this.tableDTBElectronicPayAudit.تاريخ_الحركهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتاريخ_الحقNull() {
                return this.IsNull(this.tableDTBElectronicPayAudit.تاريخ_الحقColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتاريخ_الحقNull() {
                this[this.tableDTBElectronicPayAudit.تاريخ_الحقColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isوصف_الحركهNull() {
                return this.IsNull(this.tableDTBElectronicPayAudit.وصف_الحركهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setوصف_الحركهNull() {
                this[this.tableDTBElectronicPayAudit.وصف_الحركهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isكود_الحركهNull() {
                return this.IsNull(this.tableDTBElectronicPayAudit.كود_الحركهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setكود_الحركهNull() {
                this[this.tableDTBElectronicPayAudit.كود_الحركهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتاريخ_المراجعهNull() {
                return this.IsNull(this.tableDTBElectronicPayAudit.تاريخ_المراجعهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتاريخ_المراجعهNull() {
                this[this.tableDTBElectronicPayAudit.تاريخ_المراجعهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsالملاحظهNull() {
                return this.IsNull(this.tableDTBElectronicPayAudit.الملاحظهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetالملاحظهNull() {
                this[this.tableDTBElectronicPayAudit.الملاحظهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isتاريخ_التعديلNull() {
                return this.IsNull(this.tableDTBElectronicPayAudit.تاريخ_التعديلColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setتاريخ_التعديلNull() {
                this[this.tableDTBElectronicPayAudit.تاريخ_التعديلColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isقيمة_الحركهNull() {
                return this.IsNull(this.tableDTBElectronicPayAudit.قيمة_الحركهColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setقيمة_الحركهNull() {
                this[this.tableDTBElectronicPayAudit.قيمة_الحركهColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsالبنكNull() {
                return this.IsNull(this.tableDTBElectronicPayAudit.البنكColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetالبنكNull() {
                this[this.tableDTBElectronicPayAudit.البنكColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsUpdateNull() {
                return this.IsNull(this.tableDTBElectronicPayAudit.IsUpdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsUpdateNull() {
                this[this.tableDTBElectronicPayAudit.IsUpdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Tbl_MovementBankTypeRowChangeEvent : global::System.EventArgs {
            
            private Tbl_MovementBankTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_MovementBankTypeRowChangeEvent(Tbl_MovementBankTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_MovementBankTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataTable2RowChangeEvent : global::System.EventArgs {
            
            private DataTable2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2RowChangeEvent(DataTable2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataTable13RowChangeEvent : global::System.EventArgs {
            
            private DataTable13Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable13RowChangeEvent(DataTable13Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable13Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Tbl_BankStringCHeqCashRowChangeEvent : global::System.EventArgs {
            
            private Tbl_BankStringCHeqCashRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankStringCHeqCashRowChangeEvent(Tbl_BankStringCHeqCashRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankStringCHeqCashRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Tbl_BankMovementRowChangeEvent : global::System.EventArgs {
            
            private Tbl_BankMovementRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankMovementRowChangeEvent(Tbl_BankMovementRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_BankMovementRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Tbl_CustmersTypeRowChangeEvent : global::System.EventArgs {
            
            private Tbl_CustmersTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_CustmersTypeRowChangeEvent(Tbl_CustmersTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Tbl_CustmersTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DTBElectronicPayAuditRowChangeEvent : global::System.EventArgs {
            
            private DTBElectronicPayAuditRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DTBElectronicPayAuditRowChangeEvent(DTBElectronicPayAuditRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DTBElectronicPayAuditRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FinancialSysApp.BankTransmentDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DataTable1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataTable1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DataTable1";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("BankID", "BankID");
            tableMapping.ColumnMappings.Add("BankAccID", "BankAccID");
            tableMapping.ColumnMappings.Add("MovementCode", "MovementCode");
            tableMapping.ColumnMappings.Add("FisicalYeariD", "FisicalYeariD");
            tableMapping.ColumnMappings.Add("تاريخ الحركه", "تاريخ الحركه");
            tableMapping.ColumnMappings.Add("تاريخ الحق", "تاريخ الحق");
            tableMapping.ColumnMappings.Add("كود البنك", "كود البنك");
            tableMapping.ColumnMappings.Add("وصف الحركه", "وصف الحركه");
            tableMapping.ColumnMappings.Add("قيمة التحويل", "قيمة التحويل");
            tableMapping.ColumnMappings.Add("نوع العمليه", "نوع العمليه");
            tableMapping.ColumnMappings.Add("الرصيد", "الرصيد");
            tableMapping.ColumnMappings.Add("البنك", "البنك");
            tableMapping.ColumnMappings.Add("رقم الحساب", "رقم الحساب");
            tableMapping.ColumnMappings.Add("نوع الحساب", "نوع الحساب");
            tableMapping.ColumnMappings.Add("الغرض من الحساب", "الغرض من الحساب");
            tableMapping.ColumnMappings.Add("التصنيف الرئيسي", "التصنيف الرئيسي");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("MoveType1", "MoveType1");
            tableMapping.ColumnMappings.Add("MoveType2", "MoveType2");
            tableMapping.ColumnMappings.Add("IsSelectedType", "IsSelectedType");
            tableMapping.ColumnMappings.Add("BankCheqID", "BankCheqID");
            tableMapping.ColumnMappings.Add("DepositCashID", "DepositCashID");
            tableMapping.ColumnMappings.Add("C1", "C1");
            tableMapping.ColumnMappings.Add("IsCollected", "IsCollected");
            tableMapping.ColumnMappings.Add("BranchId", "BranchId");
            tableMapping.ColumnMappings.Add("TradeCode", "TradeCode");
            tableMapping.ColumnMappings.Add("TradeMoveType", "TradeMoveType");
            tableMapping.ColumnMappings.Add("DailyDate", "DailyDate");
            tableMapping.ColumnMappings.Add("تصنيف_العملاء", "تصنيف_العملاء");
            tableMapping.ColumnMappings.Add("الفرع", "الفرع");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[48];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2) AND (Tbl_" +
                "BankMovement.BankID = @p3)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.BranchId " +
                "= @PBranchId)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBranchId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BranchId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.TradeMove" +
                "Type = @PTMtype)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTMtype", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TradeMoveType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.DailyDate" +
                " >= @PD1) AND \r\n                         (Tbl_BankMovement.DailyDate <= @PD2)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PD1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PD2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.DailyDate" +
                " >= @P1Date) AND \r\n                         (Tbl_BankMovement.DailyDate <= @P2Da" +
                "te) AND (Tbl_BankMovement.MoveDat >= @PMoveDate1) AND (Tbl_BankMovement.MoveDat " +
                "<= @PMoveDate2)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P1Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P2Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMoveDate1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMoveDate2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.MoveDat >" +
                "= @P1Date) AND \r\n                         (Tbl_BankMovement.MoveDat <= @P2Date)";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P1Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P2Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\n\r\nWHERE       " +
                " (Tbl_BankMovement.TransferValue >= @PValue) AND (Tbl_BankMovement.MoveType1 = @" +
                "PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvType1) AND (Tbl_BankMovement.Debi" +
                "tCredit = N\'دائن\') AND \r\n                         (Tbl_BankMovement.TransferValu" +
                "e <= @P1Value)";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PValue", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 3, "قيمة التحويل", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P1Value", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 3, "قيمة التحويل", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = 5) AND (Tbl_BankMovement.MoveType2 = 15) AND (Tbl_B" +
                "ankMovement.MovementCode = @PMvCode)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvCode", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MovementCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\n\r\nWHERE       " +
                " (Tbl_BankMovement.TradeCode = @PTradeCode) AND (Tbl_BankMovement.MoveType1 = 5)" +
                " AND (Tbl_BankMovement.MoveType2 = 15) AND (Tbl_BankMovement.DebitCredit = N\'دائ" +
                "ن\')\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTradeCode", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "TradeCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.DescriptionNote LIKE N\'%\' + @pN + N\'%\') AND \r\n                         " +
                "(Tbl_BankMovement.BankAccID = @PAcc) AND (Tbl_BankMovement.DebitCredit = @pKndPr" +
                "ocess)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pN", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "وصف الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pKndProcess", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "نوع العمليه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.C1, Tbl_BankMovement.BankCheqID" +
                ", Tbl_BankMovement.DepositCashID, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.DescriptionNote LIKE N\'%\' + @pN + N\'%\') AND \r\n                         " +
                "(Tbl_BankMovement.BankAccID = @Pacc) \r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pN", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "وصف الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pacc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.BankAccID = @PAcc) AND (Tbl_BankMovement.IsCollected = 0) AND \r\n       " +
                "                  (Tbl_BankMovement.IsSelectedType = 0)\r\nORDER BY [تاريخ الحركه]" +
                "";
            this._commandCollection[11].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[12].Connection = this.Connection;
            this._commandCollection[12].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.BankAccID = @PAcc) AND \r\n                         (Tbl_BankMovement.Mov" +
                "eType1 = @PMovType1) AND (Tbl_BankMovement.MoveType2 = @PMovType2) AND (Tbl_Bank" +
                "Movement.IsCollected = 0) AND (Tbl_BankMovement.IsSelectedType = 1)\r\nORDER BY [ت" +
                "اريخ الحركه]";
            this._commandCollection[12].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMovType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMovType2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[13].Connection = this.Connection;
            this._commandCollection[13].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.IsCollected = 0) AND (Tbl_BankMovement.IsSelectedType = 1) AND \r\n      " +
                "                   (Tbl_BankMovement.BankAccID = @PBnkAcc)\r\nORDER BY [تاريخ الحر" +
                "كه]";
            this._commandCollection[13].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBnkAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[14] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[14].Connection = this.Connection;
            this._commandCollection[14].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1\r\nFROM            Tbl_MovementBankType AS Tbl_Mo" +
                "vementBankType_1 RIGHT OUTER JOIN\r\n                         Tbl_BankMovement LEF" +
                "T OUTER JOIN\r\n                         Tbl_MovementBankType ON Tbl_BankMovement." +
                "MoveType2 = Tbl_MovementBankType.ID ON Tbl_MovementBankType_1.ID = Tbl_BankMovem" +
                "ent.MoveType1 LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose " +
                "RIGHT OUTER JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankP" +
                "urpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_Ac" +
                "countsBank.ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON " +
                "Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n  " +
                "                       Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHER" +
                "E        (Tbl_BankMovement.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2)" +
                " AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_BankMovement.BankAccID = @p4) AND " +
                "(Tbl_BankMovement.TransferValue = @V4) AND \r\n                         (Tbl_BankM" +
                "ovement.DebitCredit = @PKndPrcs)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[14].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[14].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[14].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[14].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[14].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[14].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@V4", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 3, "قيمة التحويل", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[14].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PKndPrcs", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "نوع العمليه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[15] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[15].Connection = this.Connection;
            this._commandCollection[15].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.C1, Tbl_BankMovement.BankCheqID" +
                ", Tbl_BankMovement.DepositCashID, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.DescriptionNote LIKE N\'%\' + @pN + N\'%\') AND \r\n                         " +
                "(Tbl_BankMovement.BankAccID = @PAcc)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[15].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[15].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[15].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[15].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[15].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pN", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "وصف الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[15].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[16] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[16].Connection = this.Connection;
            this._commandCollection[16].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.IsCollected = 0) AND (Tbl_BankMovement.IsSelectedType = 0)\r\nORDER BY [ت" +
                "اريخ الحركه]";
            this._commandCollection[16].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[16].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[16].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[16].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[17] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[17].Connection = this.Connection;
            this._commandCollection[17].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.IsCollected = 0) AND (Tbl_BankMovement.IsSelectedType = 1)\r\nORDER BY [ت" +
                "اريخ الحركه]";
            this._commandCollection[17].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[17].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[17].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[17].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[18] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[18].Connection = this.Connection;
            this._commandCollection[18].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.MoveType1 = @PMovType1) AND \r\n                         (Tbl_BankMovemen" +
                "t.MoveType2 = @PMovType2) AND (Tbl_BankMovement.IsCollected = 0) AND (Tbl_BankMo" +
                "vement.IsSelectedType = 1)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[18].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[18].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[18].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[18].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[18].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMovType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[18].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMovType2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[19] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[19].Connection = this.Connection;
            this._commandCollection[19].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.IsCollected = 0) AND (Tbl_BankMovement.IsSelectedType = 1) AND \r\n      " +
                "                   (Tbl_BankMovement.BankAccID = @PBnkAcc) AND (Tbl_BankMovement" +
                ".MoveType1 = @PType1) AND (Tbl_BankMovement.MoveType2 = @PType2)\r\nORDER BY [تاري" +
                "خ الحركه]";
            this._commandCollection[19].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[19].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[19].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[19].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[19].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBnkAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[19].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[19].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PType2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[20] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[20].Connection = this.Connection;
            this._commandCollection[20].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.IsCollected = 0) AND (Tbl_BankMovement.IsSelectedType = 1) AND \r\n      " +
                "                   (Tbl_BankMovement.BankAccID = @PBnkAcc) AND (Tbl_BankMovement" +
                ".MoveType1 = @PType1)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[20].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[20].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[20].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[20].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[20].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBnkAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[20].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[21] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[21].Connection = this.Connection;
            this._commandCollection[21].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.BranchId " +
                "= @PBranchId) AND \r\n                         (Tbl_BankMovement.MoveDat >= @PMovD" +
                "ate1) AND (Tbl_BankMovement.MoveDat <= @PMovDate2)";
            this._commandCollection[21].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[21].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[21].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[21].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBranchId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BranchId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[21].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMovDate1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[21].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMovDate2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[22] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[22].Connection = this.Connection;
            this._commandCollection[22].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.BranchId " +
                "= @PBranchId) AND \r\n                         (Tbl_BankMovement.DailyDate >= @PDa" +
                "ilyDate1) AND (Tbl_BankMovement.DailyDate <= @PDailyDate2)";
            this._commandCollection[22].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[22].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[22].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[22].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBranchId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BranchId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[22].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PDailyDate1", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[22].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PDailyDate2", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[23] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[23].Connection = this.Connection;
            this._commandCollection[23].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], \r\n                         Tbl_BankMovement.DescriptionNote AS [وصف " +
                "الحركه], Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, \r\n                         Tbl_BankMovement.BankAccID, Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_Acco" +
                "untsBank.AccountBankNo AS [رقم الحساب], \r\n                         Tbl_AccoiuntB" +
                "ankKind.Name AS [نوع الحساب], Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب]," +
                " Tbl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tb" +
                "l_BankMovement.MoveType1, \r\n                         Tbl_BankMovement.MoveType2," +
                " Tbl_BankMovement.IsSelectedType, Tbl_BankMovement.C1, Tbl_BankMovement.BankCheq" +
                "ID, Tbl_BankMovement.DepositCashID, Tbl_BankMovement.IsCollected, \r\n            " +
                "             Tbl_BankCheques.AmountCheque, Tbl_BankCheques.ChequeNo, Tbl_BankChe" +
                "ques.ChequeDueDate, Tbl_BankCheques.AddDateBank, Tbl_BankCheques.TradeCollection" +
                "No, Tbl_BankCheques.AddDateAccBank, \r\n                         Tbl_BankCheques.B" +
                "ankDueDate\r\nFROM            Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n          " +
                "               Tbl_BankMovement RIGHT OUTER JOIN\r\n                         Tbl_A" +
                "ccountsBank LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_AccountsB" +
                "ank.BankID = Tbl_Banks.ID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank.ID LE" +
                "FT OUTER JOIN\r\n                         Tbl_MovementBankType ON Tbl_BankMovement" +
                ".MoveType2 = Tbl_MovementBankType.ID RIGHT OUTER JOIN\r\n                         " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = T" +
                "bl_MovementBankType_1.ID ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPur" +
                "poseID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Acc" +
                "ountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n         " +
                "                Tbl_Banks AS Tbl_Banks_1 ON Tbl_BankMovement.BankID = Tbl_Banks_" +
                "1.ID FULL OUTER JOIN\r\n                         Tbl_BankCheques ON Tbl_BankMoveme" +
                "nt.BankCheqID = Tbl_BankCheques.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p" +
                "1) AND (Tbl_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND" +
                " (Tbl_BankMovement.BankAccID = @PAcc) AND (Tbl_BankMovement.IsCollected = @pColl" +
                "ected) \r\n                         AND (Tbl_BankMovement.MoveType1 = @Ptype) AND " +
                "(Tbl_BankMovement.MoveType2 = @ptype1)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[23].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[23].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[23].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[23].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[23].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[23].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pCollected", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IsCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[23].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ptype", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[23].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ptype1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[24] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[24].Connection = this.Connection;
            this._commandCollection[24].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.DailyDate" +
                " >= @PDailyDte1) AND \r\n                         (Tbl_BankMovement.DailyDate <= @" +
                "PDailydate2) AND (Tbl_BankMovement.TradeMoveType = @PMovType)";
            this._commandCollection[24].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[24].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[24].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[24].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PDailyDte1", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[24].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PDailydate2", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[24].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMovType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TradeMoveType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[25] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[25].Connection = this.Connection;
            this._commandCollection[25].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.TradeMove" +
                "Type = @PTMtype) AND \r\n                         (Tbl_BankMovement.MoveDat >= @PM" +
                "ovDate1) AND (Tbl_BankMovement.MoveDat <= @PMovDate2)";
            this._commandCollection[25].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[25].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[25].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[25].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTMtype", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TradeMoveType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[25].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMovDate1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[25].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMovDate2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[26] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[26].Connection = this.Connection;
            this._commandCollection[26].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\n\r\nWHERE       " +
                " (Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvT" +
                "ype1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.DailyDa" +
                "te >= @P1Date) AND \r\n                         (Tbl_BankMovement.DailyDate <= @P2" +
                "Date) AND (Tbl_BankMovement.BranchId IS NULL) AND (Tbl_BankMovement.TradeCode IS" +
                " NULL)";
            this._commandCollection[26].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[26].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[26].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[26].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P1Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[26].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P2Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[27] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[27].Connection = this.Connection;
            this._commandCollection[27].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.DailyDate" +
                " >= @P1Date) AND \r\n                         (Tbl_BankMovement.DailyDate <= @P2Da" +
                "te) AND (Tbl_BankMovement.BranchId = @PBranch)";
            this._commandCollection[27].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[27].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[27].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[27].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P1Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[27].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P2Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[27].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBranch", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BranchId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[28] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[28].Connection = this.Connection;
            this._commandCollection[28].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.DailyDate" +
                " >= @P1Date) AND \r\n                         (Tbl_BankMovement.DailyDate <= @P2Da" +
                "te) AND (Tbl_BankMovement.BranchId = @PBranch) AND (Tbl_BankMovement.MovementCod" +
                "e = @PMovCode)";
            this._commandCollection[28].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[28].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[28].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[28].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P1Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[28].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P2Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[28].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBranch", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BranchId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[28].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMovCode", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MovementCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[29] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[29].Connection = this.Connection;
            this._commandCollection[29].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.DailyDate" +
                " >= @P1Date) AND \r\n                         (Tbl_BankMovement.DailyDate <= @P2Da" +
                "te) AND (Tbl_BankMovement.MoveDat >= @PMoveDate1) AND (Tbl_BankMovement.MoveDat " +
                "<= @PMoveDate2) AND (Tbl_BankMovement.TradeMoveType = @PMoveCustType)";
            this._commandCollection[29].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[29].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[29].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[29].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P1Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[29].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P2Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[29].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMoveDate1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[29].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMoveDate2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[29].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMoveCustType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TradeMoveType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[30] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[30].Connection = this.Connection;
            this._commandCollection[30].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvTyp" +
                "e1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.DailyDate" +
                " >= @P1Date) AND \r\n                         (Tbl_BankMovement.DailyDate <= @P2Da" +
                "te) AND (Tbl_BankMovement.MoveDat >= @PMoveDate1) AND (Tbl_BankMovement.MoveDat " +
                "<= @PMoveDate2) AND (Tbl_BankMovement.BranchId = @PBranch)";
            this._commandCollection[30].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[30].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[30].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[30].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P1Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[30].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P2Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "DailyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[30].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMoveDate1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[30].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMoveDate2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[30].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBranch", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BranchId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[31] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[31].Connection = this.Connection;
            this._commandCollection[31].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1\r\nFROM            Tbl_MovementBankType AS Tbl_Mo" +
                "vementBankType_1 RIGHT OUTER JOIN\r\n                         Tbl_BankMovement LEF" +
                "T OUTER JOIN\r\n                         Tbl_MovementBankType ON Tbl_BankMovement." +
                "MoveType2 = Tbl_MovementBankType.ID ON Tbl_MovementBankType_1.ID = Tbl_BankMovem" +
                "ent.MoveType1 LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose " +
                "RIGHT OUTER JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankP" +
                "urpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_Ac" +
                "countsBank.ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON " +
                "Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n  " +
                "                       Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHER" +
                "E        (Tbl_BankMovement.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2)" +
                " AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_BankMovement.BankAccID = @p4)\r\nORD" +
                "ER BY [تاريخ الحركه]";
            this._commandCollection[31].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[31].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[31].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[31].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[31].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[32] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[32].Connection = this.Connection;
            this._commandCollection[32].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1\r\nFROM            Tbl_MovementBankType AS Tbl_Mo" +
                "vementBankType_1 RIGHT OUTER JOIN\r\n                         Tbl_BankMovement LEF" +
                "T OUTER JOIN\r\n                         Tbl_MovementBankType ON Tbl_BankMovement." +
                "MoveType2 = Tbl_MovementBankType.ID ON Tbl_MovementBankType_1.ID = Tbl_BankMovem" +
                "ent.MoveType1 LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose " +
                "RIGHT OUTER JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankP" +
                "urpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_Ac" +
                "countsBank.ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON " +
                "Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n  " +
                "                       Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHER" +
                "E        (Tbl_BankMovement.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2)" +
                " AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_BankMovement.BankAccID = @p4) AND " +
                "(Tbl_BankMovement.BankCheqID = 0) AND \r\n                         (Tbl_BankMoveme" +
                "nt.DepositCashID = 0)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[32].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[32].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[32].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[32].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[32].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[33] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[33].Connection = this.Connection;
            this._commandCollection[33].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1\r\nFROM            Tbl_MovementBankType AS Tbl_Mo" +
                "vementBankType_1 RIGHT OUTER JOIN\r\n                         Tbl_BankMovement LEF" +
                "T OUTER JOIN\r\n                         Tbl_MovementBankType ON Tbl_BankMovement." +
                "MoveType2 = Tbl_MovementBankType.ID ON Tbl_MovementBankType_1.ID = Tbl_BankMovem" +
                "ent.MoveType1 LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose " +
                "RIGHT OUTER JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankP" +
                "urpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_Ac" +
                "countsBank.ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON " +
                "Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n  " +
                "                       Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHER" +
                "E        (Tbl_BankMovement.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2)" +
                " AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_BankMovement.BankAccID = @p4) AND " +
                "(Tbl_BankMovement.BankCheqID > 0) AND \r\n                         (Tbl_BankMoveme" +
                "nt.IsSelectedType = 0) AND (Tbl_BankMovement.IsSelectedType = 0)\r\nORDER BY [تاري" +
                "خ الحركه]";
            this._commandCollection[33].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[33].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[33].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[33].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[33].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[34] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[34].Connection = this.Connection;
            this._commandCollection[34].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1\r\nFROM            Tbl_MovementBankType AS Tbl_Mo" +
                "vementBankType_1 RIGHT OUTER JOIN\r\n                         Tbl_BankMovement LEF" +
                "T OUTER JOIN\r\n                         Tbl_MovementBankType ON Tbl_BankMovement." +
                "MoveType2 = Tbl_MovementBankType.ID ON Tbl_MovementBankType_1.ID = Tbl_BankMovem" +
                "ent.MoveType1 LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose " +
                "RIGHT OUTER JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankP" +
                "urpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_Ac" +
                "countsBank.ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON " +
                "Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n  " +
                "                       Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHER" +
                "E        (Tbl_BankMovement.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2)" +
                " AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_BankMovement.BankAccID = @p4) AND " +
                "(Tbl_BankMovement.MoveType1 IS NOT NULL) \r\n                         AND (Tbl_Ban" +
                "kMovement.MoveType2 IS NOT NULL)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[34].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[34].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[34].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[34].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[34].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[35] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[35].Connection = this.Connection;
            this._commandCollection[35].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.C1, Tbl_BankMovement.BankCheqID" +
                ", Tbl_BankMovement.DepositCashID, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.DescriptionNote LIKE N\'%\' + @pN + N\'%\') AND \r\n                         " +
                "(Tbl_BankMovement.BankAccID = @PAcc) AND (Tbl_BankMovement.MoveType1 = @pMoveTyp" +
                ") AND (Tbl_BankMovement.MoveType2 = @pMoveTyp1)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[35].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[35].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[35].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[35].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[35].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pN", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "وصف الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[35].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[35].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pMoveTyp", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[35].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pMoveTyp1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[36] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[36].Connection = this.Connection;
            this._commandCollection[36].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1\r\nFROM            Tbl_MovementBankType AS Tbl_Mo" +
                "vementBankType_1 RIGHT OUTER JOIN\r\n                         Tbl_BankMovement LEF" +
                "T OUTER JOIN\r\n                         Tbl_MovementBankType ON Tbl_BankMovement." +
                "MoveType2 = Tbl_MovementBankType.ID ON Tbl_MovementBankType_1.ID = Tbl_BankMovem" +
                "ent.MoveType1 LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose " +
                "RIGHT OUTER JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankP" +
                "urpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_Ac" +
                "countsBank.ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON " +
                "Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n  " +
                "                       Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHER" +
                "E        (Tbl_BankMovement.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2)" +
                " AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_BankMovement.BankAccID = @p4) AND " +
                "(Tbl_BankMovement.MoveType1 IS NULL) AND \r\n                         (Tbl_BankMov" +
                "ement.MoveType2 IS NULL)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[36].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[36].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[36].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[36].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[36].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[37] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[37].Connection = this.Connection;
            this._commandCollection[37].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.MoveType1 = 5) AND (Tbl_BankMovement.MoveType2 = 15) AND (Tbl_B" +
                "ankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.DescriptionNote LIKE N\'" +
                "%\' + @PDescNote + N\'%\')\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[37].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[37].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PDescNote", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "وصف الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[38] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[38].Connection = this.Connection;
            this._commandCollection[38].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.BranchId IS NULL) AND (Tbl_BankMovement.TradeCode IS NULL) AND " +
                "(Tbl_BankMovement.MoveType1 = 5) AND (Tbl_BankMovement.MoveType2 = 15) AND (Tbl_" +
                "BankMovement.DebitCredit = N\'دائن\')\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[38].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[39] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[39].Connection = this.Connection;
            this._commandCollection[39].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1\r\nFROM            Tbl_MovementBankType AS Tbl_Mo" +
                "vementBankType_1 RIGHT OUTER JOIN\r\n                         Tbl_BankMovement LEF" +
                "T OUTER JOIN\r\n                         Tbl_MovementBankType ON Tbl_BankMovement." +
                "MoveType2 = Tbl_MovementBankType.ID ON Tbl_MovementBankType_1.ID = Tbl_BankMovem" +
                "ent.MoveType1 LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose " +
                "RIGHT OUTER JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankP" +
                "urpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_Ac" +
                "countsBank.ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON " +
                "Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n  " +
                "                       Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHER" +
                "E        (Tbl_BankMovement.ID = @pId)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[39].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[39].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[40] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[40].Connection = this.Connection;
            this._commandCollection[40].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (" +
                "Tbl_BankMovement.BranchId IS NULL) AND (Tbl_BankMovement.MoveType1 = 5) AND (Tbl" +
                "_BankMovement.MoveType2 = 15) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND \r" +
                "\n                         (Tbl_BankMovement.MovementCode = @PMvCode)\r\nORDER BY [" +
                "تاريخ الحركه]";
            this._commandCollection[40].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[40].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvCode", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MovementCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[41] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[41].Connection = this.Connection;
            this._commandCollection[41].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\n\r\nWHERE       " +
                " (Tbl_BankMovement.MoveType1 = @PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvT" +
                "ype1) AND (Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.MoveDat" +
                " >= @P1Date) AND \r\n                         (Tbl_BankMovement.MoveDat <= @P2Date" +
                ") AND (Tbl_BankMovement.BranchId IS NULL) AND (Tbl_BankMovement.TradeMoveType IS" +
                " NULL)";
            this._commandCollection[41].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[41].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[41].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[41].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P1Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[41].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P2Date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[42] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[42].Connection = this.Connection;
            this._commandCollection[42].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\n\r\nWHERE       " +
                " (Tbl_BankMovement.TransferValue >= @PValue) AND (Tbl_BankMovement.MoveType1 = @" +
                "PMvType) AND (Tbl_BankMovement.MoveType2 = @PMvType1) AND (Tbl_BankMovement.Debi" +
                "tCredit = N\'دائن\') AND \r\n                         (Tbl_BankMovement.BranchId IS " +
                "NULL) AND (Tbl_BankMovement.TradeMoveType IS NULL) AND (Tbl_BankMovement.Transfe" +
                "rValue <= @P1Value)";
            this._commandCollection[42].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[42].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PValue", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 3, "قيمة التحويل", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[42].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[42].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMvType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[42].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P1Value", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 3, "قيمة التحويل", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[43] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[43].Connection = this.Connection;
            this._commandCollection[43].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.TradeMoveType, Tbl_BankMovement.DailyDate, Tbl_CustmersType.Name AS تصنيف_الع" +
                "ملاء, Tbl_Management.BrancheName AS الفرع\r\nFROM            Tbl_CustmersType RIGH" +
                "T OUTER JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n       " +
                "                  Tbl_Management ON Tbl_BankMovement.BranchId = Tbl_Management.I" +
                "D ON Tbl_CustmersType.ID = Tbl_BankMovement.TradeMoveType LEFT OUTER JOIN\r\n     " +
                "                    Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_Mov" +
                "ementBankType.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType " +
                "AS Tbl_MovementBankType_1 ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank" +
                ".ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON Tbl_Accoun" +
                "tsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n            " +
                "             Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\n\r\nWHERE       " +
                " (Tbl_BankMovement.MoveDat >= @pMVdateF) AND (Tbl_BankMovement.MoveDat <= @pMVda" +
                "teT) AND (Tbl_BankMovement.BankID = @pBnk) AND (Tbl_BankMovement.BankAccID = @PA" +
                "ccBnk)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[43].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[43].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pMVdateF", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[43].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pMVdateT", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[43].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pBnk", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[43].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAccBnk", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[44] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[44].Connection = this.Connection;
            this._commandCollection[44].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1\r\nFROM            Tbl_MovementBankType AS Tbl_Mo" +
                "vementBankType_1 RIGHT OUTER JOIN\r\n                         Tbl_BankMovement LEF" +
                "T OUTER JOIN\r\n                         Tbl_MovementBankType ON Tbl_BankMovement." +
                "MoveType2 = Tbl_MovementBankType.ID ON Tbl_MovementBankType_1.ID = Tbl_BankMovem" +
                "ent.MoveType1 LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose " +
                "RIGHT OUTER JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankP" +
                "urpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_Ac" +
                "countsBank.ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON " +
                "Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n  " +
                "                       Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHER" +
                "E        (Tbl_BankMovement.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2)" +
                " AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_BankMovement.DebitCredit LIKE N\'%\'" +
                " + @pN + N\'%\') AND \r\n                         (Tbl_BankMovement.BankAccID = @pAc" +
                "cBnk) AND (Tbl_BankMovement.MoveType1 IS  NULL) AND (Tbl_BankMovement.MoveType2 " +
                "IS  NULL)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[44].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[44].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[44].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[44].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[44].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "نوع العمليه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[44].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pAccBnk", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[45] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[45].Connection = this.Connection;
            this._commandCollection[45].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1\r\nFROM            Tbl_MovementBankType AS Tbl_Mo" +
                "vementBankType_1 RIGHT OUTER JOIN\r\n                         Tbl_BankMovement LEF" +
                "T OUTER JOIN\r\n                         Tbl_MovementBankType ON Tbl_BankMovement." +
                "MoveType2 = Tbl_MovementBankType.ID ON Tbl_MovementBankType_1.ID = Tbl_BankMovem" +
                "ent.MoveType1 LEFT OUTER JOIN\r\n                         Tbl_AccountsBankPurpose " +
                "RIGHT OUTER JOIN\r\n                         Tbl_AccountsBank ON Tbl_AccountsBankP" +
                "urpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_Ac" +
                "countsBank.ID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBankKind ON " +
                "Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n  " +
                "                       Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID\r\nWHER" +
                "E        (Tbl_BankMovement.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2)" +
                " AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_BankMovement.DebitCredit LIKE N\'%\'" +
                " + @pN + N\'%\') AND \r\n                         (Tbl_BankMovement.BankAccID = @pAc" +
                "cBnk) AND (Tbl_BankMovement.MoveType1 IS NOT NULL) AND (Tbl_BankMovement.MoveTyp" +
                "e2 IS NOT NULL)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[45].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[45].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[45].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[45].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[45].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "نوع العمليه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[45].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pAccBnk", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[46] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[46].Connection = this.Connection;
            this._commandCollection[46].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], \r\n                         Tbl_BankMovement.DescriptionNote AS [وصف " +
                "الحركه], Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, \r\n                         Tbl_BankMovement.BankAccID, Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], \r\n                         Tbl_AccoiuntBan" +
                "kKind.Name AS [نوع الحساب], Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, \r\n                         Tbl_BankMovement.MoveType2, T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.C1, Tbl_BankMovement.BankCheqID" +
                ", Tbl_BankMovement.DepositCashID, Tbl_BankMovement.IsCollected\r\nFROM            " +
                "Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n               " +
                "          Tbl_BankMovement LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_Movemen" +
                "tBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                         Tbl_Acc" +
                "ountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_B" +
                "ankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                   " +
                "      Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntB" +
                "ankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_BankMoveme" +
                "nt.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AND (Tb" +
                "l_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl_Bank" +
                "Movement.DescriptionNote LIKE N\'%\' + @pN + N\'%\')\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[46].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[46].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[46].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[46].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[46].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pN", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "وصف الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[47] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[47].Connection = this.Connection;
            this._commandCollection[47].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Name AS البنك, Tbl_Accoun" +
                "tsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب]," +
                " \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب], T" +
                "bl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tbl_" +
                "BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                         T" +
                "bl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.De" +
                "positCashID, Tbl_BankMovement.C1, Tbl_BankMovement.IsCollected, Tbl_BankMovement" +
                ".BranchId, \r\n                         Tbl_BankMovement.TradeCode, Tbl_BankMoveme" +
                "nt.DailyDate, Tbl_BankMovement.TradeMoveType\r\nFROM            Tbl_MovementBankTy" +
                "pe AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n                         Tbl_Bank" +
                "Movement LEFT OUTER JOIN\r\n                         Tbl_MovementBankType ON Tbl_B" +
                "ankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_MovementBankType_1.ID = T" +
                "bl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n                         Tbl_Accounts" +
                "BankPurpose RIGHT OUTER JOIN\r\n                         Tbl_AccountsBank ON Tbl_A" +
                "ccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAc" +
                "cID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                         Tbl_Accoiunt" +
                "BankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OU" +
                "TER JOIN\r\n                         Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Ba" +
                "nks.ID\r\nWHERE        (Tbl_BankMovement.BranchId IS NULL) AND (Tbl_BankMovement.T" +
                "radeCode = @PTradeCode) AND (Tbl_BankMovement.MoveType1 = 5) AND (Tbl_BankMoveme" +
                "nt.MoveType2 = 15) AND \r\n                         (Tbl_BankMovement.DebitCredit " +
                "= N\'دائن\')\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[47].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[47].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTradeCode", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "TradeCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByMoveDate(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BankTransmentDS.DataTable1DataTable GetData(string p1, string p2, global::System.Nullable<int> p3) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAllBraches(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<int> PBranchId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PBranchId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PBranchId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy27(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<int> PBranchId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PBranchId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PBranchId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAllCustomerTypeMove(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<int> PTMtype) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PTMtype.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PTMtype.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy28(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<int> PTMtype) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PTMtype.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PTMtype.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAllDailyMove(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string PD1, string PD2) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PD1 == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PD1));
            }
            if ((PD2 == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(PD2));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy26(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string PD1, string PD2) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PD1 == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PD1));
            }
            if ((PD2 == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(PD2));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAllDailyWithMoveDate(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date, string PMoveDate1, string PMoveDate2) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            if ((PMoveDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(PMoveDate1));
            }
            if ((PMoveDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(PMoveDate2));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy34(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date, string PMoveDate1, string PMoveDate2) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            if ((PMoveDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(PMoveDate1));
            }
            if ((PMoveDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(PMoveDate2));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAllMoveDate(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy23(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAllMvAmount(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<decimal> PValue, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<decimal> P1Value) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((PValue.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(PValue.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((P1Value.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((decimal)(P1Value.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy19(global::System.Nullable<decimal> PValue, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<decimal> P1Value) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((PValue.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(PValue.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((P1Value.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((decimal)(P1Value.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAllMvCode(BankTransmentDS.DataTable1DataTable dataTable, string PMvCode) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((PMvCode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PMvCode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy22(string PMvCode) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((PMvCode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PMvCode));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAllTradeCode(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<long> PTradeCode) {
            this.Adapter.SelectCommand = this.CommandCollection[8];
            if ((PTradeCode.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(PTradeCode.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy20(global::System.Nullable<long> PTradeCode) {
            this.Adapter.SelectCommand = this.CommandCollection[8];
            if ((PTradeCode.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(PTradeCode.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankAccBankSearchNote(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> PAcc, string pKndProcess) {
            this.Adapter.SelectCommand = this.CommandCollection[9];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pKndProcess == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pKndProcess));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy4(string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> PAcc, string pKndProcess) {
            this.Adapter.SelectCommand = this.CommandCollection[9];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pKndProcess == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pKndProcess));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankAccSearchNote(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> Pacc) {
            this.Adapter.SelectCommand = this.CommandCollection[10];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((Pacc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(Pacc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy12(string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> Pacc) {
            this.Adapter.SelectCommand = this.CommandCollection[10];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((Pacc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(Pacc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankAccTyping(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PAcc) {
            this.Adapter.SelectCommand = this.CommandCollection[11];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy42(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PAcc) {
            this.Adapter.SelectCommand = this.CommandCollection[11];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankAccTypingOK(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PAcc, global::System.Nullable<int> PMovType1, global::System.Nullable<int> PMovType2) {
            this.Adapter.SelectCommand = this.CommandCollection[12];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PMovType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PMovType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PMovType2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(PMovType2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy39(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PAcc, global::System.Nullable<int> PMovType1, global::System.Nullable<int> PMovType2) {
            this.Adapter.SelectCommand = this.CommandCollection[12];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PMovType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PMovType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PMovType2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(PMovType2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankAccTypingOkNotCollect(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PBnkAcc) {
            this.Adapter.SelectCommand = this.CommandCollection[13];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PBnkAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PBnkAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy44(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PBnkAcc) {
            this.Adapter.SelectCommand = this.CommandCollection[13];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PBnkAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PBnkAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankAccValue(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4, global::System.Nullable<decimal> V4, string PKndPrcs) {
            this.Adapter.SelectCommand = this.CommandCollection[14];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((V4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(V4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PKndPrcs == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(PKndPrcs));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy1(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4, global::System.Nullable<decimal> V4, string PKndPrcs) {
            this.Adapter.SelectCommand = this.CommandCollection[14];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((V4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(V4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PKndPrcs == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(PKndPrcs));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankIdAccSearchNote(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> PAcc) {
            this.Adapter.SelectCommand = this.CommandCollection[15];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy7(string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> PAcc) {
            this.Adapter.SelectCommand = this.CommandCollection[15];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankNotTyping(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3) {
            this.Adapter.SelectCommand = this.CommandCollection[16];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy41(string p1, string p2, global::System.Nullable<int> p3) {
            this.Adapter.SelectCommand = this.CommandCollection[16];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankTypingNotCollect(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3) {
            this.Adapter.SelectCommand = this.CommandCollection[17];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy43(string p1, string p2, global::System.Nullable<int> p3) {
            this.Adapter.SelectCommand = this.CommandCollection[17];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankTypingOK(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PMovType1, global::System.Nullable<int> PMovType2) {
            this.Adapter.SelectCommand = this.CommandCollection[18];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PMovType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PMovType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PMovType2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PMovType2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy40(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PMovType1, global::System.Nullable<int> PMovType2) {
            this.Adapter.SelectCommand = this.CommandCollection[18];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PMovType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PMovType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PMovType2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PMovType2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBnkAccType1Type2CollecteOk(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PBnkAcc, global::System.Nullable<int> PType1, global::System.Nullable<int> PType2) {
            this.Adapter.SelectCommand = this.CommandCollection[19];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PBnkAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PBnkAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PType2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(PType2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy46(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PBnkAcc, global::System.Nullable<int> PType1, global::System.Nullable<int> PType2) {
            this.Adapter.SelectCommand = this.CommandCollection[19];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PBnkAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PBnkAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PType2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(PType2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBnkAccType1TypingOkNotCollected(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PBnkAcc, global::System.Nullable<int> PType1) {
            this.Adapter.SelectCommand = this.CommandCollection[20];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PBnkAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PBnkAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy45(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PBnkAcc, global::System.Nullable<int> PType1) {
            this.Adapter.SelectCommand = this.CommandCollection[20];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PBnkAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PBnkAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBranchesWithMoveDate(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<int> PBranchId, string PMovDate1, string PMovDate2) {
            this.Adapter.SelectCommand = this.CommandCollection[21];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PBranchId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PBranchId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PMovDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(PMovDate1));
            }
            if ((PMovDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(PMovDate2));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy31(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<int> PBranchId, string PMovDate1, string PMovDate2) {
            this.Adapter.SelectCommand = this.CommandCollection[21];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PBranchId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PBranchId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PMovDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(PMovDate1));
            }
            if ((PMovDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(PMovDate2));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBranchWithDailyDate(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<int> PBranchId, global::System.Nullable<global::System.DateTime> PDailyDate1, global::System.Nullable<global::System.DateTime> PDailyDate2) {
            this.Adapter.SelectCommand = this.CommandCollection[22];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PBranchId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PBranchId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PDailyDate1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(PDailyDate1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PDailyDate2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(PDailyDate2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy32(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<int> PBranchId, global::System.Nullable<global::System.DateTime> PDailyDate1, global::System.Nullable<global::System.DateTime> PDailyDate2) {
            this.Adapter.SelectCommand = this.CommandCollection[22];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PBranchId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PBranchId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PDailyDate1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(PDailyDate1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PDailyDate2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(PDailyDate2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCollectedOrNoCollected(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PAcc, global::System.Nullable<bool> pCollected, global::System.Nullable<int> Ptype, global::System.Nullable<int> ptype1) {
            this.Adapter.SelectCommand = this.CommandCollection[23];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pCollected.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((bool)(pCollected.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Ptype.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(Ptype.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ptype1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(ptype1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy13(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PAcc, global::System.Nullable<bool> pCollected, global::System.Nullable<int> Ptype, global::System.Nullable<int> ptype1) {
            this.Adapter.SelectCommand = this.CommandCollection[23];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pCollected.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((bool)(pCollected.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Ptype.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(Ptype.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ptype1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(ptype1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCustomerTypewithDailyDate(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<global::System.DateTime> PDailyDte1, global::System.Nullable<global::System.DateTime> PDailydate2, global::System.Nullable<int> PMovType) {
            this.Adapter.SelectCommand = this.CommandCollection[24];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PDailyDte1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(PDailyDte1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PDailydate2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(PDailydate2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PMovType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PMovType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy30(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<global::System.DateTime> PDailyDte1, global::System.Nullable<global::System.DateTime> PDailydate2, global::System.Nullable<int> PMovType) {
            this.Adapter.SelectCommand = this.CommandCollection[24];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PDailyDte1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(PDailyDte1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PDailydate2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(PDailydate2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PMovType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PMovType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCustomerTypeWithMoveDate(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<int> PTMtype, string PMovDate1, string PMovDate2) {
            this.Adapter.SelectCommand = this.CommandCollection[25];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PTMtype.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PTMtype.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PMovDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(PMovDate1));
            }
            if ((PMovDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(PMovDate2));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy29(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<int> PTMtype, string PMovDate1, string PMovDate2) {
            this.Adapter.SelectCommand = this.CommandCollection[25];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PTMtype.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PTMtype.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PMovDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(PMovDate1));
            }
            if ((PMovDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(PMovDate2));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDailyDate(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<global::System.DateTime> P1Date, global::System.Nullable<global::System.DateTime> P2Date) {
            this.Adapter.SelectCommand = this.CommandCollection[26];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(P1Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((P2Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(P2Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy25(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<global::System.DateTime> P1Date, global::System.Nullable<global::System.DateTime> P2Date) {
            this.Adapter.SelectCommand = this.CommandCollection[26];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(P1Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((P2Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(P2Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDailywithBranch(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date, global::System.Nullable<int> PBranch) {
            this.Adapter.SelectCommand = this.CommandCollection[27];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            if ((PBranch.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PBranch.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy37(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date, global::System.Nullable<int> PBranch) {
            this.Adapter.SelectCommand = this.CommandCollection[27];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            if ((PBranch.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PBranch.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDailyWithBranchMovCode(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date, global::System.Nullable<int> PBranch, string PMovCode) {
            this.Adapter.SelectCommand = this.CommandCollection[28];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            if ((PBranch.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PBranch.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PMovCode == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(PMovCode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy38(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date, global::System.Nullable<int> PBranch, string PMovCode) {
            this.Adapter.SelectCommand = this.CommandCollection[28];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            if ((PBranch.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PBranch.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PMovCode == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(PMovCode));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDailyWithDatesTyping(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date, string PMoveDate1, string PMoveDate2, global::System.Nullable<int> PMoveCustType) {
            this.Adapter.SelectCommand = this.CommandCollection[29];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            if ((PMoveDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(PMoveDate1));
            }
            if ((PMoveDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(PMoveDate2));
            }
            if ((PMoveCustType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(PMoveCustType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy35(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date, string PMoveDate1, string PMoveDate2, global::System.Nullable<int> PMoveCustType) {
            this.Adapter.SelectCommand = this.CommandCollection[29];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            if ((PMoveDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(PMoveDate1));
            }
            if ((PMoveDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(PMoveDate2));
            }
            if ((PMoveCustType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(PMoveCustType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDailyWithMoveBranch(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date, string PMoveDate1, string PMoveDate2, global::System.Nullable<int> PBranch) {
            this.Adapter.SelectCommand = this.CommandCollection[30];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            if ((PMoveDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(PMoveDate1));
            }
            if ((PMoveDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(PMoveDate2));
            }
            if ((PBranch.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(PBranch.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy36(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date, string PMoveDate1, string PMoveDate2, global::System.Nullable<int> PBranch) {
            this.Adapter.SelectCommand = this.CommandCollection[30];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            if ((PMoveDate1 == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(PMoveDate1));
            }
            if ((PMoveDate2 == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(PMoveDate2));
            }
            if ((PBranch.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(PBranch.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDatesAccBankAll(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[31];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy8(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[31];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDatesBankAccBank(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[32];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[32];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDatesBankAccBankSp(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[33];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy5(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[33];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDatesBankAccTypeOk(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[34];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy9(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[34];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDatesbankAccTypesSearchnote(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> PAcc, global::System.Nullable<int> pMoveTyp, global::System.Nullable<int> pMoveTyp1) {
            this.Adapter.SelectCommand = this.CommandCollection[35];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pMoveTyp.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(pMoveTyp.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((pMoveTyp1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(pMoveTyp1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy14(string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> PAcc, global::System.Nullable<int> pMoveTyp, global::System.Nullable<int> pMoveTyp1) {
            this.Adapter.SelectCommand = this.CommandCollection[35];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pMoveTyp.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(pMoveTyp.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((pMoveTyp1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(pMoveTyp1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDatesBankAccTypNotOK(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[36];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy10(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[36];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDescriptionNote(BankTransmentDS.DataTable1DataTable dataTable, string PDescNote) {
            this.Adapter.SelectCommand = this.CommandCollection[37];
            if ((PDescNote == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PDescNote));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy33(string PDescNote) {
            this.Adapter.SelectCommand = this.CommandCollection[37];
            if ((PDescNote == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PDescNote));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByElectronicPayment(BankTransmentDS.DataTable1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[38];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy17() {
            this.Adapter.SelectCommand = this.CommandCollection[38];
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillById(BankTransmentDS.DataTable1DataTable dataTable, long pId) {
            this.Adapter.SelectCommand = this.CommandCollection[39];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(pId));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy6(long pId) {
            this.Adapter.SelectCommand = this.CommandCollection[39];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(pId));
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByMovCode(BankTransmentDS.DataTable1DataTable dataTable, string PMvCode) {
            this.Adapter.SelectCommand = this.CommandCollection[40];
            if ((PMvCode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PMvCode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy21(string PMvCode) {
            this.Adapter.SelectCommand = this.CommandCollection[40];
            if ((PMvCode == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PMvCode));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByMovDate(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date) {
            this.Adapter.SelectCommand = this.CommandCollection[41];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy24(global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, string P1Date, string P2Date) {
            this.Adapter.SelectCommand = this.CommandCollection[41];
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P1Date == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(P1Date));
            }
            if ((P2Date == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(P2Date));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByMvAmountType(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<decimal> PValue, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<decimal> P1Value) {
            this.Adapter.SelectCommand = this.CommandCollection[42];
            if ((PValue.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(PValue.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((P1Value.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((decimal)(P1Value.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy16(global::System.Nullable<decimal> PValue, global::System.Nullable<int> PMvType, global::System.Nullable<int> PMvType1, global::System.Nullable<decimal> P1Value) {
            this.Adapter.SelectCommand = this.CommandCollection[42];
            if ((PValue.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(PValue.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMvType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PMvType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PMvType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PMvType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((P1Value.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((decimal)(P1Value.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByMvDatesBnkAcc(BankTransmentDS.DataTable1DataTable dataTable, string pMVdateF, string pMVdateT, global::System.Nullable<int> pBnk, global::System.Nullable<int> PAccBnk) {
            this.Adapter.SelectCommand = this.CommandCollection[43];
            if ((pMVdateF == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(pMVdateF));
            }
            if ((pMVdateT == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(pMVdateT));
            }
            if ((pBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(pBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAccBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAccBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy15(string pMVdateF, string pMVdateT, global::System.Nullable<int> pBnk, global::System.Nullable<int> PAccBnk) {
            this.Adapter.SelectCommand = this.CommandCollection[43];
            if ((pMVdateF == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(pMVdateF));
            }
            if ((pMVdateT == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(pMVdateT));
            }
            if ((pBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(pBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAccBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAccBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByProcessKindTypeNotOk(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> pAccBnk) {
            this.Adapter.SelectCommand = this.CommandCollection[44];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((pAccBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pAccBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy11(string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> pAccBnk) {
            this.Adapter.SelectCommand = this.CommandCollection[44];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((pAccBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pAccBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByProcessKindTypeOK(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> pAccBnk) {
            this.Adapter.SelectCommand = this.CommandCollection[45];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((pAccBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pAccBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy3(string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> pAccBnk) {
            this.Adapter.SelectCommand = this.CommandCollection[45];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((pAccBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pAccBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySearchNote(BankTransmentDS.DataTable1DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, string pN) {
            this.Adapter.SelectCommand = this.CommandCollection[46];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy2(string p1, string p2, global::System.Nullable<int> p3, string pN) {
            this.Adapter.SelectCommand = this.CommandCollection[46];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByTradeCode(BankTransmentDS.DataTable1DataTable dataTable, global::System.Nullable<long> PTradeCode) {
            this.Adapter.SelectCommand = this.CommandCollection[47];
            if ((PTradeCode.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(PTradeCode.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable1DataTable GetDataBy18(global::System.Nullable<long> PTradeCode) {
            this.Adapter.SelectCommand = this.CommandCollection[47];
            if ((PTradeCode.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(PTradeCode.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable1DataTable dataTable = new BankTransmentDS.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Tbl_MovementBankTypeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Tbl_MovementBankTypeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Tbl_MovementBankType";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("MoveType", "MoveType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Tbl_MovementBankType] WHERE (([ID] = @Original_ID) AND ((@IsNull_Nam" +
                "e = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_MoveType =" +
                " 1 AND [MoveType] IS NULL) OR ([MoveType] = @Original_MoveType)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MoveType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MoveType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Tbl_MovementBankType] ([Name], [MoveType]) VALUES (@Name, @MoveType)" +
                ";\r\nSELECT ID, Name, MoveType FROM Tbl_MovementBankType WHERE (ID = SCOPE_IDENTIT" +
                "Y())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MoveType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Tbl_MovementBankType] SET [Name] = @Name, [MoveType] = @MoveType WHERE (([ID] = @Original_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_MoveType = 1 AND [MoveType] IS NULL) OR ([MoveType] = @Original_MoveType)));
SELECT ID, Name, MoveType FROM Tbl_MovementBankType WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MoveType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MoveType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MoveType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID, Name, MoveType\r\nFROM            Tbl_MovementBankType\r\nWHERE    " +
                "    (MoveType IS NULL)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        ID, Name, MoveType\r\nFROM            Tbl_MovementBankType\r\nWHERE    " +
                "    (MoveType = @p)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillParentNull(BankTransmentDS.Tbl_MovementBankTypeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BankTransmentDS.Tbl_MovementBankTypeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BankTransmentDS.Tbl_MovementBankTypeDataTable dataTable = new BankTransmentDS.Tbl_MovementBankTypeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByParent(BankTransmentDS.Tbl_MovementBankTypeDataTable dataTable, global::System.Nullable<int> p) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((p.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.Tbl_MovementBankTypeDataTable GetDataBy(global::System.Nullable<int> p) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((p.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(p.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.Tbl_MovementBankTypeDataTable dataTable = new BankTransmentDS.Tbl_MovementBankTypeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BankTransmentDS.Tbl_MovementBankTypeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BankTransmentDS dataSet) {
            return this.Adapter.Update(dataSet, "Tbl_MovementBankType");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Name, global::System.Nullable<int> Original_MoveType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Name));
            }
            if ((Original_MoveType.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_MoveType.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Name, global::System.Nullable<int> MoveType) {
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));
            }
            if ((MoveType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(MoveType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Name, global::System.Nullable<int> MoveType, int Original_ID, string Original_Name, global::System.Nullable<int> Original_MoveType, int ID) {
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));
            }
            if ((MoveType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(MoveType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID));
            if ((Original_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Name));
            }
            if ((Original_MoveType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_MoveType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Name, global::System.Nullable<int> MoveType, int Original_ID, string Original_Name, global::System.Nullable<int> Original_MoveType) {
            return this.Update(Name, MoveType, Original_ID, Original_Name, Original_MoveType, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DataTable2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataTable2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DataTable2";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("MoveDat", "MoveDat");
            tableMapping.ColumnMappings.Add("BankDueDate", "BankDueDate");
            tableMapping.ColumnMappings.Add("NumberRefrBank", "NumberRefrBank");
            tableMapping.ColumnMappings.Add("DescriptionNote", "DescriptionNote");
            tableMapping.ColumnMappings.Add("TransferValue", "TransferValue");
            tableMapping.ColumnMappings.Add("DebitCredit", "DebitCredit");
            tableMapping.ColumnMappings.Add("Balance", "Balance");
            tableMapping.ColumnMappings.Add("BankID", "BankID");
            tableMapping.ColumnMappings.Add("BankAccID", "BankAccID");
            tableMapping.ColumnMappings.Add("MovementCode", "MovementCode");
            tableMapping.ColumnMappings.Add("FisicalYeariD", "FisicalYeariD");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("AccountBankNo", "AccountBankNo");
            tableMapping.ColumnMappings.Add("MoveType1", "MoveType1");
            tableMapping.ColumnMappings.Add("MoveType2", "MoveType2");
            tableMapping.ColumnMappings.Add("IsSelectedType", "IsSelectedType");
            tableMapping.ColumnMappings.Add("BankCheqID", "BankCheqID");
            tableMapping.ColumnMappings.Add("DepositCashID", "DepositCashID");
            tableMapping.ColumnMappings.Add("Expr1", "Expr1");
            tableMapping.ColumnMappings.Add("Expr2", "Expr2");
            tableMapping.ColumnMappings.Add("Expr3", "Expr3");
            tableMapping.ColumnMappings.Add("Expr4", "Expr4");
            tableMapping.ColumnMappings.Add("BranchId", "BranchId");
            tableMapping.ColumnMappings.Add("TradeMoveType", "TradeMoveType");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat, Tbl_BankMovement.Ban" +
                "kDueDate, Tbl_BankMovement.NumberRefrBank, Tbl_BankMovement.DescriptionNote, Tbl" +
                "_BankMovement.TransferValue, \r\n                         Tbl_BankMovement.DebitCr" +
                "edit, Tbl_BankMovement.Balance, Tbl_BankMovement.BankID, Tbl_BankMovement.BankAc" +
                "cID, Tbl_BankMovement.MovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Na" +
                "me, \r\n                         Tbl_AccountsBank.AccountBankNo, Tbl_AccoiuntBankK" +
                "ind.Name AS Expr1, Tbl_AccountsBankPurpose.Name AS Expr2, Tbl_MovementBankType_1" +
                ".Name AS Expr3, Tbl_MovementBankType.Name AS Expr4, \r\n                         T" +
                "bl_BankMovement.MoveType1, Tbl_BankMovement.MoveType2, Tbl_BankMovement.IsSelect" +
                "edType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.DepositCashID, Tbl_BankMov" +
                "ement.BranchId, \r\n                         Tbl_BankMovement.TradeMoveType\r\nFROM " +
                "           Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n    " +
                "                     Tbl_BankMovement LEFT OUTER JOIN\r\n                         " +
                "Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON " +
                "Tbl_MovementBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n        " +
                "                 Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                     " +
                "    Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurpose" +
                "ID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n        " +
                "                 Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tb" +
                "l_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl" +
                "_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @" +
                "PFromDate) AND (Tbl_BankMovement.MoveDat <= @PToDate) AND (Tbl_BankMovement.Bank" +
                "ID = @pBank) AND (Tbl_BankMovement.BankAccID = @PAccBnk) AND \r\n                 " +
                "        (Tbl_BankMovement.DebitCredit = N\'مدين\') OR\r\n                         (T" +
                "bl_BankMovement.MoveDat >= @PFromDate) AND (Tbl_BankMovement.MoveDat <= @PToDate" +
                ") AND (Tbl_BankMovement.BankID = @pBank) AND (Tbl_BankMovement.BankAccID = @PAcc" +
                "Bnk) AND \r\n                         (Tbl_BankMovement.DebitCredit = N\'دائن\')\r\nOR" +
                "DER BY Tbl_BankMovement.MoveDat";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PFromDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "MoveDat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PToDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "MoveDat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pBank", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAccBnk", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat, Tbl_BankMovement.Ban" +
                "kDueDate, Tbl_BankMovement.NumberRefrBank, Tbl_BankMovement.DescriptionNote, Tbl" +
                "_BankMovement.TransferValue, \r\n                         Tbl_BankMovement.DebitCr" +
                "edit, Tbl_BankMovement.Balance, Tbl_BankMovement.BankID, Tbl_BankMovement.BankAc" +
                "cID, Tbl_BankMovement.MovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Na" +
                "me, \r\n                         Tbl_AccountsBank.AccountBankNo, Tbl_AccoiuntBankK" +
                "ind.Name AS Expr1, Tbl_AccountsBankPurpose.Name AS Expr2, Tbl_MovementBankType_1" +
                ".Name AS Expr3, Tbl_MovementBankType.Name AS Expr4, \r\n                         T" +
                "bl_BankMovement.MoveType1, Tbl_BankMovement.MoveType2, Tbl_BankMovement.IsSelect" +
                "edType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.DepositCashID, Tbl_BankMov" +
                "ement.BranchId, \r\n                         Tbl_BankMovement.TradeMoveType\r\nFROM " +
                "           Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n    " +
                "                     Tbl_BankMovement LEFT OUTER JOIN\r\n                         " +
                "Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON " +
                "Tbl_MovementBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n        " +
                "                 Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                     " +
                "    Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurpose" +
                "ID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n        " +
                "                 Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tb" +
                "l_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl" +
                "_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @" +
                "PFromDate) AND (Tbl_BankMovement.MoveDat <= @PToDate) AND (Tbl_BankMovement.Bank" +
                "ID = @pBank) AND (Tbl_BankMovement.BankAccID = @PAccBnk) AND \r\n                 " +
                "        (Tbl_BankMovement.DebitCredit = @pCrDb)\r\nORDER BY Tbl_BankMovement.MoveD" +
                "at";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PFromDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "MoveDat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PToDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "MoveDat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pBank", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAccBnk", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pCrDb", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "DebitCredit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat, Tbl_BankMovement.Ban" +
                "kDueDate, Tbl_BankMovement.NumberRefrBank, Tbl_BankMovement.DescriptionNote, Tbl" +
                "_BankMovement.TransferValue, \r\n                         Tbl_BankMovement.DebitCr" +
                "edit, Tbl_BankMovement.Balance, Tbl_BankMovement.BankID, Tbl_BankMovement.BankAc" +
                "cID, Tbl_BankMovement.MovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks.Na" +
                "me, \r\n                         Tbl_AccountsBank.AccountBankNo, Tbl_AccoiuntBankK" +
                "ind.Name AS Expr1, Tbl_AccountsBankPurpose.Name AS Expr2, Tbl_MovementBankType_1" +
                ".Name AS Expr3, Tbl_MovementBankType.Name AS Expr4, \r\n                         T" +
                "bl_BankMovement.MoveType1, Tbl_BankMovement.MoveType2, Tbl_BankMovement.IsSelect" +
                "edType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement.DepositCashID, Tbl_BankMov" +
                "ement.BranchId, \r\n                         Tbl_BankMovement.TradeMoveType\r\nFROM " +
                "           Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN\r\n    " +
                "                     Tbl_BankMovement LEFT OUTER JOIN\r\n                         " +
                "Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON " +
                "Tbl_MovementBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN\r\n        " +
                "                 Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                     " +
                "    Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurpose" +
                "ID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n        " +
                "                 Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tb" +
                "l_AccoiuntBankKind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl" +
                "_BankMovement.BankID = Tbl_Banks.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @" +
                "PFromDate) AND (Tbl_BankMovement.MoveDat <= @PToDate) AND (Tbl_BankMovement.Move" +
                "Type1 = 5) AND (Tbl_BankMovement.MoveType2 = 15) AND \r\n                         " +
                "(Tbl_BankMovement.DebitCredit = N\'دائن\') AND (Tbl_BankMovement.BankID <> 2014)\r\n" +
                "ORDER BY Tbl_BankMovement.MoveDat";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PFromDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "MoveDat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PToDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "MoveDat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat, Tbl_BankMovement.BankDueDate, Tbl_BankMovement.DescriptionNote, Tbl_BankMovement.TransferValue, Tbl_BankMovement.DebitCredit
FROM            Tbl_MovementBankType AS Tbl_MovementBankType_1 RIGHT OUTER JOIN
                         Tbl_BankMovement LEFT OUTER JOIN
                         Tbl_MovementBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID ON Tbl_MovementBankType_1.ID = Tbl_BankMovement.MoveType1 LEFT OUTER JOIN
                         Tbl_AccountsBankPurpose RIGHT OUTER JOIN
                         Tbl_AccountsBank ON Tbl_AccountsBankPurpose.ID = Tbl_AccountsBank.AccPurposeID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN
                         Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER JOIN
                         Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID
WHERE        (Tbl_BankMovement.MoveDat >= @PFromDate) AND (Tbl_BankMovement.MoveDat <= @PToDate) AND (Tbl_BankMovement.MoveType1 = 5) AND (Tbl_BankMovement.MoveType2 = 15) AND 
                         (Tbl_BankMovement.BranchId IS NULL) AND (Tbl_BankMovement.TradeMoveType IS NULL) AND (Tbl_BankMovement.DebitCredit = N'دائن')
ORDER BY Tbl_BankMovement.MoveDat";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PFromDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "MoveDat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PToDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "MoveDat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BankTransmentDS.DataTable2DataTable dataTable, string PFromDate, string PToDate, global::System.Nullable<int> pBank, global::System.Nullable<int> PAccBnk) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PFromDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PFromDate));
            }
            if ((PToDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PToDate));
            }
            if ((pBank.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(pBank.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAccBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAccBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BankTransmentDS.DataTable2DataTable GetData(string PFromDate, string PToDate, global::System.Nullable<int> pBank, global::System.Nullable<int> PAccBnk) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PFromDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PFromDate));
            }
            if ((PToDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PToDate));
            }
            if ((pBank.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(pBank.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAccBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAccBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable2DataTable dataTable = new BankTransmentDS.DataTable2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDebitCredit(BankTransmentDS.DataTable2DataTable dataTable, string PFromDate, string PToDate, global::System.Nullable<int> pBank, global::System.Nullable<int> PAccBnk, string pCrDb) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((PFromDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PFromDate));
            }
            if ((PToDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PToDate));
            }
            if ((pBank.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(pBank.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAccBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAccBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pCrDb == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pCrDb));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable2DataTable GetDataBy(string PFromDate, string PToDate, global::System.Nullable<int> pBank, global::System.Nullable<int> PAccBnk, string pCrDb) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((PFromDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PFromDate));
            }
            if ((PToDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PToDate));
            }
            if ((pBank.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(pBank.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAccBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAccBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pCrDb == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pCrDb));
            }
            BankTransmentDS.DataTable2DataTable dataTable = new BankTransmentDS.DataTable2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByElectronicPay(BankTransmentDS.DataTable2DataTable dataTable, string PFromDate, string PToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((PFromDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PFromDate));
            }
            if ((PToDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PToDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable2DataTable GetDataBy1(string PFromDate, string PToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((PFromDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PFromDate));
            }
            if ((PToDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PToDate));
            }
            BankTransmentDS.DataTable2DataTable dataTable = new BankTransmentDS.DataTable2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByExpExcell(BankTransmentDS.DataTable2DataTable dataTable, string PFromDate, string PToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((PFromDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PFromDate));
            }
            if ((PToDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PToDate));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable2DataTable GetDataBy2(string PFromDate, string PToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((PFromDate == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PFromDate));
            }
            if ((PToDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PToDate));
            }
            BankTransmentDS.DataTable2DataTable dataTable = new BankTransmentDS.DataTable2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DataTable13TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataTable13TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DataTable13";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("BankID", "BankID");
            tableMapping.ColumnMappings.Add("BankAccID", "BankAccID");
            tableMapping.ColumnMappings.Add("MovementCode", "MovementCode");
            tableMapping.ColumnMappings.Add("FisicalYeariD", "FisicalYeariD");
            tableMapping.ColumnMappings.Add("تاريخ الحركه", "تاريخ الحركه");
            tableMapping.ColumnMappings.Add("تاريخ الحق", "تاريخ الحق");
            tableMapping.ColumnMappings.Add("كود البنك", "كود البنك");
            tableMapping.ColumnMappings.Add("وصف الحركه", "وصف الحركه");
            tableMapping.ColumnMappings.Add("قيمة التحويل", "قيمة التحويل");
            tableMapping.ColumnMappings.Add("نوع العمليه", "نوع العمليه");
            tableMapping.ColumnMappings.Add("الرصيد", "الرصيد");
            tableMapping.ColumnMappings.Add("البنك", "البنك");
            tableMapping.ColumnMappings.Add("رقم الحساب", "رقم الحساب");
            tableMapping.ColumnMappings.Add("نوع الحساب", "نوع الحساب");
            tableMapping.ColumnMappings.Add("الغرض من الحساب", "الغرض من الحساب");
            tableMapping.ColumnMappings.Add("التصنيف الرئيسي", "التصنيف الرئيسي");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("MoveType1", "MoveType1");
            tableMapping.ColumnMappings.Add("MoveType2", "MoveType2");
            tableMapping.ColumnMappings.Add("IsSelectedType", "IsSelectedType");
            tableMapping.ColumnMappings.Add("BankCheqID", "BankCheqID");
            tableMapping.ColumnMappings.Add("DepositCashID", "DepositCashID");
            tableMapping.ColumnMappings.Add("C1", "C1");
            tableMapping.ColumnMappings.Add("C6", "C6");
            tableMapping.ColumnMappings.Add("تاريخ الخركه", "تاريخ الخركه");
            tableMapping.ColumnMappings.Add("البنك المسحوب عليه", "البنك المسحوب عليه");
            tableMapping.ColumnMappings.Add("تاريخ الاضافه", "تاريخ الاضافه");
            tableMapping.ColumnMappings.Add("تمت الاضافه", "تمت الاضافه");
            tableMapping.ColumnMappings.Add("AddDateBank", "AddDateBank");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[8];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], \r\n                         Tbl_BankMovement.DescriptionNote AS [وصف " +
                "الحركه], Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, \r\n                         Tbl_BankMovement.BankAccID, Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_Acco" +
                "untsBank.AccountBankNo AS [رقم الحساب], \r\n                         Tbl_AccoiuntB" +
                "ankKind.Name AS [نوع الحساب], Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب]," +
                " Tbl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tb" +
                "l_BankMovement.MoveType1, \r\n                         Tbl_BankMovement.MoveType2," +
                " Tbl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement." +
                "DepositCashID, Tbl_BankMovement.C1, Tbl_BankMovement.C6, \r\n                     " +
                "    Tbl_BankMovement.MoveDat AS [تاريخ الخركه], Tbl_Banks.Name AS [البنك المسحوب" +
                " عليه], Tbl_BankCheques.AddDateAccBank AS [تاريخ الاضافه], Tbl_BankCheques.IsDep" +
                "ositNo AS [تمت الاضافه], \r\n                         Tbl_BankCheques.AddDateBank\r" +
                "\nFROM            Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                     " +
                "    Tbl_BankCheques LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_B" +
                "ankCheques.BankDrawnOnID = Tbl_Banks.ID RIGHT OUTER JOIN\r\n                      " +
                "   Tbl_AccountsBank RIGHT OUTER JOIN\r\n                         Tbl_BankMovement " +
                "ON Tbl_AccountsBank.ID = Tbl_BankMovement.BankAccID ON Tbl_BankCheques.ID = Tbl_" +
                "BankMovement.BankCheqID LEFT OUTER JOIN\r\n                         Tbl_MovementBa" +
                "nkType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID LEFT OUTER JOIN\r\n" +
                "                         Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tbl_B" +
                "ankMovement.MoveType1 = Tbl_MovementBankType_1.ID ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID LEFT OUTER JOIN\r\n                         Tbl_Ac" +
                "coiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID L" +
                "EFT OUTER JOIN\r\n                         Tbl_Banks AS Tbl_Banks_1 ON Tbl_BankMov" +
                "ement.BankID = Tbl_Banks_1.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) AN" +
                "D (Tbl_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (Tbl" +
                "_BankMovement.IsSelectedType = 1)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_Acco" +
                "untsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب" +
                "], \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب]," +
                " Tbl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tb" +
                "l_BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                        " +
                " Tbl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement." +
                "DepositCashID, Tbl_BankMovement.C1, Tbl_BankMovement.C6, Tbl_BankMovement.MoveDa" +
                "t AS [تاريخ الخركه], \r\n                         Tbl_Banks.Name AS [البنك المسحوب" +
                " عليه], Tbl_BankCheques.AddDateAccBank AS [تاريخ الاضافه], Tbl_BankCheques.IsDep" +
                "ositNo AS [تمت الاضافه], Tbl_BankCheques.AddDateBank, Tbl_BankMovement.IsCollect" +
                "ed\r\nFROM            Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                  " +
                "       Tbl_BankCheques LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tb" +
                "l_BankCheques.BankDrawnOnID = Tbl_Banks.ID RIGHT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBank RIGHT OUTER JOIN\r\n                         Tbl_BankMoveme" +
                "nt ON Tbl_AccountsBank.ID = Tbl_BankMovement.BankAccID ON Tbl_BankCheques.ID = T" +
                "bl_BankMovement.BankCheqID LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID LEFT OUTER JOI" +
                "N\r\n                         Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tb" +
                "l_BankMovement.MoveType1 = Tbl_MovementBankType_1.ID ON Tbl_AccountsBankPurpose." +
                "ID = Tbl_AccountsBank.AccPurposeID LEFT OUTER JOIN\r\n                         Tbl" +
                "_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.I" +
                "D LEFT OUTER JOIN\r\n                         Tbl_Banks AS Tbl_Banks_1 ON Tbl_Bank" +
                "Movement.BankID = Tbl_Banks_1.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1)" +
                " AND (Tbl_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (" +
                "Tbl_BankMovement.DescriptionNote LIKE N\'%\' + @pN + N\'%\') AND \r\n                 " +
                "        (Tbl_BankMovement.BankAccID = @PAcc) AND (Tbl_BankMovement.DebitCredit =" +
                " @pKndProcess) AND (Tbl_BankMovement.IsSelectedType > 0) AND (Tbl_BankMovement.I" +
                "sCollected = 0)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pN", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "وصف الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pKndProcess", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "نوع العمليه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], \r\n                         Tbl_BankMovement.DescriptionNote AS [وصف " +
                "الحركه], Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, \r\n                         Tbl_BankMovement.BankAccID, Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_Acco" +
                "untsBank.AccountBankNo AS [رقم الحساب], \r\n                         Tbl_AccoiuntB" +
                "ankKind.Name AS [نوع الحساب], Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب]," +
                " Tbl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tb" +
                "l_BankMovement.MoveType1, \r\n                         Tbl_BankMovement.MoveType2," +
                " Tbl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement." +
                "DepositCashID, Tbl_BankMovement.C1, Tbl_BankMovement.C6, \r\n                     " +
                "    Tbl_BankMovement.MoveDat AS [تاريخ الخركه], Tbl_Banks.Name AS [البنك المسحوب" +
                " عليه], Tbl_BankCheques.AddDateAccBank AS [تاريخ الاضافه], Tbl_BankCheques.IsDep" +
                "ositNo AS [تمت الاضافه], \r\n                         Tbl_BankCheques.AddDateBank\r" +
                "\nFROM            Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                     " +
                "    Tbl_BankCheques LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_B" +
                "ankCheques.BankDrawnOnID = Tbl_Banks.ID RIGHT OUTER JOIN\r\n                      " +
                "   Tbl_AccountsBank RIGHT OUTER JOIN\r\n                         Tbl_BankMovement " +
                "ON Tbl_AccountsBank.ID = Tbl_BankMovement.BankAccID ON Tbl_BankCheques.ID = Tbl_" +
                "BankMovement.BankCheqID LEFT OUTER JOIN\r\n                         Tbl_MovementBa" +
                "nkType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID LEFT OUTER JOIN\r\n" +
                "                         Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tbl_B" +
                "ankMovement.MoveType1 = Tbl_MovementBankType_1.ID ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID LEFT OUTER JOIN\r\n                         Tbl_Ac" +
                "coiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID L" +
                "EFT OUTER JOIN\r\n                         Tbl_Banks AS Tbl_Banks_1 ON Tbl_BankMov" +
                "ement.BankID = Tbl_Banks_1.ID\r\n\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) " +
                "AND (Tbl_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (T" +
                "bl_BankMovement.BankAccID = @p4) AND (Tbl_BankMovement.TransferValue = @V4) AND " +
                "\r\n                         (Tbl_BankMovement.DebitCredit = @PKndPrcs) AND (Tbl_B" +
                "ankMovement.IsSelectedType > 0)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@V4", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 3, "قيمة التحويل", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PKndPrcs", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "نوع العمليه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], \r\n                         Tbl_BankMovement.DescriptionNote AS [وصف " +
                "الحركه], Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, \r\n                         Tbl_BankMovement.BankAccID, Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_Acco" +
                "untsBank.AccountBankNo AS [رقم الحساب], \r\n                         Tbl_AccoiuntB" +
                "ankKind.Name AS [نوع الحساب], Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب]," +
                " Tbl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tb" +
                "l_BankMovement.MoveType1, \r\n                         Tbl_BankMovement.MoveType2," +
                " Tbl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement." +
                "DepositCashID, Tbl_BankMovement.C1, Tbl_BankMovement.C6, \r\n                     " +
                "    Tbl_BankMovement.MoveDat AS [تاريخ الخركه], Tbl_Banks.Name AS [البنك المسحوب" +
                " عليه], Tbl_BankCheques.AddDateAccBank AS [تاريخ الاضافه], Tbl_BankCheques.IsDep" +
                "ositNo AS [تمت الاضافه], \r\n                         Tbl_BankCheques.AddDateBank\r" +
                "\nFROM            Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                     " +
                "    Tbl_BankCheques LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_B" +
                "ankCheques.BankDrawnOnID = Tbl_Banks.ID RIGHT OUTER JOIN\r\n                      " +
                "   Tbl_AccountsBank RIGHT OUTER JOIN\r\n                         Tbl_BankMovement " +
                "ON Tbl_AccountsBank.ID = Tbl_BankMovement.BankAccID ON Tbl_BankCheques.ID = Tbl_" +
                "BankMovement.BankCheqID LEFT OUTER JOIN\r\n                         Tbl_MovementBa" +
                "nkType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID LEFT OUTER JOIN\r\n" +
                "                         Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tbl_B" +
                "ankMovement.MoveType1 = Tbl_MovementBankType_1.ID ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID LEFT OUTER JOIN\r\n                         Tbl_Ac" +
                "coiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID L" +
                "EFT OUTER JOIN\r\n                         Tbl_Banks AS Tbl_Banks_1 ON Tbl_BankMov" +
                "ement.BankID = Tbl_Banks_1.ID\r\n\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) " +
                "AND (Tbl_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (T" +
                "bl_BankMovement.BankAccID = @p4) AND (Tbl_BankMovement.IsSelectedType > 0)\r\nORDE" +
                "R BY [تاريخ الحركه]";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], \r\n                         Tbl_BankMovement.DescriptionNote AS [وصف " +
                "الحركه], Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, \r\n                         Tbl_BankMovement.BankAccID, Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_Acco" +
                "untsBank.AccountBankNo AS [رقم الحساب], \r\n                         Tbl_AccoiuntB" +
                "ankKind.Name AS [نوع الحساب], Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب]," +
                " Tbl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tb" +
                "l_BankMovement.MoveType1, \r\n                         Tbl_BankMovement.MoveType2," +
                " Tbl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement." +
                "DepositCashID, Tbl_BankMovement.C1, Tbl_BankMovement.C6, \r\n                     " +
                "    Tbl_BankMovement.MoveDat AS [تاريخ الخركه], Tbl_Banks.Name AS [البنك المسحوب" +
                " عليه], Tbl_BankCheques.AddDateAccBank AS [تاريخ الاضافه], Tbl_BankCheques.IsDep" +
                "ositNo AS [تمت الاضافه], \r\n                         Tbl_BankCheques.AddDateBank\r" +
                "\nFROM            Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                     " +
                "    Tbl_BankCheques LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_B" +
                "ankCheques.BankDrawnOnID = Tbl_Banks.ID RIGHT OUTER JOIN\r\n                      " +
                "   Tbl_AccountsBank RIGHT OUTER JOIN\r\n                         Tbl_BankMovement " +
                "ON Tbl_AccountsBank.ID = Tbl_BankMovement.BankAccID ON Tbl_BankCheques.ID = Tbl_" +
                "BankMovement.BankCheqID LEFT OUTER JOIN\r\n                         Tbl_MovementBa" +
                "nkType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID LEFT OUTER JOIN\r\n" +
                "                         Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tbl_B" +
                "ankMovement.MoveType1 = Tbl_MovementBankType_1.ID ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID LEFT OUTER JOIN\r\n                         Tbl_Ac" +
                "coiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID L" +
                "EFT OUTER JOIN\r\n                         Tbl_Banks AS Tbl_Banks_1 ON Tbl_BankMov" +
                "ement.BankID = Tbl_Banks_1.ID\r\n\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) " +
                "AND (Tbl_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (T" +
                "bl_BankMovement.BankAccID = @p4) AND (Tbl_BankMovement.IsSelectedType > 0) AND \r" +
                "\n                         (Tbl_BankMovement.IsSelectedType > 0)\r\nORDER BY [تاريخ" +
                " الحركه]";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], \r\n                         Tbl_BankMovement.DescriptionNote AS [وصف " +
                "الحركه], Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, \r\n                         Tbl_BankMovement.BankAccID, Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_Acco" +
                "untsBank.AccountBankNo AS [رقم الحساب], \r\n                         Tbl_AccoiuntB" +
                "ankKind.Name AS [نوع الحساب], Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب]," +
                " Tbl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tb" +
                "l_BankMovement.MoveType1, \r\n                         Tbl_BankMovement.MoveType2," +
                " Tbl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement." +
                "DepositCashID, Tbl_BankMovement.C1, Tbl_BankMovement.C6, \r\n                     " +
                "    Tbl_BankMovement.MoveDat AS [تاريخ الخركه], Tbl_Banks.Name AS [البنك المسحوب" +
                " عليه], Tbl_BankCheques.AddDateAccBank AS [تاريخ الاضافه], Tbl_BankCheques.IsDep" +
                "ositNo AS [تمت الاضافه], \r\n                         Tbl_BankCheques.AddDateBank\r" +
                "\nFROM            Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                     " +
                "    Tbl_BankCheques LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_B" +
                "ankCheques.BankDrawnOnID = Tbl_Banks.ID RIGHT OUTER JOIN\r\n                      " +
                "   Tbl_AccountsBank RIGHT OUTER JOIN\r\n                         Tbl_BankMovement " +
                "ON Tbl_AccountsBank.ID = Tbl_BankMovement.BankAccID ON Tbl_BankCheques.ID = Tbl_" +
                "BankMovement.BankCheqID LEFT OUTER JOIN\r\n                         Tbl_MovementBa" +
                "nkType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID LEFT OUTER JOIN\r\n" +
                "                         Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tbl_B" +
                "ankMovement.MoveType1 = Tbl_MovementBankType_1.ID ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID LEFT OUTER JOIN\r\n                         Tbl_Ac" +
                "coiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID L" +
                "EFT OUTER JOIN\r\n                         Tbl_Banks AS Tbl_Banks_1 ON Tbl_BankMov" +
                "ement.BankID = Tbl_Banks_1.ID\r\n\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) " +
                "AND (Tbl_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (T" +
                "bl_BankMovement.BankAccID = @p4) AND (Tbl_BankMovement.IsSelectedType > 0) AND \r" +
                "\n                         (Tbl_BankMovement.MoveType1 = @pType1) AND (Tbl_BankMo" +
                "vement.MoveType2 = @pType2)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pType1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pType2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], \r\n                         Tbl_BankMovement.DescriptionNote AS [وصف " +
                "الحركه], Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, \r\n                         Tbl_BankMovement.BankAccID, Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_Acco" +
                "untsBank.AccountBankNo AS [رقم الحساب], \r\n                         Tbl_AccoiuntB" +
                "ankKind.Name AS [نوع الحساب], Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب]," +
                " Tbl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tb" +
                "l_BankMovement.MoveType1, \r\n                         Tbl_BankMovement.MoveType2," +
                " Tbl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement." +
                "DepositCashID, Tbl_BankMovement.C1, Tbl_BankMovement.C6, \r\n                     " +
                "    Tbl_BankMovement.MoveDat AS [تاريخ الخركه], Tbl_Banks.Name AS [البنك المسحوب" +
                " عليه], Tbl_BankCheques.AddDateAccBank AS [تاريخ الاضافه], Tbl_BankCheques.IsDep" +
                "ositNo AS [تمت الاضافه], \r\n                         Tbl_BankCheques.AddDateBank\r" +
                "\nFROM            Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                     " +
                "    Tbl_BankCheques LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_B" +
                "ankCheques.BankDrawnOnID = Tbl_Banks.ID RIGHT OUTER JOIN\r\n                      " +
                "   Tbl_AccountsBank RIGHT OUTER JOIN\r\n                         Tbl_BankMovement " +
                "ON Tbl_AccountsBank.ID = Tbl_BankMovement.BankAccID ON Tbl_BankCheques.ID = Tbl_" +
                "BankMovement.BankCheqID LEFT OUTER JOIN\r\n                         Tbl_MovementBa" +
                "nkType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID LEFT OUTER JOIN\r\n" +
                "                         Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tbl_B" +
                "ankMovement.MoveType1 = Tbl_MovementBankType_1.ID ON Tbl_AccountsBankPurpose.ID " +
                "= Tbl_AccountsBank.AccPurposeID LEFT OUTER JOIN\r\n                         Tbl_Ac" +
                "coiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID L" +
                "EFT OUTER JOIN\r\n                         Tbl_Banks AS Tbl_Banks_1 ON Tbl_BankMov" +
                "ement.BankID = Tbl_Banks_1.ID\r\n\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1) " +
                "AND (Tbl_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (T" +
                "bl_BankMovement.DebitCredit LIKE N\'%\' + @pN + N\'%\') AND \r\n                      " +
                "   (Tbl_BankMovement.BankAccID = @pAccBnk) AND (Tbl_BankMovement.IsSelectedType " +
                "> 0)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "نوع العمليه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pAccBnk", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS [تاريخ الحركه], Tb" +
                "l_BankMovement.BankDueDate AS [تاريخ الحق], Tbl_BankMovement.NumberRefrBank AS [" +
                "كود البنك], Tbl_BankMovement.DescriptionNote AS [وصف الحركه], \r\n                " +
                "         Tbl_BankMovement.TransferValue AS [قيمة التحويل], Tbl_BankMovement.Debi" +
                "tCredit AS [نوع العمليه], Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.B" +
                "ankID, Tbl_BankMovement.BankAccID, \r\n                         Tbl_BankMovement.M" +
                "ovementCode, Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_Acco" +
                "untsBank.AccountBankNo AS [رقم الحساب], Tbl_AccoiuntBankKind.Name AS [نوع الحساب" +
                "], \r\n                         Tbl_AccountsBankPurpose.Name AS [الغرض من الحساب]," +
                " Tbl_MovementBankType_1.Name AS [التصنيف الرئيسي], Tbl_MovementBankType.Name, Tb" +
                "l_BankMovement.MoveType1, Tbl_BankMovement.MoveType2, \r\n                        " +
                " Tbl_BankMovement.IsSelectedType, Tbl_BankMovement.BankCheqID, Tbl_BankMovement." +
                "DepositCashID, Tbl_BankMovement.C1, Tbl_BankMovement.C6, Tbl_BankMovement.MoveDa" +
                "t AS [تاريخ الخركه], \r\n                         Tbl_Banks.Name AS [البنك المسحوب" +
                " عليه], Tbl_BankCheques.AddDateAccBank AS [تاريخ الاضافه], Tbl_BankCheques.IsDep" +
                "ositNo AS [تمت الاضافه], Tbl_BankCheques.AddDateBank, Tbl_BankMovement.IsCollect" +
                "ed\r\nFROM            Tbl_AccountsBankPurpose RIGHT OUTER JOIN\r\n                  " +
                "       Tbl_BankCheques LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tb" +
                "l_BankCheques.BankDrawnOnID = Tbl_Banks.ID RIGHT OUTER JOIN\r\n                   " +
                "      Tbl_AccountsBank RIGHT OUTER JOIN\r\n                         Tbl_BankMoveme" +
                "nt ON Tbl_AccountsBank.ID = Tbl_BankMovement.BankAccID ON Tbl_BankCheques.ID = T" +
                "bl_BankMovement.BankCheqID LEFT OUTER JOIN\r\n                         Tbl_Movemen" +
                "tBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID LEFT OUTER JOI" +
                "N\r\n                         Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tb" +
                "l_BankMovement.MoveType1 = Tbl_MovementBankType_1.ID ON Tbl_AccountsBankPurpose." +
                "ID = Tbl_AccountsBank.AccPurposeID LEFT OUTER JOIN\r\n                         Tbl" +
                "_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.I" +
                "D LEFT OUTER JOIN\r\n                         Tbl_Banks AS Tbl_Banks_1 ON Tbl_Bank" +
                "Movement.BankID = Tbl_Banks_1.ID\r\nWHERE        (Tbl_BankMovement.MoveDat >= @p1)" +
                " AND (Tbl_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.BankID = @p3) AND (" +
                "Tbl_BankMovement.DescriptionNote LIKE N\'%\' + @pN + N\'%\') AND \r\n                 " +
                "        (Tbl_BankMovement.IsSelectedType > 0) AND (Tbl_BankMovement.IsCollected " +
                "= 0)\r\nORDER BY [تاريخ الحركه]";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pN", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "وصف الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByMoveDate(BankTransmentDS.DataTable13DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BankTransmentDS.DataTable13DataTable GetData(string p1, string p2, global::System.Nullable<int> p3) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable13DataTable dataTable = new BankTransmentDS.DataTable13DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankAccBankSearchNote(BankTransmentDS.DataTable13DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> PAcc, string pKndProcess) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pKndProcess == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pKndProcess));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable13DataTable GetDataBy4(string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> PAcc, string pKndProcess) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pKndProcess == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pKndProcess));
            }
            BankTransmentDS.DataTable13DataTable dataTable = new BankTransmentDS.DataTable13DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBankAccValue(BankTransmentDS.DataTable13DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4, global::System.Nullable<decimal> V4, string PKndPrcs) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((V4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(V4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PKndPrcs == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(PKndPrcs));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable13DataTable GetDataBy1(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4, global::System.Nullable<decimal> V4, string PKndPrcs) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((V4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(V4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PKndPrcs == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(PKndPrcs));
            }
            BankTransmentDS.DataTable13DataTable dataTable = new BankTransmentDS.DataTable13DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDatesBankAccBank(BankTransmentDS.DataTable13DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable13DataTable GetDataBy(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable13DataTable dataTable = new BankTransmentDS.DataTable13DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDatesBankAccBankSp(BankTransmentDS.DataTable13DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable13DataTable GetDataBy5(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable13DataTable dataTable = new BankTransmentDS.DataTable13DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDatesBankIdBankAccTypes(BankTransmentDS.DataTable13DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4, global::System.Nullable<int> pType1, global::System.Nullable<int> pType2) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pType2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(pType2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable13DataTable GetDataBy6(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> p4, global::System.Nullable<int> pType1, global::System.Nullable<int> pType2) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(p4.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pType1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pType1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pType2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(pType2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable13DataTable dataTable = new BankTransmentDS.DataTable13DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByProcessKind(BankTransmentDS.DataTable13DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> pAccBnk) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((pAccBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pAccBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable13DataTable GetDataBy3(string p1, string p2, global::System.Nullable<int> p3, string pN, global::System.Nullable<int> pAccBnk) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((pAccBnk.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pAccBnk.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.DataTable13DataTable dataTable = new BankTransmentDS.DataTable13DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySearchNote(BankTransmentDS.DataTable13DataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, string pN) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DataTable13DataTable GetDataBy2(string p1, string p2, global::System.Nullable<int> p3, string pN) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pN == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pN));
            }
            BankTransmentDS.DataTable13DataTable dataTable = new BankTransmentDS.DataTable13DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Tbl_BankStringCHeqCashTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Tbl_BankStringCHeqCashTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Tbl_BankStringCHeqCash";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("BankID", "BankID");
            tableMapping.ColumnMappings.Add("MoveType", "MoveType");
            tableMapping.ColumnMappings.Add("MoveType1", "MoveType1");
            tableMapping.ColumnMappings.Add("التصنيف الرئيسي", "التصنيف الرئيسي");
            tableMapping.ColumnMappings.Add("التصنيف الفرعي", "التصنيف الفرعي");
            tableMapping.ColumnMappings.Add("الكلمه الثانيه", "الكلمه الثانيه");
            tableMapping.ColumnMappings.Add("البنك", "البنك");
            tableMapping.ColumnMappings.Add("الكلمه الاولى", "الكلمه الاولى");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Tbl_BankStringCHeqCash.ID, Tbl_BankStringCHeqCash.BankID, Tbl_BankStringCHeqCash.CheqString1 AS [الكلمه الثانيه], Tbl_Banks.Name AS البنك, Tbl_BankStringCHeqCash.MoveType, Tbl_BankStringCHeqCash.MoveType1, 
                         Tbl_MovementBankType.Name AS [التصنيف الرئيسي], Tbl_MovementBankType_1.Name AS [التصنيف الفرعي], Tbl_BankStringCHeqCash.CheqString AS [الكلمه الاولى]
FROM            Tbl_BankStringCHeqCash LEFT OUTER JOIN
                         Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tbl_BankStringCHeqCash.MoveType1 = Tbl_MovementBankType_1.ID LEFT OUTER JOIN
                         Tbl_MovementBankType ON Tbl_BankStringCHeqCash.MoveType = Tbl_MovementBankType.ID LEFT OUTER JOIN
                         Tbl_Banks ON Tbl_BankStringCHeqCash.BankID = Tbl_Banks.ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        Tbl_BankStringCHeqCash.ID, Tbl_BankStringCHeqCash.BankID, Tbl_BankStringCHeqCash.CheqString1 AS [الكلمه الثانيه], Tbl_Banks.Name AS البنك, Tbl_BankStringCHeqCash.MoveType, Tbl_BankStringCHeqCash.MoveType1, 
                         Tbl_MovementBankType.Name AS [التصنيف الرئيسي], Tbl_MovementBankType_1.Name AS [التصنيف الفرعي], Tbl_BankStringCHeqCash.CheqString AS [الكلمه الاولى]
FROM            Tbl_BankStringCHeqCash LEFT OUTER JOIN
                         Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tbl_BankStringCHeqCash.MoveType1 = Tbl_MovementBankType_1.ID LEFT OUTER JOIN
                         Tbl_MovementBankType ON Tbl_BankStringCHeqCash.MoveType = Tbl_MovementBankType.ID LEFT OUTER JOIN
                         Tbl_Banks ON Tbl_BankStringCHeqCash.BankID = Tbl_Banks.ID
WHERE        (BankID = @PBnk)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBnk", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BankTransmentDS.Tbl_BankStringCHeqCashDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BankTransmentDS.Tbl_BankStringCHeqCashDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BankTransmentDS.Tbl_BankStringCHeqCashDataTable dataTable = new BankTransmentDS.Tbl_BankStringCHeqCashDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBank(BankTransmentDS.Tbl_BankStringCHeqCashDataTable dataTable, int PBnk) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PBnk));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.Tbl_BankStringCHeqCashDataTable GetDataBy(int PBnk) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PBnk));
            BankTransmentDS.Tbl_BankStringCHeqCashDataTable dataTable = new BankTransmentDS.Tbl_BankStringCHeqCashDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Tbl_BankMovementTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Tbl_BankMovementTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Tbl_BankMovement";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("C1", "C1");
            tableMapping.ColumnMappings.Add("BankID", "BankID");
            tableMapping.ColumnMappings.Add("BankAccID", "BankAccID");
            tableMapping.ColumnMappings.Add("MovementCode", "MovementCode");
            tableMapping.ColumnMappings.Add("FisicalYeariD", "FisicalYeariD");
            tableMapping.ColumnMappings.Add("MoveType1", "MoveType1");
            tableMapping.ColumnMappings.Add("MoveType2", "MoveType2");
            tableMapping.ColumnMappings.Add("IsSelectedType", "IsSelectedType");
            tableMapping.ColumnMappings.Add("BankCheqID", "BankCheqID");
            tableMapping.ColumnMappings.Add("DepositCashID", "DepositCashID");
            tableMapping.ColumnMappings.Add("IsCollected", "IsCollected");
            tableMapping.ColumnMappings.Add("الرصيد", "الرصيد");
            tableMapping.ColumnMappings.Add("البنك", "البنك");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("AmountCheque", "AmountCheque");
            tableMapping.ColumnMappings.Add("ChequeNo", "ChequeNo");
            tableMapping.ColumnMappings.Add("ChequeDueDate", "ChequeDueDate");
            tableMapping.ColumnMappings.Add("AddDateBank", "AddDateBank");
            tableMapping.ColumnMappings.Add("TradeCollectionNo", "TradeCollectionNo");
            tableMapping.ColumnMappings.Add("AddDateAccBank", "AddDateAccBank");
            tableMapping.ColumnMappings.Add("BankDueDate", "BankDueDate");
            tableMapping.ColumnMappings.Add("تاريخ_الحركه", "تاريخ_الحركه");
            tableMapping.ColumnMappings.Add("تاريخ_الحق", "تاريخ_الحق");
            tableMapping.ColumnMappings.Add("كود_البنك", "كود_البنك");
            tableMapping.ColumnMappings.Add("وصف_الحركه", "وصف_الحركه");
            tableMapping.ColumnMappings.Add("قيمة_التحويل", "قيمة_التحويل");
            tableMapping.ColumnMappings.Add("نوع_العملية", "نوع_العملية");
            tableMapping.ColumnMappings.Add("رقم_الحساب", "رقم_الحساب");
            tableMapping.ColumnMappings.Add("نوع_الحساب", "نوع_الحساب");
            tableMapping.ColumnMappings.Add("الغرض_من_الحساب", "الغرض_من_الحساب");
            tableMapping.ColumnMappings.Add("التصنيف_الرئيسي", "التصنيف_الرئيسي");
            tableMapping.ColumnMappings.Add("Expr1", "Expr1");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS تاريخ_الحركه, Tbl_" +
                "BankMovement.BankDueDate AS تاريخ_الحق, Tbl_BankMovement.NumberRefrBank AS كود_ا" +
                "لبنك, Tbl_BankMovement.DescriptionNote AS وصف_الحركه, \r\n                        " +
                " Tbl_BankMovement.TransferValue AS قيمة_التحويل, Tbl_BankMovement.DebitCredit AS" +
                " نوع_العملية, Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.BankID, Tbl_B" +
                "ankMovement.BankAccID, \r\n                         Tbl_BankMovement.MovementCode," +
                " Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_AccountsBank.Acc" +
                "ountBankNo AS رقم_الحساب, Tbl_AccoiuntBankKind.Name AS نوع_الحساب, \r\n           " +
                "              Tbl_AccountsBankPurpose.Name AS الغرض_من_الحساب, Tbl_MovementBankT" +
                "ype_1.Name AS التصنيف_الرئيسي, Tbl_MovementBankType.Name, Tbl_BankMovement.MoveT" +
                "ype1, Tbl_BankMovement.MoveType2, \r\n                         Tbl_BankMovement.Is" +
                "SelectedType, Tbl_BankMovement.C1, Tbl_BankMovement.BankCheqID, Tbl_BankMovement" +
                ".DepositCashID, Tbl_BankMovement.IsCollected, Tbl_BankCheques.AmountCheque, \r\n  " +
                "                       Tbl_BankCheques.ChequeNo, Tbl_BankCheques.ChequeDueDate, " +
                "Tbl_BankCheques.AddDateBank, Tbl_BankCheques.TradeCollectionNo, Tbl_BankCheques." +
                "AddDateAccBank, Tbl_BankCheques.BankDueDate, \r\n                         Tbl_Acco" +
                "untsBankPurpose.ID AS Expr1\r\nFROM            Tbl_AccountsBankPurpose RIGHT OUTER" +
                " JOIN\r\n                         Tbl_BankMovement RIGHT OUTER JOIN\r\n             " +
                "            Tbl_AccountsBank LEFT OUTER JOIN\r\n                         Tbl_Banks" +
                " ON Tbl_AccountsBank.BankID = Tbl_Banks.ID ON Tbl_BankMovement.BankAccID = Tbl_A" +
                "ccountsBank.ID LEFT OUTER JOIN\r\n                         Tbl_MovementBankType ON" +
                " Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID RIGHT OUTER JOIN\r\n        " +
                "                 Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tbl_BankMovem" +
                "ent.MoveType1 = Tbl_MovementBankType_1.ID ON Tbl_AccountsBankPurpose.ID = Tbl_Ac" +
                "countsBank.AccPurposeID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBa" +
                "nkKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTE" +
                "R JOIN\r\n                         Tbl_Banks AS Tbl_Banks_1 ON Tbl_BankMovement.Ba" +
                "nkID = Tbl_Banks_1.ID FULL OUTER JOIN\r\n                         Tbl_BankCheques " +
                "ON Tbl_BankMovement.BankCheqID = Tbl_BankCheques.ID\r\nWHERE        (Tbl_BankMovem" +
                "ent.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement." +
                "BankID = @p3) AND (Tbl_BankMovement.BankAccID = @PAcc)\r\nORDER BY تاريخ_الحركه";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ_الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ_الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS تاريخ_الحركه, Tbl_" +
                "BankMovement.BankDueDate AS تاريخ_الحق, Tbl_BankMovement.NumberRefrBank AS كود_ا" +
                "لبنك, Tbl_BankMovement.DescriptionNote AS وصف_الحركه, \r\n                        " +
                " Tbl_BankMovement.TransferValue AS قيمة_التحويل, Tbl_BankMovement.DebitCredit AS" +
                " نوع_العملية, Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.BankID, Tbl_B" +
                "ankMovement.BankAccID, \r\n                         Tbl_BankMovement.MovementCode," +
                " Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_AccountsBank.Acc" +
                "ountBankNo AS رقم_الحساب, Tbl_AccoiuntBankKind.Name AS نوع_الحساب, \r\n           " +
                "              Tbl_AccountsBankPurpose.Name AS الغرض_من_الحساب, Tbl_MovementBankT" +
                "ype_1.Name AS التصنيف_الرئيسي, Tbl_MovementBankType.Name, Tbl_BankMovement.MoveT" +
                "ype1, Tbl_BankMovement.MoveType2, \r\n                         Tbl_BankMovement.Is" +
                "SelectedType, Tbl_BankMovement.C1, Tbl_BankMovement.BankCheqID, Tbl_BankMovement" +
                ".DepositCashID, Tbl_BankMovement.IsCollected, Tbl_BankCheques.AmountCheque, \r\n  " +
                "                       Tbl_BankCheques.ChequeNo, Tbl_BankCheques.ChequeDueDate, " +
                "Tbl_BankCheques.AddDateBank, Tbl_BankCheques.TradeCollectionNo, Tbl_BankCheques." +
                "AddDateAccBank, Tbl_BankCheques.BankDueDate, \r\n                         Tbl_Acco" +
                "untsBankPurpose.ID AS Expr1\r\nFROM            Tbl_AccountsBankPurpose RIGHT OUTER" +
                " JOIN\r\n                         Tbl_BankMovement LEFT OUTER JOIN\r\n              " +
                "           Tbl_MovementBankType AS Tbl_MovementBankType_1 ON Tbl_BankMovement.Mo" +
                "veType1 = Tbl_MovementBankType_1.ID RIGHT OUTER JOIN\r\n                         T" +
                "bl_AccountsBank LEFT OUTER JOIN\r\n                         Tbl_Banks ON Tbl_Accou" +
                "ntsBank.BankID = Tbl_Banks.ID ON Tbl_BankMovement.BankAccID = Tbl_AccountsBank.I" +
                "D LEFT OUTER JOIN\r\n                         Tbl_MovementBankType ON Tbl_BankMove" +
                "ment.MoveType2 = Tbl_MovementBankType.ID ON Tbl_AccountsBankPurpose.ID = Tbl_Acc" +
                "ountsBank.AccPurposeID LEFT OUTER JOIN\r\n                         Tbl_AccoiuntBan" +
                "kKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankKind.ID LEFT OUTER" +
                " JOIN\r\n                         Tbl_Banks AS Tbl_Banks_1 ON Tbl_BankMovement.Ban" +
                "kID = Tbl_Banks_1.ID FULL OUTER JOIN\r\n                         Tbl_BankCheques O" +
                "N Tbl_BankMovement.BankCheqID = Tbl_BankCheques.ID\r\nWHERE        (Tbl_BankMoveme" +
                "nt.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2) AND (Tbl_BankMovement.D" +
                "ebitCredit = N\'دائن\') AND (Tbl_AccountsBankPurpose.ID = @PpurposeID)\r\nORDER BY ت" +
                "اريخ_الحركه";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ_الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ_الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PpurposeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Expr1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS تاريخ_الحركه, Tbl_" +
                "BankMovement.BankDueDate AS تاريخ_الحق, Tbl_BankMovement.NumberRefrBank AS كود_ا" +
                "لبنك, Tbl_BankMovement.DescriptionNote AS وصف_الحركه, \r\n                        " +
                " Tbl_BankMovement.TransferValue AS قيمة_التحويل, Tbl_BankMovement.DebitCredit AS" +
                " نوع_العملية, Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.BankID, Tbl_B" +
                "ankMovement.BankAccID, \r\n                         Tbl_BankMovement.MovementCode," +
                " Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_AccountsBank.Acc" +
                "ountBankNo AS رقم_الحساب, Tbl_AccoiuntBankKind.Name AS نوع_الحساب, \r\n           " +
                "              Tbl_AccountsBankPurpose.Name AS الغرض_من_الحساب, Tbl_MovementBankT" +
                "ype_1.Name AS التصنيف_الرئيسي, Tbl_MovementBankType.Name, Tbl_BankMovement.MoveT" +
                "ype1, Tbl_BankMovement.MoveType2, \r\n                         Tbl_BankMovement.Is" +
                "SelectedType, Tbl_BankMovement.C1, Tbl_BankMovement.BankCheqID, Tbl_BankMovement" +
                ".DepositCashID, Tbl_BankMovement.IsCollected, Tbl_BankCheques.AmountCheque, \r\n  " +
                "                       Tbl_BankCheques.ChequeNo, Tbl_BankCheques.ChequeDueDate, " +
                "Tbl_BankCheques.AddDateBank, Tbl_BankCheques.TradeCollectionNo, Tbl_BankCheques." +
                "AddDateAccBank, Tbl_BankCheques.BankDueDate\r\nFROM            Tbl_AccountsBankPur" +
                "pose RIGHT OUTER JOIN\r\n                         Tbl_BankMovement RIGHT OUTER JOI" +
                "N\r\n                         Tbl_AccountsBank LEFT OUTER JOIN\r\n                  " +
                "       Tbl_Banks ON Tbl_AccountsBank.BankID = Tbl_Banks.ID ON Tbl_BankMovement.B" +
                "ankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                         Tbl_Mov" +
                "ementBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_MovementBankType AS Tbl_MovementBankType_1 " +
                "ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1.ID ON Tbl_AccountsBankPur" +
                "pose.ID = Tbl_AccountsBank.AccPurposeID LEFT OUTER JOIN\r\n                       " +
                "  Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankK" +
                "ind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks AS Tbl_Banks_1 ON Tbl" +
                "_BankMovement.BankID = Tbl_Banks_1.ID FULL OUTER JOIN\r\n                         " +
                "Tbl_BankCheques ON Tbl_BankMovement.BankCheqID = Tbl_BankCheques.ID\r\nWHERE      " +
                "  (Tbl_BankMovement.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2) AND (T" +
                "bl_BankMovement.BankID = @p3) AND (Tbl_BankMovement.BankAccID = @PAcc) AND \r\n   " +
                "                      (Tbl_BankMovement.IsCollected = @Pcollected)\r\nORDER BY تار" +
                "يخ_الحركه";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ_الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ_الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pcollected", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IsCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS تاريخ_الحركه, Tbl_" +
                "BankMovement.BankDueDate AS تاريخ_الحق, Tbl_BankMovement.NumberRefrBank AS كود_ا" +
                "لبنك, Tbl_BankMovement.DescriptionNote AS وصف_الحركه, \r\n                        " +
                " Tbl_BankMovement.TransferValue AS قيمة_التحويل, Tbl_BankMovement.DebitCredit AS" +
                " نوع_العملية, Tbl_BankMovement.Balance AS الرصيد, Tbl_BankMovement.BankID, Tbl_B" +
                "ankMovement.BankAccID, \r\n                         Tbl_BankMovement.MovementCode," +
                " Tbl_BankMovement.FisicalYeariD, Tbl_Banks_1.Name AS البنك, Tbl_AccountsBank.Acc" +
                "ountBankNo AS رقم_الحساب, Tbl_AccoiuntBankKind.Name AS نوع_الحساب, \r\n           " +
                "              Tbl_AccountsBankPurpose.Name AS الغرض_من_الحساب, Tbl_MovementBankT" +
                "ype_1.Name AS التصنيف_الرئيسي, Tbl_MovementBankType.Name, Tbl_BankMovement.MoveT" +
                "ype1, Tbl_BankMovement.MoveType2, \r\n                         Tbl_BankMovement.Is" +
                "SelectedType, Tbl_BankMovement.C1, Tbl_BankMovement.BankCheqID, Tbl_BankMovement" +
                ".DepositCashID, Tbl_BankMovement.IsCollected, Tbl_BankCheques.AmountCheque, \r\n  " +
                "                       Tbl_BankCheques.ChequeNo, Tbl_BankCheques.ChequeDueDate, " +
                "Tbl_BankCheques.AddDateBank, Tbl_BankCheques.TradeCollectionNo, Tbl_BankCheques." +
                "AddDateAccBank, Tbl_BankCheques.BankDueDate\r\nFROM            Tbl_AccountsBankPur" +
                "pose RIGHT OUTER JOIN\r\n                         Tbl_BankMovement RIGHT OUTER JOI" +
                "N\r\n                         Tbl_AccountsBank LEFT OUTER JOIN\r\n                  " +
                "       Tbl_Banks ON Tbl_AccountsBank.BankID = Tbl_Banks.ID ON Tbl_BankMovement.B" +
                "ankAccID = Tbl_AccountsBank.ID LEFT OUTER JOIN\r\n                         Tbl_Mov" +
                "ementBankType ON Tbl_BankMovement.MoveType2 = Tbl_MovementBankType.ID RIGHT OUTE" +
                "R JOIN\r\n                         Tbl_MovementBankType AS Tbl_MovementBankType_1 " +
                "ON Tbl_BankMovement.MoveType1 = Tbl_MovementBankType_1.ID ON Tbl_AccountsBankPur" +
                "pose.ID = Tbl_AccountsBank.AccPurposeID LEFT OUTER JOIN\r\n                       " +
                "  Tbl_AccoiuntBankKind ON Tbl_AccountsBank.KindAccountBankID = Tbl_AccoiuntBankK" +
                "ind.ID LEFT OUTER JOIN\r\n                         Tbl_Banks AS Tbl_Banks_1 ON Tbl" +
                "_BankMovement.BankID = Tbl_Banks_1.ID FULL OUTER JOIN\r\n                         " +
                "Tbl_BankCheques ON Tbl_BankMovement.BankCheqID = Tbl_BankCheques.ID\r\nWHERE      " +
                "  (Tbl_BankMovement.MoveDat >= @p1) AND (Tbl_BankMovement.MoveDat <= @p2) AND (T" +
                "bl_BankMovement.BankID = @p3) AND (Tbl_BankMovement.BankAccID = @PAcc) AND \r\n   " +
                "                      (Tbl_BankMovement.IsCollected = @Pcollected) AND (Tbl_Bank" +
                "Movement.MoveType1 = @Ptyp1) \r\n                         AND (Tbl_BankMovement.Mo" +
                "veType2 = @Ptyp2)\r\nORDER BY تاريخ_الحركه";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ_الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "تاريخ_الحركه", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pcollected", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IsCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ptyp1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ptyp2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MoveType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BankTransmentDS.Tbl_BankMovementDataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PAcc) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BankTransmentDS.Tbl_BankMovementDataTable GetData(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PAcc) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.Tbl_BankMovementDataTable dataTable = new BankTransmentDS.Tbl_BankMovementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAcountPurposeID(BankTransmentDS.Tbl_BankMovementDataTable dataTable, string p1, string p2, int PpurposeID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PpurposeID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.Tbl_BankMovementDataTable GetDataBy2(string p1, string p2, int PpurposeID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(PpurposeID));
            BankTransmentDS.Tbl_BankMovementDataTable dataTable = new BankTransmentDS.Tbl_BankMovementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCollectedNonCollected(BankTransmentDS.Tbl_BankMovementDataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PAcc, global::System.Nullable<bool> Pcollected) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Pcollected.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((bool)(Pcollected.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.Tbl_BankMovementDataTable GetDataBy(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PAcc, global::System.Nullable<bool> Pcollected) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Pcollected.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((bool)(Pcollected.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.Tbl_BankMovementDataTable dataTable = new BankTransmentDS.Tbl_BankMovementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCollectedNoTypOrNo(BankTransmentDS.Tbl_BankMovementDataTable dataTable, string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PAcc, global::System.Nullable<bool> Pcollected, global::System.Nullable<int> Ptyp1, global::System.Nullable<int> Ptyp2) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Pcollected.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((bool)(Pcollected.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Ptyp1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(Ptyp1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Ptyp2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(Ptyp2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.Tbl_BankMovementDataTable GetDataBy1(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<int> PAcc, global::System.Nullable<bool> Pcollected, global::System.Nullable<int> Ptyp1, global::System.Nullable<int> Ptyp2) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((p1 == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PAcc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(PAcc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Pcollected.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((bool)(Pcollected.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Ptyp1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(Ptyp1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Ptyp2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(Ptyp2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            BankTransmentDS.Tbl_BankMovementDataTable dataTable = new BankTransmentDS.Tbl_BankMovementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Tbl_CustmersTypeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Tbl_CustmersTypeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Tbl_CustmersType";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Accounting_GuidID", "Accounting_GuidID");
            tableMapping.ColumnMappings.Add("Parent_ID", "Parent_ID");
            tableMapping.ColumnMappings.Add("IsElectronicPaymentNo", "IsElectronicPaymentNo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Tbl_CustmersType] WHERE (([ID] = @Original_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_Parent_ID = 1 AND [Parent_ID] IS NULL) OR ([Parent_ID] = @Original_Parent_ID)) AND ((@IsNull_Accounting_GuidID = 1 AND [Accounting_GuidID] IS NULL) OR ([Accounting_GuidID] = @Original_Accounting_GuidID)) AND ((@IsNull_IsElectronicPaymentNo = 1 AND [IsElectronicPaymentNo] IS NULL) OR ([IsElectronicPaymentNo] = @Original_IsElectronicPaymentNo)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Parent_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parent_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Parent_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parent_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Accounting_GuidID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accounting_GuidID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Accounting_GuidID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accounting_GuidID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsElectronicPaymentNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsElectronicPaymentNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsElectronicPaymentNo", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsElectronicPaymentNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Tbl_CustmersType] ([Name], [Parent_ID], [Accounting_GuidID], [IsElectronicPaymentNo]) VALUES (@Name, @Parent_ID, @Accounting_GuidID, @IsElectronicPaymentNo);
SELECT ID, Name, Parent_ID, Accounting_GuidID, IsElectronicPaymentNo FROM Tbl_CustmersType WHERE (ID = SCOPE_IDENTITY()) ORDER BY Parent_ID, Name";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parent_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parent_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Accounting_GuidID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accounting_GuidID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsElectronicPaymentNo", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsElectronicPaymentNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Tbl_CustmersType] SET [Name] = @Name, [Parent_ID] = @Parent_ID, [Accounting_GuidID] = @Accounting_GuidID, [IsElectronicPaymentNo] = @IsElectronicPaymentNo WHERE (([ID] = @Original_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_Parent_ID = 1 AND [Parent_ID] IS NULL) OR ([Parent_ID] = @Original_Parent_ID)) AND ((@IsNull_Accounting_GuidID = 1 AND [Accounting_GuidID] IS NULL) OR ([Accounting_GuidID] = @Original_Accounting_GuidID)) AND ((@IsNull_IsElectronicPaymentNo = 1 AND [IsElectronicPaymentNo] IS NULL) OR ([IsElectronicPaymentNo] = @Original_IsElectronicPaymentNo)));
SELECT ID, Name, Parent_ID, Accounting_GuidID, IsElectronicPaymentNo FROM Tbl_CustmersType WHERE (ID = @ID) ORDER BY Parent_ID, Name";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parent_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parent_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Accounting_GuidID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accounting_GuidID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsElectronicPaymentNo", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsElectronicPaymentNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Parent_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parent_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Parent_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parent_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Accounting_GuidID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accounting_GuidID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Accounting_GuidID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accounting_GuidID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsElectronicPaymentNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsElectronicPaymentNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsElectronicPaymentNo", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsElectronicPaymentNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID, Name, Parent_ID, Accounting_GuidID, IsElectronicPaymentNo\r\nFROM" +
                "            Tbl_CustmersType\r\nORDER BY Parent_ID, Name";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT Accounting_GuidID, ID, IsElectronicPaymentNo, Name, Parent_ID FROM Tbl_Cus" +
                "tmersType WHERE (IsElectronicPaymentNo = 1) ORDER BY Parent_ID, Name";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BankTransmentDS.Tbl_CustmersTypeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BankTransmentDS.Tbl_CustmersTypeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BankTransmentDS.Tbl_CustmersTypeDataTable dataTable = new BankTransmentDS.Tbl_CustmersTypeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByElectronicPayment(BankTransmentDS.Tbl_CustmersTypeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.Tbl_CustmersTypeDataTable GetDataBy() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            BankTransmentDS.Tbl_CustmersTypeDataTable dataTable = new BankTransmentDS.Tbl_CustmersTypeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BankTransmentDS.Tbl_CustmersTypeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BankTransmentDS dataSet) {
            return this.Adapter.Update(dataSet, "Tbl_CustmersType");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Name, global::System.Nullable<int> Original_Parent_ID, global::System.Nullable<int> Original_Accounting_GuidID, global::System.Nullable<bool> Original_IsElectronicPaymentNo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Name));
            }
            if ((Original_Parent_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Parent_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Accounting_GuidID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Accounting_GuidID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_IsElectronicPaymentNo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_IsElectronicPaymentNo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Name, global::System.Nullable<int> Parent_ID, global::System.Nullable<int> Accounting_GuidID, global::System.Nullable<bool> IsElectronicPaymentNo) {
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));
            }
            if ((Parent_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Parent_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Accounting_GuidID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Accounting_GuidID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IsElectronicPaymentNo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(IsElectronicPaymentNo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Name, global::System.Nullable<int> Parent_ID, global::System.Nullable<int> Accounting_GuidID, global::System.Nullable<bool> IsElectronicPaymentNo, int Original_ID, string Original_Name, global::System.Nullable<int> Original_Parent_ID, global::System.Nullable<int> Original_Accounting_GuidID, global::System.Nullable<bool> Original_IsElectronicPaymentNo, int ID) {
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));
            }
            if ((Parent_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Parent_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Accounting_GuidID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Accounting_GuidID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IsElectronicPaymentNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(IsElectronicPaymentNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID));
            if ((Original_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));
            }
            if ((Original_Parent_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Parent_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Accounting_GuidID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Accounting_GuidID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_IsElectronicPaymentNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Original_IsElectronicPaymentNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Name, global::System.Nullable<int> Parent_ID, global::System.Nullable<int> Accounting_GuidID, global::System.Nullable<bool> IsElectronicPaymentNo, int Original_ID, string Original_Name, global::System.Nullable<int> Original_Parent_ID, global::System.Nullable<int> Original_Accounting_GuidID, global::System.Nullable<bool> Original_IsElectronicPaymentNo) {
            return this.Update(Name, Parent_ID, Accounting_GuidID, IsElectronicPaymentNo, Original_ID, Original_Name, Original_Parent_ID, Original_Accounting_GuidID, Original_IsElectronicPaymentNo, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DTBElectronicPayAuditTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DTBElectronicPayAuditTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DTBElectronicPayAudit";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("تاريخ_الحركه", "تاريخ_الحركه");
            tableMapping.ColumnMappings.Add("تاريخ_الحق", "تاريخ_الحق");
            tableMapping.ColumnMappings.Add("وصف_الحركه", "وصف_الحركه");
            tableMapping.ColumnMappings.Add("كود_الحركه", "كود_الحركه");
            tableMapping.ColumnMappings.Add("تاريخ_المراجعه", "تاريخ_المراجعه");
            tableMapping.ColumnMappings.Add("الملاحظه", "الملاحظه");
            tableMapping.ColumnMappings.Add("تاريخ_التعديل", "تاريخ_التعديل");
            tableMapping.ColumnMappings.Add("قيمة_الحركه", "قيمة_الحركه");
            tableMapping.ColumnMappings.Add("البنك", "البنك");
            tableMapping.ColumnMappings.Add("IsUpdate", "IsUpdate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FinancialSysApp.Properties.Settings.Default.FinancialSysConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS تاريخ_الحركه, Tbl_BankMovement.BankDueDate AS تاريخ_الحق, Tbl_BankMovement.DescriptionNote AS وصف_الحركه, Tbl_BankMovement.TransferValue AS قيمة_الحركه, 
                         Tbl_BankMovement.MovementCode AS كود_الحركه, Tbl_MovementTypingAudit.ReferenceDate AS تاريخ_المراجعه, Tbl_MovementTypingAudit.Note AS الملاحظه, Tbl_MovementTypingAudit.UpdateDate AS تاريخ_التعديل, 
                         Tbl_Banks.Name AS البنك, Tbl_MovementTypingAudit.IsUpdate
FROM            Tbl_BankMovement RIGHT OUTER JOIN
                         Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID FULL OUTER JOIN
                         Tbl_MovementTypingAudit ON Tbl_BankMovement.ID = Tbl_MovementTypingAudit.BankMovementID
WHERE        (Tbl_BankMovement.MoveType1 = 5) AND (Tbl_BankMovement.MoveType2 = 15) AND (Tbl_MovementTypingAudit.Note <> N'') AND (Tbl_MovementTypingAudit.IsUpdate IS NULL)
ORDER BY تاريخ_الحركه";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        Tbl_BankMovement.ID, Tbl_BankMovement.MoveDat AS تاريخ_الحركه, Tbl_BankMovement.BankDueDate AS تاريخ_الحق, Tbl_BankMovement.DescriptionNote AS وصف_الحركه, Tbl_BankMovement.TransferValue AS قيمة_الحركه, 
                         Tbl_BankMovement.MovementCode AS كود_الحركه, Tbl_MovementTypingAudit.ReferenceDate AS تاريخ_المراجعه, Tbl_MovementTypingAudit.Note AS الملاحظه, Tbl_MovementTypingAudit.UpdateDate AS تاريخ_التعديل, 
                         Tbl_Banks.Name AS البنك, Tbl_MovementTypingAudit.IsUpdate
FROM            Tbl_BankMovement RIGHT OUTER JOIN
                         Tbl_Banks ON Tbl_BankMovement.BankID = Tbl_Banks.ID FULL OUTER JOIN
                         Tbl_MovementTypingAudit ON Tbl_BankMovement.ID = Tbl_MovementTypingAudit.BankMovementID
WHERE        (Tbl_BankMovement.MoveType1 = 5) AND (Tbl_BankMovement.MoveType2 = 15) AND (Tbl_MovementTypingAudit.Note <> N'') AND (Tbl_MovementTypingAudit.IsUpdate = 1)
ORDER BY تاريخ_الحركه";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillElectronicPayWithErrors(BankTransmentDS.DTBElectronicPayAuditDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BankTransmentDS.DTBElectronicPayAuditDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BankTransmentDS.DTBElectronicPayAuditDataTable dataTable = new BankTransmentDS.DTBElectronicPayAuditDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBank(BankTransmentDS.DTBElectronicPayAuditDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BankTransmentDS.DTBElectronicPayAuditDataTable GetDataBy() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            BankTransmentDS.DTBElectronicPayAuditDataTable dataTable = new BankTransmentDS.DTBElectronicPayAuditDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Tbl_MovementBankTypeTableAdapter _tbl_MovementBankTypeTableAdapter;
        
        private Tbl_CustmersTypeTableAdapter _tbl_CustmersTypeTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Tbl_MovementBankTypeTableAdapter Tbl_MovementBankTypeTableAdapter {
            get {
                return this._tbl_MovementBankTypeTableAdapter;
            }
            set {
                this._tbl_MovementBankTypeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Tbl_CustmersTypeTableAdapter Tbl_CustmersTypeTableAdapter {
            get {
                return this._tbl_CustmersTypeTableAdapter;
            }
            set {
                this._tbl_CustmersTypeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tbl_MovementBankTypeTableAdapter != null) 
                            && (this._tbl_MovementBankTypeTableAdapter.Connection != null))) {
                    return this._tbl_MovementBankTypeTableAdapter.Connection;
                }
                if (((this._tbl_CustmersTypeTableAdapter != null) 
                            && (this._tbl_CustmersTypeTableAdapter.Connection != null))) {
                    return this._tbl_CustmersTypeTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tbl_MovementBankTypeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tbl_CustmersTypeTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(BankTransmentDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tbl_MovementBankTypeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Tbl_MovementBankType.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbl_MovementBankTypeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tbl_CustmersTypeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Tbl_CustmersType.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tbl_CustmersTypeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(BankTransmentDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tbl_MovementBankTypeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Tbl_MovementBankType.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbl_MovementBankTypeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tbl_CustmersTypeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Tbl_CustmersType.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tbl_CustmersTypeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(BankTransmentDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tbl_CustmersTypeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Tbl_CustmersType.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbl_CustmersTypeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tbl_MovementBankTypeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Tbl_MovementBankType.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tbl_MovementBankTypeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(BankTransmentDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tbl_MovementBankTypeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbl_MovementBankTypeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tbl_CustmersTypeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tbl_CustmersTypeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tbl_MovementBankTypeTableAdapter != null)) {
                    revertConnections.Add(this._tbl_MovementBankTypeTableAdapter, this._tbl_MovementBankTypeTableAdapter.Connection);
                    this._tbl_MovementBankTypeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tbl_MovementBankTypeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tbl_MovementBankTypeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbl_MovementBankTypeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbl_MovementBankTypeTableAdapter.Adapter);
                    }
                }
                if ((this._tbl_CustmersTypeTableAdapter != null)) {
                    revertConnections.Add(this._tbl_CustmersTypeTableAdapter, this._tbl_CustmersTypeTableAdapter.Connection);
                    this._tbl_CustmersTypeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tbl_CustmersTypeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tbl_CustmersTypeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tbl_CustmersTypeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tbl_CustmersTypeTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tbl_MovementBankTypeTableAdapter != null)) {
                    this._tbl_MovementBankTypeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tbl_MovementBankTypeTableAdapter]));
                    this._tbl_MovementBankTypeTableAdapter.Transaction = null;
                }
                if ((this._tbl_CustmersTypeTableAdapter != null)) {
                    this._tbl_CustmersTypeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tbl_CustmersTypeTableAdapter]));
                    this._tbl_CustmersTypeTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591